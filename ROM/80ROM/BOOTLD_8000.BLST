 38)   007A 00          		 @SERERR DEFS 1       ;SERERR NOT USED BY SERIAL USED BY NBSETLCD	;SERERR NOT USED BY SERIAL USED BY NBSETLCD
 42)   007B 00          		 @LCDCX DEFS 1        ;DISPLAY X POS (0..F  FOR 1..16)	;DISPLAY X POS (0..F  FOR 1..16)
 43)   007C 00          		 @LCDCY DEFS 1        ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 44)   007D 00          		 @LCD_DSPCTRL DEFS 1       ;LCD I2C 16X2	;LCD I2C 16X2
 45)   007E 00          		 @LCD_DSPMODE DEFS 1       ;LCD I2C 16X2	;LCD I2C 16X2
 46)   007F 00          		 @LCD_STSMASK DEFS 1       ;LCD I2C 16X2  	;LCD I2C 16X2
 48)   0080 00          		 @KEYCTR DEFS 1        ;IN NB SYSTEM VARS	;IN NB SYSTEM VARS
 49)   0081 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
 51)   0082 00 00 00 00 		 @BANKS DEFS 8        ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 51)   0086 00 00 00 00 		 @BANKS DEFS 8        ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 53)   008A 00          		 @STRG_STAT DEFS 1       ;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED,1=CONNECTED,BIT 7 DEVICE EXISTS	;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED, 1=CONNECTED, BIT 7 DEVICE EXISTS
 54)   008B 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   008F 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   0093 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   0097 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   009B 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   009F 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   00A3 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   00A7 00 00       		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 55)   00A9 	            		 @STRGBUFF EQU CHANCN       ;USED FOR DIRECTORY AND FILENAME	;USED FOR DIRECTORY AND FILENAME
 57)   00A9 	            		 @BUFFER EQU B2DBUF       ; 20 BYTE BUFFER FOR I2C USAGE  	; 20 BYTE BUFFER FOR I2C USAGE
 59)   00A9 00 00       		 @PRGEX DEFS 2        ;ONLY FOR BOOTL	;ONLY FOR BOOTL
 60)   00AB 00          		 TVSTAT DEFS 1	;
 61)   00AC 00 00       		 @LINESTR DEFS 2       ;ADDRESS OF LINEBUF FOR PRINTING ON STRING	;ADDRESS OF LINEBUF FOR PRINTING ON STRING
 62)   00AE 00          		 @LINEPOS DEFS 1	;
 63)   00AF 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00B3 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00B7 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00BB 00          		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 64)   00BC 00 00 00 00 		 @NUMBUF DEFS 7    	;
 64)   00C0 00 00 00    		 @NUMBUF DEFS 7    	;
 65)   00C3 00 00 00 00 		 @B2DINV DEFS 8        ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 65)   00C7 00 00 00 00 		 @B2DINV DEFS 8        ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 66)   00CB 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00CF 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00D3 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00D7 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00DB 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 67)   00DF 00          		 @B2DEND DEFS 1        ;0 FOR TERMINATE THE STRING        	;0 FOR TERMINATE THE STRING
 72)   00E0 00 00       		@CHANDATA:     DEFS 2	;
 73)   00E2 00 00       		               DEFS 2	;
 74)   00E4 00 00       		               DEFS 2	;
 75)   00E6 00 00       		               DEFS 2	;
 77)   00E8 00 00       		@CHANDEL:      DEFS 2	;
 78)   00EA 00 00       		               DEFS 2	;
 79)   00EC 00 00       		               DEFS 2	;
 80)   00EE 00 00       		               DEFS 2	;
 82)   00F0 00          		@CHANCN:       DEFS 1	;
 83)   00F1 00          		               DEFS 1	;
 84)   00F2 00          		               DEFS 1	;
 85)   00F3 00          		               DEFS 1	;
 86)   00F4 00          		@CHANST:       DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED     	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
112)   8000 2F          		 CPL         ;ROM IS HERE	;ROM IS HERE
113)   8001 C3 AE 81    		 JP START	;
114)   8004 C3 5F 80    		 JP GETKEY        ;CALL HERE FROM NB ROM TO FIND THE GTNBKEY  $8004	;CALL HERE FROM NB ROM TO FIND THE GTNBKEY  $8004
115)   8007 C3 8F 80    		 JP RSTX        ; CALL HERE FROM NB TO FIND SERIAL TRASMIT  $8007	; CALL HERE FROM NB TO FIND SERIAL TRASMIT  $8007
116)   800A C3 93 80    		 JP RSRX        ; CALL HERE FROM NB TO FIND SERIAL RECEIVE  $800A	; CALL HERE FROM NB TO FIND SERIAL RECEIVE  $800A
117)   800D C3 A9 80    		 JP NBSTLCD        ;CALL HERE FROM NB TO FIND THE NBSETLCD $800D	;CALL HERE FROM NB TO FIND THE NBSETLCD $800D
118)   8010 C3 01 82    		 JP MENU        ;$8010	;$8010
119)   8013 C3 4F 80    		 JP CHKKEY       ;CALL HERE FROM NB TO FIND THE CHKKEY $8013 RET NZ FOR KEY AVAIL	;CALL HERE FROM NB TO FIND THE CHKKEY $8013 RET NZ FOR KEY AVAIL
124)   8016 CD 56 8B    		@OS_PRINTCHAR: CALL RS_TX	;
125)   8019 C9          		 RET	;
129)   801A 7E          		@OS_PRINTTEXT: LD A, (HL)	;
130)   801B FE 00       		 CP 0	;
131)   801D C8          		 RET Z	;
132)   801E E5          		 PUSH HL	;
133)   801F CD 16 80    		 CALL OS_PRINTCHAR	;
134)   8022 E1          		 POP HL	;
135)   8023 23          		 INC HL	;
136)   8024 18 F4       		 JR OS_PRINTTEXT	;
139)   8026 E1          		@OS_PRINTMSG: POP HL	;
140)   8027 CD 1A 80    		 CALL OS_PRINTTEXT	;
141)   802A 23          		 INC HL	;
142)   802B E5          		 PUSH HL        ;CONTINUE AFTER THE MESG	;CONTINUE AFTER THE MESG
143)   802C C9          		 RET	;
149)   802D DF 3C       		@OS_PRCHSCR: DEFW WPTCHAR	;
150)   802F C9          		 RET	;
154)   8030 7E          		@OS_PRMESSCR:  LD A,(HL)	;
155)   8031 B7          		 OR A	;
156)   8032 C8          		 RET Z	;
157)   8033 DF 3C       		 DEFW WPTCHAR	;
158)   8035 23          		 INC HL	;
159)   8036 18 F8       		 JR OS_PRMESSCR	;
161)   8038 7E          		@OS_PRMESSCRSFE: LD A,(HL)	;
162)   8039 B7          		 OR A	;
163)   803A C8          		 RET Z	;
164)   803B FE 0A       		 CP $0A	;
165)   803D 28 04       		 JR Z,PMS_PRN	;
166)   803F FE 1F       		 CP 31 	;
167)   8041 38 04       		 JR C,PMS_SKP	;
168)   8043 DF 3C       		PMS_PRN: DEFW WPTCHAR	;
169)   8045 18 05       		 JR PMS_CNT	;
170)   8047 E5          		PMS_SKP:       PUSH HL	;
171)   8048 CD F2 80    		 CALL SOUTAS	;
172)   804B E1          		 POP HL	;
173)   804C 23          		PMS_CNT: INC HL	;
174)   804D 18 E9       		 JR OS_PRMESSCRSFE	;
178)   804F 47          		CHKKEY: LD B,A	;
179)   8050 CD BD 8B    		 CALL RS_KEYRD 	;
180)   8053 20 04       		 JR NZ, CK_EX       ;ZF SET IF NO KEY ON SERIAL	;ZF SET IF NO KEY ON SERIAL
181)   8055 DB 06       		 IN A,(6)	;
182)   8057 CB 5F       		 BIT 3,A        ;CHECK IF REAL KBD HAS AVAIL KEY, ZF SET IF NO KEY ON REAL KBD	;CHECK IF REAL KBD HAS AVAIL KEY, ZF SET IF NO KEY ON REAL KBD
183)   8059 78          		CK_EX: LD A,B	;
184)   805A 16 A0       		 LD D,$A0        ;DISPCOM 	;DISPCOM
185)   805C CB B6       		 RES 6,(HL)       ;KDATA= BIT 6 	;KDATA= BIT 6
186)   805E C9          		 RET	;
188)   805F E5          		GETKEY: PUSH HL	;
189)   8060 D5          		 PUSH DE	;
190)   8061 C5          		 PUSH BC	;
191)   8062 DD E5       		 PUSH IX	;
193)   8064 CD EE 89    		 CALL PS2KEYAVAIL       ;ZF=0 IF WE HAVE A KEY ELSE 1	;ZF=0 IF WE HAVE A KEY ELSE 1
194)   8067 20 05       		 JR NZ, KEYAVAIL       ;CHECK FOR SERIAL INPUT	;CHECK FOR SERIAL INPUT
195)   8069 CD F3 89    		 CALL READKBCHAR       ;READ KEY FROM PS/2	;READ KEY FROM PS/2
196)   806C 18 10       		 JR RGT        ;NB TRANSLATION AND EXIT	;NB TRANSLATION AND EXIT
198)   806E CD 8D 8B    		KEYAVAIL: CALL RS_RX       ;GET A CHAR FROM RS232 OR PS2_KEYB	;GET A CHAR FROM RS232 OR PS2_KEYB
199)   8071 FE FE       		 CP 254        ;BREAK KEY	;BREAK KEY
200)   8073 20 09       		 JR NZ,RGT	;
206)   8075 21 3C 00    		 LD HL,COPST	;
207)   8078 36 66       		 LD (HL),102  ;SIMULATE BREAK	;SIMULATE BREAK
208)   807A 3E 19       		 LD A,$19 	;
209)   807C 18 03       		 JR KAEXIT	;
210)   807E CD 38 88    		RGT: CALL GTNBKEY        ;KEY PRESSED TRANSLATE FOR NB	;KEY PRESSED TRANSLATE FOR NB
219)   8081 DD E1       		KAEXIT: POP IX	;
220)   8083 C1          		 POP BC	;
221)   8084 D1          		 POP DE	;
222)   8085 E1          		 POP HL  	;
223)   8086 FE 00       		 CP 0         ;CHECK IF INVALID KEY	;CHECK IF INVALID KEY
224)   8088 C0          		 RET NZ	;
225)   8089 CB B6       		 RES KDATA (HL)        ; KEY INVALID RESET KDATA TEST BIT	; KEY INVALID RESET KDATA TEST BIT
226)   808B 23          		 INC HL         ;GET TO THE LAST VALID KEY	;GET TO THE LAST VALID KEY
227)   808C 7E          		 LD A, (HL)	;
228)   808D 2B          		 DEC HL	;
229)   808E C9          		 RET	;
231)   808F CD 56 8B    		RSTX: CALL RS_TX	;
232)   8092 C9          		 RET	;
234)   8093 CD 8D 8B    		RSRX: CALL RS_RX	;
235)   8096 C9          		 RET	;
238)   8097 E5          		LCD16SETCURS:  PUSH HL	;
239)   8098 C5          		 PUSH BC	;
240)   8099 CD 85 94    		 CALL LCD16_SETCURS       ;SET LCD TO LCDCX,LCDCY	;SET LCD TO LCDCX,LCDCY
241)   809C C1          		 POP BC	;
242)   809D E1          		 POP HL	;
243)   809E C9          		 RET	;
245)   809F E5          		LCD16PRCHR: PUSH HL     ;OUTPUT CHAR TO LCD	;OUTPUT CHAR TO LCD
246)   80A0 C5          		 PUSH BC	;
247)   80A1 D5          		 PUSH DE	;
248)   80A2 CD 74 94    		 CALL LCD16_PRCHR	;
249)   80A5 D1          		 POP DE	;
250)   80A6 C1          		 POP BC	;
251)   80A7 E1          		 POP HL	;
252)   80A8 C9          		 RET	;
258)   80A9 D5          		NBSTLCD: PUSH DE	;
259)   80AA F5          		 PUSH AF	;
260)   80AB C5          		 PUSH BC	;
261)   80AC E5          		 PUSH HL	;
262)   80AD 21 7A 00    		 LD HL,SERERR	;
263)   80B0 35          		 DEC (HL)	;
264)   80B1 7E          		 LD A,(HL)	;
265)   80B2 B7          		 OR A	;
266)   80B3 28 05       		 JR Z, NBLSEND	;
267)   80B5 E1          		NBLEXIT:       POP HL	;
268)   80B6 C1          		 POP BC	;
269)   80B7 F1          		 POP AF	;
270)   80B8 D1          		 POP DE  	;
271)   80B9 C9          		 RET	;
273)   80BA 36 03       		NBLSEND: LD (HL),3         ;EVERY 5 TIMES SEND DATA TO LCD  	;EVERY 5 TIMES SEND DATA TO LCD
274)   80BC E1          		 POP HL	;
275)   80BD E5          		 PUSH HL	;
276)   80BE 42          		 LD B, D        ;TOTAL CHARS	;TOTAL CHARS
277)   80BF 05          		 DEC B	;
278)   80C0 05          		 DEC B         ;SKIP 2	;SKIP 2
279)   80C1 11 0F 00    		 LD DE, 15        ;START FROM THE END	;START FROM THE END
280)   80C4 19          		 ADD HL, DE	;
281)   80C5 AF          		 XOR A	;
282)   80C6 11 7B 00    		 LD DE, LCDCX        ;LCD POSITION	;LCD POSITION
283)   80C9 12          		 LD (DE), A	;
284)   80CA 13          		 INC DE	;
285)   80CB 12          		 LD (DE), A	;
287)   80CC D5          		 PUSH DE	;
288)   80CD 57          		 LD D, A	;
289)   80CE 5F          		 LD E, A	;
290)   80CF CD 97 80    		 CALL LCD16SETCURS       ;SET LCD TO LCDCX,LCDCY	;SET LCD TO LCDCX,LCDCY
291)   80D2 D1          		 POP DE	;
292)   80D3 1B          		 DEC DE         ;POSITION ON LCDCX	;POSITION ON LCDCX
293)   80D4 0E 00       		 LD C, 0        ;LCD POSITION COUNT	;LCD POSITION COUNT
294)   80D6 7E          		NBSETLP: LD A, (HL)	;
295)   80D7 CB 7F       		 BIT 7, A        ;CHECK IF CURSOR HERE	;CHECK IF CURSOR HERE
296)   80D9 28 06       		 JR Z, NBNXT	;
297)   80DB F5          		 PUSH AF	;
298)   80DC 79          		 LD A, C	;
299)   80DD 12          		 LD (DE), A        ;POSITION CURSOR	;POSITION CURSOR
300)   80DE F1          		 POP AF	;
301)   80DF CB BF       		 RES 7, A        ;CLEAR CHAR FROM CURSOR INFO	;CLEAR CHAR FROM CURSOR INFO
302)   80E1 CD 9F 80    		NBNXT: CALL LCD16PRCHR       ;OUTPUT CHAR TO LCD	;OUTPUT CHAR TO LCD
303)   80E4 2B          		 DEC HL	;
304)   80E5 0C          		 INC C	;
305)   80E6 10 EE       		 DJNZ NBSETLP        ;LOOP NEXT CHAR	;LOOP NEXT CHAR
306)   80E8 1A          		 LD A,(DE)	;
307)   80E9 57          		 LD D, A	;
308)   80EA 1E 00       		 LD E, 0	;
309)   80EC CD 85 94    		 CALL LCD16_SETCURS       ;POSITION CURSOR	;POSITION CURSOR
310)   80EF C3 B5 80    		 JP NBLEXIT	;
314)   80F2 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
315)   80F3 26 00       		 LD H, 0	;
316)   80F5 6F          		 LD L, A	;
317)   80F6 11 AF 00    		 LD DE, MYNUM	;
318)   80F9 CD DB 9A    		 CALL OUTASC	;
320)   80FC 3E 0A       		 LD A, 10	;
321)   80FE 12          		 LD (DE), A	;
322)   80FF 13          		 INC DE	;
323)   8100 3E 0D       		 LD A, 13	;
324)   8102 12          		 LD (DE), A	;
325)   8103 13          		 INC DE	;
326)   8104 AF          		 XOR A	;
327)   8105 12          		 LD (DE), A	;
329)   8106 21 AF 00    		 LD HL, MYNUM	;
330)   8109 CD 65 8B    		 CALL RS_TXT	;
331)   810C F1          		 POP AF	;
332)   810D C9          		 RET	;
335)   810E E5          		TVON: PUSH HL	;
336)   810F 21 AB 00    		 LD HL, TVSTAT	;
337)   8112 CB D6       		 SET 2, (HL)	;
338)   8114 21 24 00    		 LD HL, 36	;
339)   8117 CB D6       		 SET 2, (HL)	;
340)   8119 E1          		 POP HL	;
341)   811A 18 12       		 JR RESTV	;
344)   811C E5          		TVOFF: PUSH HL	;
345)   811D 21 AB 00    		 LD HL, TVSTAT	;
346)   8120 CB 96       		 RES 2, (HL)	;
347)   8122 21 24 00    		 LD HL, 36	;
348)   8125 CB 96       		 RES 2, (HL)	;
349)   8127 E1          		 POP HL	;
350)   8128 18 04       		 JR RESTV	;
353)   812A AF          		TVOFTM: XOR A         ;TV OFF	;TV OFF
354)   812B D3 07       		 OUT (7), A	;
355)   812D C9          		 RET	;
357)   812E E5          		RESTV: PUSH HL	;
358)   812F 21 AB 00    		 LD HL, TVSTAT	;
359)   8132 7E          		 LD A, (HL)	;
360)   8133 D3 07       		 OUT (7), A	;
361)   8135 3E 05       		 LD A, 5	;
362)   8137 D3 09       		 OUT (9), A        ; SET DISPLAY ADDRESS	; SET DISPLAY ADDRESS
363)   8139 E1          		 POP HL	;
364)   813A C9          		 RET	;
367)   813B 5C 43 48 53 		FONTNAME1 DEFM "\CHSET4.CHR"	;
367)   813F 45 54 34 2E 		FONTNAME1 DEFM "\CHSET4.CHR"	;
367)   8143 43 48 52    		FONTNAME1 DEFM "\CHSET4.CHR"	;
368)   8146 00          		 DB 0	;
369)   8147 5C 43 48 53 		FONTNAME2 DEFM "\CHSET2.CHR"	;
369)   814B 45 54 32 2E 		FONTNAME2 DEFM "\CHSET2.CHR"	;
369)   814F 43 48 52    		FONTNAME2 DEFM "\CHSET2.CHR"	;
370)   8152 00          		 DB 0	;
372)   8153 06 02       		LOADFONTS: LD B,2  ;BANK2	;BANK2
373)   8155 3E 08       		 LD A,8   ;VIDEO PAGE FOR FONTS   	;VIDEO PAGE FOR FONTS
374)   8157 CD 12 8B    		 CALL PUTPGINBANK  	;
375)   815A 21 3B 81    		 LD HL,FONTNAME1	;
376)   815D 01 B8 0B    		 LD BC,3000  ;MAX FILE SIZE	;MAX FILE SIZE
377)   8160 11 00 40    		 LD DE,$4000  ;0000 ON PAGE 8	;0000 ON PAGE 8
378)   8163 CD F1 8E    		 CALL STRG_LOADFILE	;
379)   8166 30 01       		 JR NC, LFFILOK	;
380)   8168 76          		 HALT   ;STOP EXEC	;STOP EXEC
381)   8169 21 47 81    		LFFILOK: LD HL,FONTNAME2	;
382)   816C 01 B8 0B    		 LD BC,3000  ;MAX FILE SIZE	;MAX FILE SIZE
383)   816F 11 00 50    		 LD DE,$5000  ;1000h ON PAGE 8	;1000h ON PAGE 8
384)   8172 CD F1 8E    		 CALL STRG_LOADFILE  	;
385)   8175 30 01       		 JR NC, LFFILOK2	;
386)   8177 76          		 HALT   ;STOP EXEC	;STOP EXEC
387)   8178 3E 0E       		LFFILOK2: LD A,14  ;BANK 2 ON NBRAIN RESTORE PAGE 14	;BANK 2 ON NBRAIN RESTORE PAGE 14
388)   817A 06 02       		 LD B,2	;
389)   817C CD 12 8B    		 CALL PUTPGINBANK	;
390)   817F C9          		 RET 	;
393)   8180 15 02 00 18 		SCRDATA DB        $15,$02,$00,$18,$18,$28,$40,$20	;
393)   8184 18 28 40 20 		SCRDATA DB        $15,$02,$00,$18,$18,$28,$40,$20	;
394)   8188 00 02 00 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
394)   818C 00 00 0A 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
394)   8190 00 00 FF 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
394)   8194 AB 00 00 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
395)   8198 00 B1       		 DB $00,$B1	;
397)   819A 21 80 81    		SETSCRDATA: LD HL,SCRDATA	;
398)   819D 11 68 02    		 LD DE,$268	;
399)   81A0 01 1A 00    		 LD BC,26	;
400)   81A3 ED B0       		 LDIR	;
401)   81A5 21 5C 00    		 LD HL,$5C	;
402)   81A8 36 68       		 LD (HL),$68  ;VIDEO START	;VIDEO START
403)   81AA 23          		 INC HL	;
404)   81AB 36 02       		 LD (HL),$02	;
405)   81AD C9          		 RET	;
409)   81AE F3          		START: DI	;
410)   81AF CD 05 88    		 CALL STNEWD        ;SET NEWDRIVERS AND DEFSTORE DEVICE	;SET NEWDRIVERS AND DEFSTORE DEVICE
412)   81B2 CD 1C 81    		 CALL TVOFF	;
417)   81B5 3E 01       		 LD A, 1        ;1=115200 BPS	;1=115200 BPS
418)   81B7 CD 3D 8B    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
419)   81BA 21 F8 83    		 LD HL, STR00	;
420)   81BD CD 65 8B    		 CALL RS_TXT  	;
421)   81C0 21 E5 83    		 LD HL, STRSCR	;
422)   81C3 CD 65 8B    		 CALL RS_TXT	;
424)   81C6 CD E8 89    		 CALL PS2KBINIT  	;
426)   81C9 CD 9A 92    		 CALL I2C_INIT	;
427)   81CC CD 90 95    		 CALL DS1307_INIT       ;	;
428)   81CF CD FF 95    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
429)   81D2 CD E0 93    		 CALL LCD16_INIT       ;LCD 16x2 Initialized	;LCD 16x2 Initialized
430)   81D5 21 56 83    		 LD HL, STR0	;
431)   81D8 CD 6A 94    		 CALL LCD16_PRINT	;
433)   81DB CD 00 97    		 CALL SND_INIT  	;
434)   81DE CD 42 97    		 CALL SND_BEEP	;
435)   81E1 CD 49 97    		 CALL SND_BEEP2	;
436)   81E4 CD 42 97    		 CALL SND_BEEP	;
447)   81E7 CD 9A 81    		ALLOK: CALL SETSCRDATA	;
448)   81EA CD 31 84    		 CALL SCCLS        ;CLEAR SCREEN BUFFER  	;CLEAR SCREEN BUFFER
449)   81ED 21 66 83    		 LD HL, STR02	;
450)   81F0 CD 71 84    		 CALL SCPRN        ;PRINT WAITING AT SCREEN BUFFER	;PRINT WAITING AT SCREEN BUFFER
452)   81F3 CD 53 81    		 CALL LOADFONTS       ;LOAD NEWBRAIN FONTS TO VIDEO RAM	;LOAD NEWBRAIN FONTS TO VIDEO RAM
453)   81F6 CD 0E 81    		 CALL TVON	;
455)   81F9 CD 1F 8A    		 CALL PATCHCMDS       ;PATCH CD ROM TO IMPLEMENT OUR OWN COMMANDS	;PATCH CD ROM TO IMPLEMENT OUR OWN COMMANDS
457)   81FC 21 7A 00    		 LD HL,SERERR       ;SERERR NOT USED BY SERIAL	;SERERR NOT USED BY SERIAL
458)   81FF 36 05       		 LD (HL),5       ;INIT 5 TIMES TO PRINT TO LCD	;INIT 5 TIMES TO PRINT TO LCD
461)   8201 21 AF 83    		 LD HL, STRMN	;
462)   8204 CD 65 8B    		 CALL RS_TXT        ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
463)   8207 21 0E 84    		 LD HL, STR01	;
464)   820A CD 65 8B    		 CALL RS_TXT        ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
466)   820D CD 61 94    		 CALL LCD16_CLR	;
468)   8210 21 66 83    		 LD HL, STR02	;
469)   8213 CD 6A 94    		 CALL LCD16_PRINT	;
471)   8216 21 37 83    		 LD HL, SMENU	;
472)   8219 3E 02       		 LD A, 2	;
473)   821B CD 71 84    		 CALL SCPRN	;
475)   821E CD 3D 82    		 CALL GET_KBCHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
478)   8221 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
479)   8223 CC AA 82    		 CALL Z, UPLOD	;
480)   8226 FE 58       		 CP 'X'	;
481)   8228 CA 8D 82    		 JP Z, EXEC	;
482)   822B FE 53       		 CP 'S'	;
483)   822D CC 0E 83    		 CALL Z, TXTSCR	;
484)   8230 FE 4E       		 CP 'N'	;
485)   8232 CA 64 82    		 JP Z, GONB        ;$E090	;$E090
486)   8235 FE 44       		 CP 'D'	;
487)   8237 CC F3 82    		 CALL Z, DNLOD	;
489)   823A C3 01 82    		 JP MENU	;
492)   823D AF          		GET_KBCHAR: XOR A	;
495)   823E CD BD 8B    		 CALL RS_KEYRD        ;CHAR IN RS232?	;CHAR IN RS232?
496)   8241 28 04       		 JR Z, GT_TST2	;
498)   8243 CD 8D 8B    		 CALL RS_RX        ; GET THAT CHAR	; GET THAT CHAR
499)   8246 C9          		 RET	;
501)   8247 CD EE 89    		GT_TST2: CALL PS2KEYAVAIL      ;ZF=0 IF WE HAVE A KEY ELSE 1	;ZF=0 IF WE HAVE A KEY ELSE 1
502)   824A 20 F1       		 JR NZ, GET_KBCHAR       ;RECHECK	;RECHECK
503)   824C CD F3 89    		 CALL READKBCHAR	;
504)   824F B7          		 OR A	;
505)   8250 CA 3D 82    		 JP Z,GET_KBCHAR	;
514)   8253 C9          		 RET	;
516)   8254 16 00       		LCDLN1: LD D, 0	;
517)   8256 1E 00       		 LD E, 0	;
518)   8258 CD 85 94    		 CALL LCD16_SETCURS  ; D HAS THE COLUMN E HAS THE ROW	; D HAS THE COLUMN E HAS THE ROW
519)   825B C9          		 RET	;
521)   825C 16 00       		LCDLN2: LD D, 0	;
522)   825E 1E 01       		 LD E, 1	;
523)   8260 CD 85 94    		 CALL LCD16_SETCURS ; D HAS THE COLUMN E HAS THE ROW	; D HAS THE COLUMN E HAS THE ROW
524)   8263 C9          		 RET	;
528)   8264 21 E0 00    		GONB: LD HL,DIRNM	;
529)   8267 3E 2F       		 LD A,'/'	;
530)   8269 77          		 LD (HL),A	;
531)   826A 23          		 INC HL	;
532)   826B 36 00       		 LD (HL),0	;
533)   826D 23          		 INC HL	;
534)   826E 36 00       		 LD (HL),0	;
535)   8270 CD 5C 82    		 CALL LCDLN2	;
536)   8273 21 26 83    		 LD HL, DSPMES	;
537)   8276 CD 6A 94    		 CALL LCD16_PRINT	;
539)   8279 CD A2 94    		 CALL LCD16_CURSON       ;CURSOR On	;CURSOR On
540)   827C CD BE 94    		 CALL LCD16_BLINKON       ;BLINK ON	;BLINK ON
542)   827F 21 06 00    		 LD HL,6	;
543)   8282 36 FE       		 LD (HL),254	;
544)   8284 23          		 INC HL	;
545)   8285 36 7F       		 LD (HL),127	;
546)   8287 AF          		 XOR A	;
547)   8288 D3 E0       		 OUT (INTENB),A       ;ENABLE INTERRUPTS ON NB	;ENABLE INTERRUPTS ON NB
548)   828A C3 15 A0    		 JP $A015	;
553)   828D CD 61 94    		EXEC: CALL LCD16_CLR	;
554)   8290 CD 5C 82    		 CALL LCDLN2	;
555)   8293 21 8D 83    		 LD HL, SPRGX	;
556)   8296 CD 6A 94    		 CALL LCD16_PRINT	;
557)   8299 CD 54 82    		 CALL LCDLN1	;
559)   829C 3E 05       		 LD A, 5	;
560)   829E CD 71 84    		 CALL SCPRN	;
562)   82A1 11 A9 00    		 LD DE, PRGEX	;
563)   82A4 1A          		 LD A, (DE)	;
564)   82A5 6F          		 LD L, A	;
565)   82A6 13          		 INC DE	;
566)   82A7 1A          		 LD A, (DE)	;
567)   82A8 67          		 LD H, A	;
568)   82A9 E9          		 JP (HL)	;
571)   82AA 21 80 83    		UPLOD: LD HL, DATST	;
572)   82AD CD 5C 82    		 CALL LCDLN2	;
573)   82B0 CD 6A 94    		 CALL LCD16_PRINT	;
575)   82B3 CD 8D 8B    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
576)   82B6 6F          		 LD L, A	;
577)   82B7 CD 8D 8B    		 CALL RS_RX	;
578)   82BA 67          		 LD H, A	;
579)   82BB CD 8D 8B    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
580)   82BE 4F          		 LD C, A	;
581)   82BF CD 8D 8B    		 CALL RS_RX	;
582)   82C2 47          		 LD B, A	;
584)   82C3 11 A9 00    		 LD DE, PRGEX        ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
585)   82C6 7D          		 LD A, L	;
586)   82C7 12          		 LD (DE), A	;
587)   82C8 13          		 INC DE	;
588)   82C9 7C          		 LD A, H	;
589)   82CA 12          		 LD (DE), A	;
591)   82CB FE 80       		 CP $80	;
592)   82CD 28 02       		 JR Z, ROMWR	;
593)   82CF 38 02       		 JR C, NORWR	;
595)   82D1 D3 7C       		ROMWR: OUT (124), A       ;SET ROM WRITABLE = '0'     	;SET ROM WRITABLE = '0'
597)   82D3 E5          		NORWR: PUSH HL	;
598)   82D4 CD 8D 8B    		NXB: CALL RS_RX	;
599)   82D7 77          		 LD (HL), A	;
600)   82D8 23          		 INC HL	;
601)   82D9 0B          		 DEC BC	;
602)   82DA 78          		 LD A, B	;
603)   82DB B1          		 OR C	;
604)   82DC 20 F6       		 JR NZ, NXB        ;LOOP ALL BYTES	;LOOP ALL BYTES
606)   82DE D3 7D       		 OUT (125), A        ;SET ROM NON WRITABLE ='1'	;SET ROM NON WRITABLE ='1'
608)   82E0 21 71 83    		 LD HL, DATTR	;
609)   82E3 CD 61 94    		 CALL LCD16_CLR	;
610)   82E6 CD 6A 94    		 CALL LCD16_PRINT	;
611)   82E9 3E 05       		 LD A, 5	;
612)   82EB CD 71 84    		 CALL SCPRN	;
613)   82EE CD B4 9A    		 CALL DELAY	;
615)   82F1 E1          		 POP HL	;
617)   82F2 C9          		 RET	;
624)   82F3 CD 8D 8B    		DNLOD: CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
625)   82F6 6F          		 LD L, A	;
626)   82F7 CD 8D 8B    		 CALL RS_RX	;
627)   82FA 67          		 LD H, A	;
628)   82FB CD 8D 8B    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
629)   82FE 4F          		 LD C, A	;
630)   82FF CD 8D 8B    		 CALL RS_RX	;
631)   8302 47          		 LD B, A	;
633)   8303 7E          		NXB3: LD A, (HL)	;
634)   8304 CD 56 8B    		 CALL RS_TX        ;SEND BYTE	;SEND BYTE
635)   8307 23          		 INC HL	;
636)   8308 0B          		 DEC BC	;
637)   8309 78          		 LD A, B	;
638)   830A B1          		 OR C	;
639)   830B 20 F6       		 JR NZ, NXB3        ;LOOP ALL BYTES   	;LOOP ALL BYTES
640)   830D C9          		 RET	;
643)   830E 21 99 83    		TXTSCR: LD HL, TXTMES        ;SCREEN START	;SCREEN START
644)   8311 11 82 02    		 LD DE, TXTRAM	;
645)   8314 01 15 00    		 LD BC, 21	;
646)   8317 ED B0       		 LDIR	;
648)   8319 21 99 83    		 LD HL, TXTMES	;
649)   831C 11 C2 02    		 LD DE, TXTRAM + 64       ;SCREEN START+64 40chars screen +24 excess	;SCREEN START+64 40chars screen +24 excess
650)   831F 01 15 00    		 LD BC, 21	;
651)   8322 ED B0       		 LDIR	;
653)   8324 AF          		 XOR A	;
654)   8325 C9          		 RET	;
657)   8326 3C 43 44 45 		DSPMES: DEFM "<CDESP 2022-24> "	;
657)   832A 53 50 20 32 		DSPMES: DEFM "<CDESP 2022-24> "	;
657)   832E 30 32 32 2D 		DSPMES: DEFM "<CDESP 2022-24> "	;
657)   8332 32 34 3E 20 		DSPMES: DEFM "<CDESP 2022-24> "	;
658)   8336 00          		 DB 0  	;
660)   8337 55 3A 55 50 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   833B 2C 58 3A 52 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   833F 55 4E 2C 53 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   8343 3A 44 49 53 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   8347 50 2C 4E 3A 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   834B 4E 42 52 4F 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   834F 4D 2C 44 3A 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
660)   8353 44 4E       		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
661)   8355 00          		 DB 0 	;
663)   8356 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
663)   835A 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
663)   835E 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
663)   8362 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
664)   8365 00          		 DB 0	;
666)   8366 57 41 49 54 		STR02: DEFM "WAITING..."	;
666)   836A 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
666)   836E 2E 2E       		STR02: DEFM "WAITING..."	;
667)   8370 00          		 DB 0	;
669)   8371 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
669)   8375 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
669)   8379 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
669)   837D 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
670)   837F 00          		 DB 0	;
672)   8380 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
672)   8384 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
672)   8388 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
673)   838C 00          		 DB 0	;
675)   838D 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
675)   8391 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
675)   8395 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
676)   8398 00          		 DB 0	;
678)   8399 4E 45 57 42 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
678)   839D 52 41 49 4E 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
678)   83A1 20 53 43 52 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
678)   83A5 45 45 4E 20 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
678)   83A9 52 45 41 44 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
678)   83AD 59          		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
679)   83AE 00          		 DB 0	;
681)   83AF 55 3A 55 50 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83B3 2C 58 3A 52 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83B7 55 4E 2C 53 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83BB 3A 44 49 53 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83BF 50 2C 4E 3A 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83C3 4E 42 52 4F 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83C7 4D 2C 44 3A 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
681)   83CB 44 4E       		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
682)   83CD 0A 0D 00    		 DB 10,13,0	;
684)   83D0 4E 45 57 42 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
684)   83D4 52 41 49 4E 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
684)   83D8 20 42 4F 4F 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
684)   83DC 54 45 44 20 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
684)   83E0 4F 4B       		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
685)   83E2 0A 0D 00    		 DB 10,13,0	;
687)   83E5 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
687)   83E9 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
687)   83ED 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
687)   83F1 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
688)   83F5 0A 0D 00    		 DB 10,13,0	;
690)   83F8 0A 0D       		STR00: DB 10,13	;
691)   83FA 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
691)   83FE 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
691)   8402 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
691)   8406 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
691)   840A 44          		 DEFM "RS232 INITIALIZED"	;
692)   840B 0A 0D 00    		 DB 10,13,0	;
694)   840E 0A 0D       		STR01: DB 10,13	;
695)   8410 57 41 49 54 		 DEFM "WAITING..."	;
695)   8414 49 4E 47 2E 		 DEFM "WAITING..."	;
695)   8418 2E 2E       		 DEFM "WAITING..."	;
696)   841A 0A 0D 00    		 DB 10,13,0	;
697)   841D 00          		 DB 0	;
 14)   841E E5          		SCCLL: PUSH HL	;
 15)   841F F5          		 PUSH AF	;
 16)   8420 21 90 84    		 LD HL, STCL4        ;40 LINE CLEAR	;40 LINE CLEAR
 17)   8423 CD 74 84    		 CALL SCPRN1	;
 18)   8426 F1          		 POP AF	;
 19)   8427 E1          		 POP HL	;
 20)   8428 C9          		 RET	;
 23)   8429 AF          		 XOR A         ;LINE 0	;LINE 0
 24)   842A 21 9D 85    		 LD HL, SCRDY	;
 25)   842D CD 71 84    		 CALL SCPRN	;
 26)   8430 C9          		 RET	;
 30)   8431 06 19       		SCCLS: LD B, 25	;
 31)   8433 AF          		 XOR A         ;; PRINT STR0 AT LINE 1	;; PRINT STR0 AT LINE 1
 32)   8434 C5          		 TSTLP1 PUSH BC	;
 33)   8435 CD 1E 84    		 CALL SCCLL	;
 34)   8438 3C          		 INC A         ; NEXT LINE	; NEXT LINE
 35)   8439 C1          		 POP BC	;
 36)   843A 10 F8       		 DJNZ TSTLP1	;
 37)   843C CD 29 84    		 CALL SCMSG1	;
 38)   843F C9          		 RET	;
 43)   8440 F5          		 PRNRGA PUSH AF	;
 44)   8441 06 08       		 LD B, 8	;
 45)   8443 CB 07       		LPN5: RLC A         ; BIT 7 FIRST	; BIT 7 FIRST
 46)   8445 F5          		 PUSH AF	;
 47)   8446 3E 00       		 LD A, 0	;
 48)   8448 30 02       		 JR NC, SKP5	;
 49)   844A 3E 01       		 LD A, 1	;
 50)   844C C6 30       		 SKP5 ADD A, 48	;
 51)   844E CD 57 84    		 CALL PRNCL        ; PRINT A AT COL,LINE	; PRINT A AT COL,LINE
 52)   8451 1C          		 INC E	;
 53)   8452 F1          		 POP AF	;
 54)   8453 10 EE       		 DJNZ LPN5	;
 55)   8455 F1          		 POP AF	;
 56)   8456 C9          		 RET	;
 59)   8457 E5          		PRNCL: PUSH HL	;
 60)   8458 D5          		 PUSH DE	;
 61)   8459 F5          		 PUSH AF	;
 62)   845A C5          		 PUSH BC	;
 63)   845B 21 82 02    		 LD HL, TXTRAM	;
 64)   845E 42          		 LD B, D        ; D HAS THE LINE	; D HAS THE LINE
 65)   845F D5          		 PUSH DE	;
 66)   8460 11 40 00    		 LD DE, 40 + 24        ; FOR 40 COLUMN SCREEN	; FOR 40 COLUMN SCREEN
 67)   8463 19          		LPN2: ADD HL, DE	;
 68)   8464 10 FD       		 DJNZ LPN2	;
 69)   8466 D1          		 POP DE	;
 70)   8467 43          		 LD B, E        ; E HAS THE COLUMN	; E HAS THE COLUMN
 71)   8468 23          		LPN3: INC HL	;
 72)   8469 10 FD       		 DJNZ LPN3	;
 73)   846B 77          		 LD (HL), A        ; A HAS THE CHAR TO PRINT	; A HAS THE CHAR TO PRINT
 74)   846C C1          		 POP BC	;
 75)   846D F1          		 POP AF	;
 76)   846E D1          		 POP DE	;
 77)   846F E1          		 POP HL	;
 78)   8470 C9          		 RET	;
 81)   8471 CD 1E 84    		SCPRN: CALL SCCLL        ; CLEAR THE LINE	; CLEAR THE LINE
 82)   8474 E5          		SCPRN1: PUSH HL	;
 83)   8475 21 82 02    		 LD HL, TXTRAM	;
 84)   8478 FE 00       		 CP 0	;
 85)   847A 28 07       		 JR Z, SCSKIP        ;SKIP FOR LINE 0	;SKIP FOR LINE 0
 86)   847C 47          		 LD B, A	;
 87)   847D 11 40 00    		 LD DE, 40 + 24        ; FOR 40 COLUMN SCREEN	; FOR 40 COLUMN SCREEN
 88)   8480 19          		LPN1: ADD HL, DE	;
 89)   8481 10 FD       		 DJNZ LPN1	;
 90)   8483 EB          		SCSKIP: EX DE, HL	;
 91)   8484 E1          		 POP HL	;
 92)   8485 7E          		SCLP: LD A, (HL)	;
 93)   8486 FE 00       		 CP 0	;
 94)   8488 28 05       		 JR Z SCEXT	;
 95)   848A 12          		 LD (DE), A	;
 96)   848B 23          		 INC HL	;
 97)   848C 13          		 INC DE	;
 98)   848D 18 F6       		 JR SCLP	;
 99)   848F C9          		SCEXT: RET	;
101)   8490 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8494 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8498 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   849C 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84A0 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84A4 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84A8 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84AC 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84B0 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84B4 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84B8 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84BC 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84C0 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84C4 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84C8 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84CC 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84D0 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84D4 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84D8 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84DC 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84E0 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84E4 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84E8 20          		STCL4: DEFM "                                                                                         "	;
102)   84E9 00          		 DB 0	;
104)   84EA 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84EE 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84F2 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84F6 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84FA 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84FE 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8502 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8506 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   850A 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   850E 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8512 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8516 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   851A 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   851E 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8522 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8526 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   852A 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   852E 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8532 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8536 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   853A 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   853E 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8542 20          		STCL8: DEFM "                                                                                         "	;
105)   8543 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8547 20 20 20 20 		 DEFM "                                                                                         "	;
105)   854B 20 20 20 20 		 DEFM "                                                                                         "	;
105)   854F 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8553 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8557 20 20 20 20 		 DEFM "                                                                                         "	;
105)   855B 20 20 20 20 		 DEFM "                                                                                         "	;
105)   855F 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8563 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8567 20 20 20 20 		 DEFM "                                                                                         "	;
105)   856B 20 20 20 20 		 DEFM "                                                                                         "	;
105)   856F 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8573 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8577 20 20 20 20 		 DEFM "                                                                                         "	;
105)   857B 20 20 20 20 		 DEFM "                                                                                         "	;
105)   857F 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8583 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8587 20 20 20 20 		 DEFM "                                                                                         "	;
105)   858B 20 20 20 20 		 DEFM "                                                                                         "	;
105)   858F 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8593 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8597 20 20 20 20 		 DEFM "                                                                                         "	;
105)   859B 20          		 DEFM "                                                                                         "	;
106)   859C 00          		 DB 0	;
108)   859D 53 43 52 45 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   85A1 45 4E 20 52 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   85A5 45 41 44 59 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   85A9 21 21 21    		SCRDY: DEFM "SCREEN READY!!!"	;
109)   85AC 00          		 DB 0	;
 16)   85AD 	            		 RBR EQU DEVSER+0       ;	;
 17)   85AD 	            		 MCR EQU DEVSER+04	;
 18)   85AD 	            		 LSR EQU DEVSER+05	;
 34)   85AD 04          		 DEFB 4	;
 35)   85AE 05          		 DEFB RS2OIN-$        ;OPEN IN	;OPEN IN
 36)   85AF 04          		 DEFB RS2OOT-$        ;OPEN OUT	;OPEN OUT
 37)   85B0 10          		 DEFB RS2INP-$        ;INPUT BYTE	;INPUT BYTE
 38)   85B1 2A          		 DEFB RS2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
 39)   85B2 0A          		 DEFB RS2CLS-$        ;CLOSE	;CLOSE
 51)   85B3 C5          		RS2OOT: PUSH BC        ;OPENOUT	;OPENOUT
 52)   85B4 01 01 00    		 LD BC, 1        ;NO OF BYTES REQUIRED	;NO OF BYTES REQUIRED
 53)   85B7 E7 37       		 DEFW ZMKBUFF        ;	;
 54)   85B9 C1          		 POP BC         ;	;
 55)   85BA D8          		 RET C         ;	;
 57)   85BB 72          		 LD (HL), D        ;PORT NUMBER	;PORT NUMBER
 58)   85BC AF          		RS2CLS: XOR A         ; CLOSE STREAM	; CLOSE STREAM
 59)   85BD 47          		 LD B A         ;	;
 60)   85BE 4F          		 LD C A         ;	;
 61)   85BF C9          		 RET         ;	;
 71)   85C0 F3          		RS2INP: DI         ;	;
 72)   85C1 21 24 00    		 LD HL ENREGMAP        ;	;
 73)   85C4 CB 86       		 RES VIDEO, (HL)       ; NO VIDEO	; NO VIDEO
 74)   85C6 7E          		 LD A, (HL)	;
 75)   85C7 D3 07       		 OUT (ENREG) A        ;	;
 76)   85C9 3E 01       		 LD A, 1	;
 77)   85CB D3 24       		 OUT (MCR), A	;
 78)   85CD CD EB 85    		 CALL MWAIT        ;	;
 79)   85D0 AF          		 XOR A         ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
 80)   85D1 D3 24       		 OUT (MCR), A	;
 81)   85D3 DB 20       		 IN A, (RBR)        ;GET THE CHAR	;GET THE CHAR
 82)   85D5 CD 48 E5    		 CALL STOPTV        ;	;
 83)   85D8 FB          		 EI         ;	;
 84)   85D9 B7          		 OR A         ;	;
 85)   85DA C9          		 RET	;
 88)   85DB 4F          		RS2OTP: LD C, A        ;	;
 94)   85DC F3          		 DI         ;	;
 95)   85DD CD 1C E2    		 CALL $E21C        ;NOVID ;	;NOVID ;
 96)   85E0 79          		 LD A, C	;
 97)   85E1 CD 07 80    		 CALL $8007        ;RSTX   ;SEND CHAR IN A	;RSTX   ;SEND CHAR IN A
 98)   85E4 CD 48 E5    		 CALL STOPTV        ;	;
 99)   85E7 FB          		 EI         ;	;
100)   85E8 2B          		 DEC HL         ;	;
101)   85E9 B7          		 OR A         ;	;
102)   85EA C9          		 RET         ;	;
105)   85EB 21 00 64    		MWAIT: LD HL 25600	;
107)   85EE DB 25       		MWAIT2: IN A, (LSR)	;
108)   85F0 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
109)   85F1 D8          		 RET C	;
110)   85F2 10 FA       		 DJNZ MWAIT2	;
111)   85F4 DB 25       		 IN A, (LSR)	;
112)   85F6 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
113)   85F7 D8          		 RET C	;
114)   85F8 2D          		 DEC L	;
115)   85F9 DB 25       		 IN A, (LSR)	;
116)   85FB 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
117)   85FC D8          		 RET C	;
118)   85FD C2 EE 85    		 JP NZ MWAIT2	;
119)   8600 DB 25       		 IN A, (LSR)	;
120)   8602 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
121)   8603 D8          		 RET C	;
122)   8604 25          		 DEC H	;
123)   8605 DB 25       		 IN A, (LSR)	;
124)   8607 1F          		 RRA	;
125)   8608 D8          		 RET C	;
126)   8609 C2 EE 85    		 JP NZ, MWAIT2	;
127)   860C F1          		 POP AF         ;POP LAST RETURN ADDRESS FROM STACK	;POP LAST RETURN ADDRESS FROM STACK
128)   860D 3E C8       		 LD A, 200        ;TIMEOUT ERROR	;TIMEOUT ERROR
129)   860F 37          		 SCF	;
130)   8610 C9          		 RET         ;RETURN TO BASIC WITH ERROR TIMEOUT	;RETURN TO BASIC WITH ERROR TIMEOUT
 26)   8611 04          		 DEFB 4                                                          ;COUNT OF DISPLACEMENTS-1	;COUNT OF DISPLACEMENTS-1
 27)   8612 18          		 DEFB SG2OIN-$        ;OPEN IN	;OPEN IN
 28)   8613 1B          		 DEFB SG2OOT-$        ;OPEN OUT	;OPEN OUT
 29)   8614 87          		 DEFB SG2INP-$        ;INPUT BYTE	;INPUT BYTE
 30)   8615 F3          		 DEFB SG2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
 31)   8616 6A          		 DEFB SG2CLS-$        ;CLOSE	;CLOSE
 34)   8617 11 F0 00    		CPYFNAME:      LD DE,STRGBUFF	;
 35)   861A ED B0       		               LDIR	;
 36)   861C C9          		               RET	;
 40)   861D E5          		MKCAPS:        PUSH HL	;
 41)   861E 7E          		MC_NXT:        LD A,(HL)	;
 42)   861F B7          		               OR A	;
 43)   8620 28 06       		               JR Z,MC_EXIT	;
 44)   8622 E7 2F       		               DEFW ZTTCAPS	;
 45)   8624 77          		               LD (HL),A	;
 46)   8625 23          		               INC HL	;
 47)   8626 18 F6       		               JR MC_NXT	;
 48)   8628 E1          		MC_EXIT:       POP HL	;
 49)   8629 C9          		               RET	;
 76)   862A 3E 00       		SG2OIN: LD A,0        ;OPENIN	;OPENIN
 77)   862C 18 02       		               JR SG2OPN	;
 80)   862E 3E 01       		SG2OOT: LD A,1	;
 81)   8630 E5          		SG2OPN:        PUSH HL	;
 82)   8631 C5          		               PUSH BC        ;OPENOUT	;OPENOUT
 83)   8632 F5          		               PUSH AF	;
 84)   8633 01 10 02    		 LD BC, SPCNEED        ;NO OF BYTES REQUIRED	;NO OF BYTES REQUIRED
 85)   8636 E7 37       		 DEFW ZMKBUFF        ;	;
 86)   8638 D1          		               POP DE	;
 87)   8639 C1          		 POP BC                                 	;
 88)   863A 38 41       		 JR C, ERREXIT                	;
 89)   863C E5          		               PUSH HL                                                         ;SAVE START OF STRUCT	;SAVE START OF STRUCT
 90)   863D 7A          		               LD A,D	;
 92)   863E 77          		 LD (HL), A        ;OPEN TYPE	;OPEN TYPE
 93)   863F 23          		               INC HL	;
 94)   8640 36 00       		               LD (HL),0                                                       ;FILE POS ZERO	;FILE POS ZERO
 95)   8642 23          		               INC HL	;
 96)   8643 36 00       		               LD (HL),0	;
 97)   8645 23          		               INC HL	;
 98)   8646 36 00       		               LD (HL),0                                                     ;BUF POS 0 	;BUF POS 0
 99)   8648 23          		               INC HL	;
100)   8649 36 00       		               LD (HL),0	;
101)   864B 23          		               INC HL	;
102)   864C E5          		               PUSH HL	;
103)   864D C5          		               PUSH BC	;
104)   864E 01 14 00    		               LD BC,BYTREAD-FNAMEIX                                           ;SKIP FILENAME	;SKIP FILENAME
105)   8651 09          		               ADD HL,BC	;
106)   8652 C1          		               POP BC	;
107)   8653 36 00       		               LD (HL),0                                                       ;BYTES READ TO 0 	;BYTES READ TO 0
108)   8655 23          		               INC HL	;
109)   8656 36 00       		               LD (HL),0                                                     	;
110)   8658 D1          		               POP DE                                                          ;DE AT FNAMEIX       	;DE AT FNAMEIX
111)   8659 DD E1       		               POP IX                                                          ;IX THE START OF STRUCT                	;IX THE START OF STRUCT
112)   865B E1          		               POP HL                                                          ;HL THE FILE NAME	;HL THE FILE NAME
113)   865C D5          		               PUSH DE                                                         ;SAVE THE START OF FILENAME        	;SAVE THE START OF FILENAME
114)   865D ED B0       		               LDIR                                                            ;TRANSFER THE FNAME TO OUR STRUCT        	;TRANSFER THE FNAME TO OUR STRUCT
115)   865F AF          		               XOR A	;
116)   8660 12          		               LD (DE),A                                                       ;NULL TERMINATED STRING	;NULL TERMINATED STRING
117)   8661 E1          		               POP HL                                                          ;START OF FNAME                	;START OF FNAME
118)   8662 CD 1D 86    		               CALL MKCAPS                                                     ;make hl filename caps  	;make hl filename caps
119)   8665 DD 7E 00    		               LD A,(IX)	;
120)   8668 FE 00       		               CP 0	;
121)   866A 20 0F       		               JR NZ,SG2EX                                                      ;IF FILE OPEN OUT EXIT	;IF FILE OPEN OUT EXIT
123)   866C 01 00 00    		               LD BC,0	;
124)   866F 13          		               INC DE	;
125)   8670 F3          		               DI	;
126)   8671 CD 94 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR  	;OPEN UP TO CURRENT DIR
127)   8674 CD F1 8E    		               CALL STRG_LOADFILE	;
128)   8677 FB          		               EI	;
129)   8678 3E 96       		               LD A,ERROPF                                                     ;ERROR NO IF FILE ERROR	;ERROR NO IF FILE ERROR
130)   867A D8          		               RET C	;
131)   867B AF          		SG2EX:         XOR A	;
132)   867C C9          		               RET	;
135)   867D E1          		ERREXIT:       POP HL	;
136)   867E 37          		               SCF	;
137)   867F C9          		               RET	;
139)   8680 7E          		SG2CLS: LD A,(HL)	;
140)   8681 FE 01       		               CP 1                                                            ;CHECK IF OPENOUT	;CHECK IF OPENOUT
141)   8683 20 12       		               JR NZ,SCL_EX	;
148)   8685 DD E5       		               PUSH IX	;
149)   8687 E5          		               PUSH HL	;
150)   8688 DD E1       		               POP IX	;
151)   868A 01 05 00    		               LD BC,FNAMEIX	;
152)   868D 09          		               ADD HL,BC	;
153)   868E DD 4E 03    		               LD C,(IX+BUFFOFS)	;
154)   8691 DD 46 04    		               LD B,(IX+BUFFOFS+1)	;
155)   8694 CD 37 87    		               CALL SO_STFILE	;
156)   8697 AF          		SCL_EX:        XOR A         ; CLOSE STREAM	; CLOSE STREAM
157)   8698 47          		 LD B A         ;	;
158)   8699 4F          		 LD C A         ;	;
159)   869A C9          		 RET         ;	;
166)   869B DD E5       		SG2INP:        PUSH IX	;
167)   869D CD A3 86    		               CALL SG2INP2	;
168)   86A0 DD E1       		               POP IX	;
169)   86A2 C9          		               RET	;
171)   86A3 7E          		SG2INP2:       LD A,(HL)	;
172)   86A4 FE 00       		               CP 0	;
173)   86A6 3E 9B       		               LD A,ERRTRA	;
174)   86A8 37          		               SCF	;
175)   86A9 C0          		               RET NZ                                                          ;IF NOT INPUT THEN ERROR                	;IF NOT INPUT THEN ERROR
176)   86AA CD 62 87    		               CALL SGCHKEOF                                                   ;TEST EOF	;TEST EOF
177)   86AD 23          		               INC HL                	;
178)   86AE E5          		               PUSH HL                                                         ;SAVE OFFSET POS	;SAVE OFFSET POS
179)   86AF 4E          		               LD C,(HL)	;
180)   86B0 23          		               INC HL	;
181)   86B1 46          		               LD B,(HL)                                                       ;BC THE FILE OFFS	;BC THE FILE OFFS
182)   86B2 23          		               INC HL	;
183)   86B3 5E          		               LD E,(HL)	;
184)   86B4 23          		               INC HL	;
185)   86B5 56          		               LD D,(HL)                                                       ;DE THE BUFFER OFFS	;DE THE BUFFER OFFS
186)   86B6 23          		               INC HL                                                          ;NOW ON FILENAME OFFS	;NOW ON FILENAME OFFS
188)   86B7 3E 97       		               LD A,ERREOF	;
189)   86B9 DA 7D 86    		               JP C,ERREXIT                                                    ;ON C EOF REACHED                	;ON C EOF REACHED
190)   86BC 28 0E       		               JR Z,RDFMFILE                                                   ;ON Z=EOB READ FROM FILE	;ON Z=EOB READ FROM FILE
199)   86BE 01 16 00    		RDFMBUFF:      LD BC,FBUFFIX-FNAMEIX                                           ;500 BYTES BUFFER OFFSET	;500 BYTES BUFFER OFFSET
200)   86C1 09          		               ADD HL,BC                                                       ;HL ON BUFFER        	;HL ON BUFFER
201)   86C2 19          		               ADD HL,DE                                                       ;HL ON NXT BYTE INSIDE BUFFER	;HL ON NXT BYTE INSIDE BUFFER
203)   86C3 7E          		               LD A,(HL)                                                       ;READ BYTE TO A                	;READ BYTE TO A
204)   86C4 E1          		               POP HL                                                          ;HL AT THE FILE OFFSET	;HL AT THE FILE OFFSET
205)   86C5 23          		               INC HL	;
206)   86C6 23          		               INC HL                                                          ;AT THE BUFFER OFFSET	;AT THE BUFFER OFFSET
207)   86C7 13          		               INC DE                                                          ;POINT TO NEXT BYTE	;POINT TO NEXT BYTE
208)   86C8 73          		               LD (HL),E                                                       ;SAVE 	;SAVE
209)   86C9 23          		               INC HL	;
210)   86CA 72          		               LD (HL),D	;
211)   86CB C9          		               RET	;
212)   86CC E5          		RDFMFILE:      PUSH HL                                                         ;HL FILENAME        	;HL FILENAME
213)   86CD D1          		               POP DE                                                          ;DE FILENAME	;DE FILENAME
214)   86CE EB          		               EX DE,HL	;
215)   86CF C5          		               PUSH BC	;
216)   86D0 01 16 00    		               LD BC,FBUFFIX-FNAMEIX                                           ;500 BYTES BUFFER OFFSET	;500 BYTES BUFFER OFFSET
217)   86D3 09          		               ADD HL,BC	;
218)   86D4 C1          		               POP BC	;
219)   86D5 EB          		               EX DE,HL                                                        ;HL TO FNAME OFFSET, DE TO BUFFER OFFSET	;HL TO FNAME OFFSET, DE TO BUFFER OFFSET
222)   86D6 D5          		               PUSH DE                                                         ;BC THE FILE OFFSET TO READ FROM	;BC THE FILE OFFSET TO READ FROM
225)   86D7 F3          		               DI                                                                	;
226)   86D8 CD 94 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR                                                                                	;OPEN UP TO CURRENT DIR
227)   86DB CD 71 8F    		               CALL STRG_READBUFR                                              ;READ 500 BYTES FROM FILE TO BUFFER BC= BYTES READ	;READ 500 BYTES FROM FILE TO BUFFER BC= BYTES READ
228)   86DE FB          		               EI	;
229)   86DF D1          		               POP DE                                                          ;THE BUFFER TO READ THE BYTE	;THE BUFFER TO READ THE BYTE
230)   86E0 3E 98       		               LD A,ERRRDF                                                     ;ERROR CODE CAN'T READ FROM FILE	;ERROR CODE CAN'T READ FROM FILE
231)   86E2 DA 7D 86    		               JP C,ERREXIT	;
233)   86E5 E1          		               POP HL                                                          ;GET FILE OFFSET POS ADDR	;GET FILE OFFSET POS ADDR
234)   86E6 D5          		               PUSH DE                                                         ;SAVE START OF BUFFER	;SAVE START OF BUFFER
235)   86E7 EB          		               EX DE,HL                                                        ;DE THE OFFSET ADDR	;DE THE OFFSET ADDR
236)   86E8 1A          		               LD A,(DE)                                                       ;OFFSET OF FILE 	;OFFSET OF FILE
237)   86E9 6F          		               LD L,A	;
238)   86EA 13          		               INC DE	;
239)   86EB 1A          		               LD A,(DE)	;
240)   86EC 67          		               LD H,A	;
241)   86ED 09          		               ADD HL,BC                                                       ;ADD NEW READ BYTES TO PREVIOUS OFFSET	;ADD NEW READ BYTES TO PREVIOUS OFFSET
242)   86EE EB          		               EX DE,HL                                                        ;HL THE OFFSET ADDR, DE THE NEW OFFSET	;HL THE OFFSET ADDR, DE THE NEW OFFSET
243)   86EF 72          		               LD (HL),D                                                       ;SAVE BACK	;SAVE BACK
244)   86F0 2B          		               DEC HL	;
245)   86F1 73          		               LD (HL),E	;
246)   86F2 23          		               INC HL	;
247)   86F3 23          		               INC HL                                                          ;TO THE BUF OFFSET 	;TO THE BUF OFFSET
248)   86F4 3E 01       		               LD A,1	;
249)   86F6 77          		               LD (HL),A                                                       ;SET THE BUF OFFS TO 1	;SET THE BUF OFFS TO 1
250)   86F7 23          		               INC HL	;
251)   86F8 AF          		               XOR A	;
252)   86F9 77          		               LD (HL),A     	;
253)   86FA 23          		               INC HL                                                  	;
256)   86FB C5          		               PUSH BC	;
257)   86FC 01 14 00    		               LD BC,20	;
258)   86FF 09          		               ADD HL,BC                                                       ;NOW AT BYTREAD	;NOW AT BYTREAD
259)   8700 C1          		               POP BC	;
260)   8701 71          		               LD (HL),C                                                       ;SAVE BYTES READ FROM FILE	;SAVE BYTES READ FROM FILE
261)   8702 23          		               INC HL	;
262)   8703 70          		               LD (HL),B	;
263)   8704 D1          		               POP DE                                                          ;GET START OF BUFFER	;GET START OF BUFFER
264)   8705 AF          		               XOR A                                                           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
265)   8706 1A          		               LD A,(DE)                                                       ;READ THE 1ST BYTE TO A	;READ THE 1ST BYTE TO A
266)   8707 C9          		               RET	;
275)   8708 DD E5       		SG2OTP:        PUSH IX	;
276)   870A E5          		               PUSH HL	;
277)   870B DD E1       		               POP IX	;
278)   870D 57          		               LD D,A                                                          ;SAVE BYTE TO BE WRITTEN	;SAVE BYTE TO BE WRITTEN
279)   870E 7E          		               LD A,(HL)	;
280)   870F FE 00       		               CP 0	;
281)   8711 3E 9B       		               LD A,ERRTRA	;
282)   8713 37          		               SCF	;
283)   8714 28 47       		               JR Z,SO_EX	;
284)   8716 7A          		               LD A,D                                                          ;RESTORE A BYTE TO WRITE	;RESTORE A BYTE TO WRITE
285)   8717 01 05 00    		               LD BC,FNAMEIX	;
286)   871A 09          		               ADD HL,BC                	;
287)   871B DD E5       		               PUSH IX	;
288)   871D D1          		               POP DE	;
289)   871E EB          		               EX DE,HL	;
290)   871F 01 1B 00    		               LD BC,FBUFFIX	;
291)   8722 09          		               ADD HL,BC                	;
292)   8723 DD 4E 03    		               LD C,(IX+BUFFOFS)	;
293)   8726 DD 46 04    		               LD B,(IX+BUFFOFS+1)	;
294)   8729 09          		               ADD HL,BC	;
295)   872A EB          		               EX DE,HL                                	;
296)   872B 12          		               LD (DE),A	;
298)   872C 79          		               LD A,C	;
299)   872D FE F3       		               CP $F3                                                          ;499 WE START AT 0  	;499 WE START AT 0
300)   872F 20 25       		               JR NZ,SO_BUFFNXT	;
301)   8731 78          		               LD A,B	;
302)   8732 FE 01       		               CP $01	;
303)   8734 20 20       		               JR NZ,SO_BUFFNXT	;
304)   8736 03          		               INC BC                                                          ;500	;500
312)   8737 EB          		 SO_STFILE:    EX DE,HL	;
313)   8738 DD E5       		               PUSH IX	;
314)   873A E1          		               POP HL	;
315)   873B C5          		               PUSH BC	;
316)   873C 01 1B 00    		               LD BC,FBUFFIX	;
317)   873F 09          		               ADD HL,BC	;
318)   8740 C1          		               POP BC	;
319)   8741 EB          		               EX DE,HL	;
322)   8742 CD 94 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR	;OPEN UP TO CURRENT DIR
323)   8745 CD CB 90    		               CALL STRG_WRITEBUFR                             ;WRITES 500 BYTES FROM BUFFER DE TO THE END OF THE FILE	;WRITES 500 BYTES FROM BUFFER DE TO THE END OF THE FILE
324)   8748 3E 96       		               LD A,ERROPF	;
325)   874A 38 06       		               JR C,SO_ERROUT	;
326)   874C 3E 99       		               LD A,ERRWTF	;
327)   874E 37          		               SCF	;
328)   874F 20 01       		               JR NZ,SO_ERROUT	;
329)   8751 AF          		               XOR A	;
330)   8752 01 00 00    		SO_ERROUT:     LD BC,0                                         ;ZERO BUFFER OFFSET	;ZERO BUFFER OFFSET
331)   8755 16          		               DB $16                                          ;SKIP INC BC LD D,NN	;SKIP INC BC LD D,NN
332)   8756 03          		SO_BUFFNXT:    INC BC                                          	;
333)   8757 DD 71 03    		               LD (IX+BUFFOFS),C	;
334)   875A DD 70 04    		               LD (IX+BUFFOFS+1),B	;
335)   875D DD E1       		SO_EX          POP IX	;
336)   875F FE 00       		               CP 0	;
337)   8761 C9          		               RET	;
344)   8762 DD E5       		SGCHKEOF:      PUSH IX	;
345)   8764 D5          		               PUSH DE	;
346)   8765 C5          		               PUSH BC	;
348)   8766 E5          		               PUSH HL	;
349)   8767 DD E1       		               POP IX	;
350)   8769 DD 5E 03    		               LD E,(IX+BUFFOFS)	;
351)   876C DD 56 04    		               LD D,(IX+BUFFOFS+1)	;
352)   876F DD 4E 19    		               LD C,(IX+BYTREAD)	;
353)   8772 DD 46 1A    		               LD B,(IX+BYTREAD+1)	;
355)   8775 78          		               LD A,B	;
356)   8776 B1          		               OR C	;
357)   8777 3E 03       		               LD A,3	;
358)   8779 28 1C       		               JR Z, SGEFEXIT                                                  ;Z=EOB	;Z=EOB
359)   877B EB          		               EX DE,HL                                                        ;SAVE HL SET HL=DE	;SAVE HL SET HL=DE
360)   877C B7          		               OR A	;
361)   877D ED 42       		               SBC HL,BC	;
362)   877F 7C          		               LD A,H	;
363)   8780 B5          		               OR L	;
364)   8781 EB          		               EX DE,HL                                                        ;RESTORE HL	;RESTORE HL
365)   8782 3E 01       		               LD A,1                                                          ;NO EOF NO EOB = NZ	;NO EOF NO EOB = NZ
366)   8784 20 11       		               JR NZ,SGEFEXIT	;
368)   8786 78          		               LD A,B	;
369)   8787 D6 01       		               SUB $01	;
370)   8789 20 09       		               JR NZ, SGDOEOF	;
371)   878B 79          		               LD A,C	;
372)   878C D6 F4       		               SUB $F4	;
373)   878E 20 04       		               JR NZ, SGDOEOF	;
374)   8790 3E 02       		               LD A,2                                                          ;Z MEANS EOB END OF BUFFER                	;Z MEANS EOB END OF BUFFER
375)   8792 18 03       		               JR  SGEFEXIT	;
377)   8794 3E 97       		SGDOEOF:       LD A,ERREOF                                                           ;RETURN 0 ON EOF	;RETURN 0 ON EOF
378)   8796 37          		               SCF         	;
379)   8797 C1          		SGEFEXIT:      POP BC	;
380)   8798 D1          		               POP DE	;
381)   8799 DD E1       		               POP IX	;
382)   879B C9          		               RET	;
385)   879C E5          		PRNHL:         PUSH HL	;
386)   879D C5          		               PUSH BC	;
387)   879E D5          		               PUSH DE	;
388)   879F CD 86 9B    		 CALL B2D16	;
389)   87A2 21 CB 00    		 LD HL,B2DBUF	;
390)   87A5 CD 1A 9C    		 CALL SKIPSPC	;
391)   87A8 CD 65 8B    		 CALL RS_TXT	;
392)   87AB D1          		               POP DE	;
393)   87AC C1          		               POP BC	;
394)   87AD E1          		               POP HL	;
395)   87AE C9          		               RET	;
397)   87AF E5          		PRINTDBG:      PUSH HL	;
398)   87B0 C5          		               PUSH BC	;
399)   87B1 D5          		               PUSH DE	;
400)   87B2 F5          		               PUSH AF	;
402)   87B3 CD 9C 87    		               CALL PRNHL	;
403)   87B6 D5          		               PUSH DE	;
404)   87B7 C5          		               PUSH BC	;
405)   87B8 CD 26 80    		 CALL OS_PRINTMSG	;
406)   87BB 20 48 4C    		 DEFM " HL"	;
407)   87BE 0A 0D 00    		 DB 10,13,0	;
408)   87C1 C1          		               POP BC	;
409)   87C2 D1          		               POP DE	;
411)   87C3 D5          		               PUSH DE	;
412)   87C4 E1          		               POP HL	;
413)   87C5 CD 9C 87    		               CALL PRNHL	;
414)   87C8 D5          		               PUSH DE	;
415)   87C9 C5          		               PUSH BC	;
416)   87CA CD 26 80    		 CALL OS_PRINTMSG	;
417)   87CD 20 44 45    		 DEFM " DE"	;
418)   87D0 0A 0D 00    		 DB 10,13,0	;
419)   87D3 C1          		               POP BC	;
420)   87D4 D1          		               POP DE	;
422)   87D5 C5          		               PUSH BC	;
423)   87D6 E1          		               POP HL	;
424)   87D7 CD 9C 87    		               CALL PRNHL	;
425)   87DA D5          		               PUSH DE	;
426)   87DB C5          		               PUSH BC	;
427)   87DC CD 26 80    		 CALL OS_PRINTMSG	;
428)   87DF 20 42 43    		 DEFM " BC"	;
429)   87E2 0A 0D 00    		 DB 10,13,0	;
430)   87E5 C1          		               POP BC	;
431)   87E6 D1          		               POP DE	;
434)   87E7 F1          		               POP AF	;
435)   87E8 D1          		               POP DE	;
436)   87E9 C1          		               POP BC	;
437)   87EA E1          		               POP HL	;
438)   87EB C9          		               RET	;
442)   87EC F5          		CLRBUFR:       PUSH AF	;
443)   87ED E5          		               PUSH HL	;
444)   87EE D5          		               PUSH DE	;
445)   87EF C5          		               PUSH BC	;
446)   87F0 AF          		               XOR A	;
447)   87F1 12          		               LD (DE),A	;
448)   87F2 D5          		               PUSH DE	;
449)   87F3 E1          		               POP HL	;
450)   87F4 13          		               INC DE	;
451)   87F5 01 F3 01    		               LD BC,499	;
452)   87F8 ED B0       		               LDIR        	;
453)   87FA C1          		               POP BC	;
454)   87FB D1          		               POP DE	;
455)   87FC E1          		               POP HL	;
456)   87FD F1          		               POP AF	;
457)   87FE C9          		               RET	;
462)   87FF 04          		 DEFB 4                                                          ;COUNT OF DISPLACEMENTS-1	;COUNT OF DISPLACEMENTS-1
463)   8800 2A          		 DEFB SG2OIN-$        ;OPEN IN	;OPEN IN
464)   8801 2D          		 DEFB SG2OOT-$        ;OPEN OUT	;OPEN OUT
465)   8802 99          		 DEFB SG2INP-$        ;INPUT BYTE	;INPUT BYTE
466)   8803 05          		 DEFB SG2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
467)   8804 7C          		 DEFB SG2CLS-$        ;CLOSE	;CLOSE
 19)   8805 21 58 00    		STNEWD: LD HL, $58        ;DEVTAB	;DEVTAB
 20)   8808 11 15 88    		 LD DE, DEVTAB        ; NEW TABLE SET	; NEW TABLE SET
 21)   880B 73          		 LD (HL), E	;
 22)   880C 23          		 INC HL	;
 23)   880D 72          		 LD (HL), D	;
 24)   880E 21 13 00    		 LD HL, DEFSTOR	;
 25)   8811 3E 0C       		 LD A, 12        ;DEFAULT STORE DEVICE IS 12 NB STORAGE MODULE	;DEFAULT STORE DEVICE IS 12 NB STORAGE MODULE
 26)   8813 77          		 LD (HL), A	;
 27)   8814 C9          		 RET	;
 31)   8815 11          		DEVTAB: DEFB 17        ;number of entries ;number of entries	;number of entries ;number of entries
 32)   8816 83 E6       		 DEFW TVIO        ;	;
 33)   8818 EE ED       		 DEFW TP1IO        ;	;
 34)   881A F4 ED       		 DEFW TP2IO        ;	;
 35)   881C 50 E6       		 DEFW LIIO        ;	;
 36)   881E 75 E6       		 DEFW TLIO        ;	;
 37)   8820 36 A1       		 DEFW NKBWIO        ;	;
 38)   8822 1A A1       		 DEFW NKBIIO        ;	;
 39)   8824 1F E4       		 DEFW UPIO        ;	;
 40)   8826 3C E4       		 DEFW LPIO        ;	;
 41)   8828 2F E4       		 DEFW JGIO        ;	;
 42)   882A 19 E4       		 DEFW DUMMY        ;	;
 43)   882C 96 A5       		 DEFW GRAPH        ;  	;
 44)   882E 11 86       		               DEFW SG2IO        ;MY STORAGE DEVICE 13 BDISCIO BINARY SERIAL	;MY STORAGE DEVICE 13 BDISCIO BINARY SERIAL
 45)   8830 11 86       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 14 TDISCIO SAME AS 13 FOR ME	;MY STORAGE DEVICE 14 TDISCIO SAME AS 13 FOR ME
 46)   8832 11 86       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 15 RDISCIO RANDOM ACCESS	;MY STORAGE DEVICE 15 RDISCIO RANDOM ACCESS
 47)   8834 11 86       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 16 SDISCIO DIR COMMANDS	;MY STORAGE DEVICE 16 SDISCIO DIR COMMANDS
 48)   8836 AD 85       		               DEFW RS2IO        ;MY SERIAL DEVICE 17	;MY SERIAL DEVICE 17
  6)   8838 FE 00       		 CP 0	;
  7)   883A C8          		 RET Z	;
  8)   883B CD DF 88    		 CALL NBLOOKASC	;
  9)   883E C9          		 RET	;
 12)   883F 21 5D 88    		NBLOOK: LD HL, NBTAB	;
 13)   8842 06 00       		 LD B, 0	;
 14)   8844 4F          		 LD C, A	;
 15)   8845 09          		 ADD HL, BC	;
 16)   8846 7E          		 LD A, (HL)	;
 17)   8847 FE 00       		 CP 0	;
 18)   8849 C8          		 RET Z	;
 19)   884A 21 80 00    		 LD HL, KEYCTR        ;BIT 6=SHIFT BIT 7=CTRL  BIT 6+7=GRPH	;BIT 6=SHIFT BIT 7=CTRL  BIT 6+7=GRPH
 20)   884D CB 6E       		 BIT 5, (HL)	;
 21)   884F 28 04       		 JR Z, NOGRPH	;
 22)   8851 06 C0       		 LD B, 192        ;SET BIT 6 AND 7	;SET BIT 6 AND 7
 23)   8853 18 06       		 JR NBLKEX	;
 24)   8855 4F          		NOGRPH: LD C, A	;
 25)   8856 7E          		 LD A, (HL)	;
 26)   8857 E6 C0       		 AND 11000000	;
 27)   8859 47          		 LD B, A	;
 28)   885A 79          		 LD A, C	;
 29)   885B B0          		NBLKEX: OR B	;
 30)   885C C9          		 RET	;
 32)   885D 00 00 00 00 		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 32)   8861 00 00 00 00 		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 32)   8865 00 00       		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 33)   8867 00 00 00 A4 		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 33)   886B 00 00 00 00 		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 33)   886F 00 00       		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 34)   8871 00 0E 09 00 		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 34)   8875 00 00 3C 2D 		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 34)   8879 2E 0D       		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 35)   887B 08 00 00 3A 		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 35)   887F 3B 2C 0C 06 		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 35)   8883 07 00       		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 36)   8885 00 0F 39 2B 		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 36)   8889 0A 0B 05 00 		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 36)   888D 00 34       		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 37)   888F 38 29 2A 25 		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 37)   8893 04 00 00 00 		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 37)   8897 35 33       		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 38)   8899 23 03 13 00 		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 38)   889D 00 36 3E 24 		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 38)   88A1 26 15       		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 39)   88A3 14 00 00 37 		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 39)   88A7 2F 27 28 1A 		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 39)   88AB 1C 00       		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 40)   88AD 00 00 43 00 		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 40)   88B1 56 1B 00 00 		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 40)   88B5 00 00       		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 41)   88B7 1E 00 00 00 		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 41)   88BB 00 00 00 00 		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 41)   88BF 00 00       		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 42)   88C1 00 00 40 00 		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 42)   88C5 00 9A 00 02 		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 42)   88C9 3F 00       		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 43)   88CB 00 00 3D A5 		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 43)   88CF 22 00 12 32 		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 43)   88D3 1F 19       		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 44)   88D5 00 1D 07 1C 		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 44)   88D9 18 14 00 00 		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 44)   88DD 00 00       		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 47)   88DF 21 E8 88    		NBLOOKASC:     LD HL, NBRSTAB	;
 48)   88E2 06 00       		 LD B, 0	;
 49)   88E4 4F          		 LD C, A	;
 50)   88E5 09          		 ADD HL, BC	;
 51)   88E6 7E          		 LD A, (HL)	;
 52)   88E7 C9          		 RET	;
 55)   88E8 00 3D 52 12 		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 55)   88EC 02 00 40 00 		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 55)   88F0 40 9B       		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 56)   88F2 22 32 00 1E 		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 56)   88F6 00 00 00 00 		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 56)   88FA 00 00       		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 57)   88FC 00 00 00 00 		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 57)   8900 00 00 00 1F 		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 57)   8904 9C 9D       		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 58)   8906 00 00 0F 49 		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 58)   890A 48 47 46 45 		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 58)   890E 00 43       		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 59)   8910 16 17 18 1D 		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 59)   8914 36 1C 37 2F 		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 59)   8918 15 09       		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 60)   891A 08 07 06 05 		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 60)   891E 04 03 13 14 		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 60)   8922 68 28       		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 61)   8924 76 1B 77 6F 		 DB 54+64,27,55+64,47+64,0,46+64,56+64,58+64,44+64,12+64  ; 60- 69	; 60- 69
 61)   8928 00 6E 78 7A 		 DB 54+64,27,55+64,47+64,0,46+64,56+64,58+64,44+64,12+64  ; 60- 69	; 60- 69
 61)   892C 6C 4C       		 DB 54+64,27,55+64,47+64,0,46+64,56+64,58+64,44+64,12+64  ; 60- 69	; 60- 69
 62)   892E 6B 6A 69 64 		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 62)   8932 73 7E 67 75 		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 62)   8936 74 66       		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 63)   8938 5A 4E 4B 6D 		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 63)   893C 4A 63 79 4D 		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 63)   8940 7B 65       		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 64)   8942 7C 56 5C 57 		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 64)   8946 00 00 00 2E 		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 64)   894A 38 3A       		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 65)   894C 2C 0C 2B 2A 		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 65)   8950 29 24 33 3E 		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 65)   8954 27 35       		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 66)   8956 34 26 1A 0E 		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 66)   895A 0B 2D 0A 23 		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 66)   895E 39 0D       		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 67)   8960 3B 25 3C 00 		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 67)   8964 00 00 00 00 		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 67)   8968 00 00       		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 68)   896A 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 68)   896E 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 68)   8972 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 69)   8974 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 69)   8978 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 69)   897C 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 70)   897E 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 70)   8982 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 70)   8986 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 71)   8988 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 71)   898C 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 71)   8990 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 72)   8992 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 72)   8996 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 72)   899A 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 73)   899C 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 73)   89A0 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 73)   89A4 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 74)   89A6 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 74)   89AA 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 74)   89AE 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 75)   89B0 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 75)   89B4 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 75)   89B8 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 76)   89BA 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 76)   89BE 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 76)   89C2 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 77)   89C4 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 77)   89C8 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 77)   89CC 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 78)   89CE 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 78)   89D2 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 78)   89D6 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 79)   89D8 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 79)   89DC 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 79)   89E0 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 80)   89E2 00 00 00 00 		               DB 0,0,0,0,0,0           ;250-  5	;250-  5
 80)   89E6 00 00       		               DB 0,0,0,0,0,0           ;250-  5	;250-  5
  7)   89E8 21 80 00    		@PS2KBINIT: LD HL,KEYCTR	;
  8)   89EB 36 00       		 LD (HL),0	;
  9)   89ED C9          		 RET	;
 12)   89EE DB 06       		@PS2KEYAVAIL: IN A,(6)	;
 13)   89F0 FE 38       		 CP 56  ;38H =0011 1000  0011 IS 3 MEANS KBD INPUT 1000 MEANS REAL KEYBOARD	;38H =0011 1000  0011 IS 3 MEANS KBD INPUT 1000 MEANS REAL KEYBOARD
 14)   89F2 C9          		 RET	;
 16)   89F3 CD FF 89    		@READKBCHAR: CALL GETKBKEY ;GET HARDWARE KEY WITH CHECKS ON SHIFT...	;GET HARDWARE KEY WITH CHECKS ON SHIFT...
 17)   89F6 B7          		 OR A ;	;
 18)   89F7 C8          		 RET Z	;
 19)   89F8 32 81 00    		 LD (LASTKEY),A	;
 20)   89FB CD 18 99    		 CALL PS2LOK  ;RETURN ASCII CHAR	;RETURN ASCII CHAR
 21)   89FE C9          		 RET	;
 24)   89FF CD 08 8A    		GETKBKEY: CALL GETPS2HWKEY ;GET SCANCODE FROM PS/2 KEYB	;GET SCANCODE FROM PS/2 KEYB
 25)   8A02 B7          		 OR A 	;
 26)   8A03 C8          		 RET Z   ;IF KEYBRD KEY IS ZERO	;IF KEYBRD KEY IS ZERO
 27)   8A04 CD 57 98    		 CALL CHECKEXT  ;CHECKEXT SHIFTS CTRL ALT CAPS	;CHECKEXT SHIFTS CTRL ALT CAPS
 28)   8A07 C9          		 RET	;
 32)   8A08 F3          		GETPS2HWKEY: DI	;
 33)   8A09 DB 48       		 IN A,(DEVKBI)  	;
 34)   8A0B 4F          		 LD C,A	;
 35)   8A0C CD 17 8A    		 CALL KBENABLE	;
 36)   8A0F 79          		 LD A,C	;
 37)   8A10 FB          		 EI	;
 38)   8A11 C9          		 RET	;
 40)   8A12 3E 02       		@KBDISABLE: LD A, 2	;
 41)   8A14 D3 48       		 OUT (DEVKBI), A	;
 42)   8A16 C9          		 RET	;
 44)   8A17 AF          		@KBENABLE: XOR A	;
 45)   8A18 D3 48       		 OUT (DEVKBI), A	;
 46)   8A1A D3 48       		 OUT (DEVKBI), A	;
 47)   8A1C D3 48       		 OUT (DEVKBI), A	;
 48)   8A1E C9          		 RET	;
 35)   8A1F 3E 03       		PATCHCMDS: LD A,11b ;DISABLE INTS & DISABLE NB=RAM WRITABLE	;DISABLE INTS & DISABLE NB=RAM WRITABLE
 36)   8A21 D3 E0       		 OUT (INTENB),A	;
 37)   8A23 21 F9 A2    		 LD HL,$A2F9	;
 38)   8A26 36 CD       		 LD (HL),$CD ;CALL	;CALL
 39)   8A28 11 5F 8A    		 LD DE,CHKNEWCMD	;
 40)   8A2B 23          		 INC HL	;
 41)   8A2C 73          		 LD (HL),E	;
 42)   8A2D 23          		 INC HL	;
 43)   8A2E 72          		 LD (HL),D	;
 44)   8A2F 21 85 A4    		 LD HL,$A485  ;PXCL3	;PXCL3
 45)   8A32 36 C3       		 LD (HL),$C3 ;JP	;JP
 46)   8A34 11 43 8A    		 LD DE,OSXCL3	;
 47)   8A37 23          		 INC HL	;
 48)   8A38 73          		 LD (HL),E	;
 49)   8A39 23          		 INC HL	;
 50)   8A3A 72          		 LD (HL),D	;
 51)   8A3B 3E 01       		 LD A,01b  ;DISABLE INTS & ENABLE NB=RAM NON WRITABLE	;DISABLE INTS & ENABLE NB=RAM NON WRITABLE
 52)   8A3D D3 E0       		 OUT (INTENB),A  	;
 53)   8A3F C9          		 RET	;
 57)   8A40 01          		 TOS DEFB 1	;
 58)   8A41 4F          		 DEFM 'O'	;
 59)   8A42 D3          		 DEFB 'S'+80H	;
 62)   8A43 01 14 DD    		OSXCL3: LD BC,XTABLE	;
 63)   8A46 FA 35 C3    		 JP M,ENTER	;
 64)   8A49 01 00 DE    		 LD BC,XTABL2	;
 65)   8A4C FE 56       		 CP LPCODE	;
 66)   8A4E DA 35 C3    		 JP C,ENTER       ;IF <$56 GOTO TAB2 	;IF <$56 GOTO TAB2
 67)   8A51 01 43 A4    		 LD BC,XTABL3	;
 68)   8A54 FE 62       		 CP OSCODE	;
 69)   8A56 DA 35 C3    		 JP C,ENTER ;IF <$62 GOTO TAB3	;IF <$62 GOTO TAB3
 70)   8A59 01 2A 8A    		 LD BC,XTABL4 ;ELSE  OUR TAB4	;ELSE  OUR TAB4
 71)   8A5C C3 35 C3    		 JP ENTER	;
 74)   8A5F DD E5       		 PUSH IX	;
 75)   8A61 FD E5       		 PUSH IY	;
 76)   8A63 D5          		 PUSH DE	;
 77)   8A64 21 40 8A    		 LD HL,TOS	;
 78)   8A67 CD D4 A2    		 CALL PSCAN	;
 79)   8A6A D4 76 8A    		 CALL NC, COSCMD	;
 80)   8A6D D1          		 POP DE	;
 81)   8A6E FD E1       		 POP IY	;
 82)   8A70 DD E1       		 POP IX	;
 84)   8A72 21 5A A3    		 LD HL,TPLOT	;
 85)   8A75 C9          		 RET	;
 88)   8A76 21 96 8A    		COSCMD: LD HL,OSLST	;
 89)   8A79 CD D4 A2    		 CALL PSCAN ;check for any of the OS COMMAND-list	;check for any of the OS COMMAND-list
 90)   8A7C D8          		 RET C	;
 91)   8A7D 61          		 LD H,C  ;THE OS LIST COMMAND ID ON C	;THE OS LIST COMMAND ID ON C
 92)   8A7E 2E B1       		 LD L,YOSCMD ;THE OS COMMAND	;THE OS COMMAND
 93)   8A80 D7 01       		 DEFW ZCM2HL	;
 94)   8A82 05          		 DEC B  ;CHECK FOR ARGS	;CHECK FOR ARGS
 95)   8A83 C8          		 RET Z	;
 99)   8A84 DF 18       		 DEFW WEXPN	;
100)   8A86 D8          		 RET C	;
108)   8A87 C9          		 RET	;
111)   8A88 A0 8A       		OSCMDTBL: DEFW CMD_DIR	;
112)   8A8A B8 8A       		 DEFW CMD_CD	;
125)   8A8C 8E 8A       		       DEFW XOSCMD	;
127)   8A8E 7E          		XOSCMD: LD A,(HL) ;GET SUB COMMAND 0=DIR 1=CD	;GET SUB COMMAND 0=DIR 1=CD
128)   8A8F B7          		 OR A	;
129)   8A90 28 0E       		 JR Z,CMD_DIR	;
130)   8A92 3D          		 DEC A	;
131)   8A93 28 23       		 JR Z,CMD_CD	;
133)   8A95 C9          		 RET	;
135)   8A96 02          		OSLST: DEFB 2 ;no of sub-commands	;no of sub-commands
137)   8A97 44 49       		 DEFM 'DI' 	;
138)   8A99 D2 00 01    		 DEFB 'R'+80H,CDIR,1 ;+1 OF ARGS	;+1 OF ARGS
140)   8A9C 43          		 DEFM 'C' 	;
141)   8A9D C4 01 02    		 DEFB 'D'+80H,CCD,2	;
145)   8AA0 D7 39       		CMD_DIR: DEFW ZPTMSG ;	;
146)   8AA2 11          		 DEFB 17	;
147)   8AA3 0D          		 DEFB $0D	;
148)   8AA4 2D 2D 2D 5B 		 DEFM "---[DIR INFO]--"	;
148)   8AA8 44 49 52 20 		 DEFM "---[DIR INFO]--"	;
148)   8AAC 49 4E 46 4F 		 DEFM "---[DIR INFO]--"	;
148)   8AB0 5D 2D 2D    		 DEFM "---[DIR INFO]--"	;
149)   8AB3 0D          		 DEFB $0D	;
150)   8AB4 CD 62 8C    		 CALL STRG_DIRLIST  ;PRINT DIR	;PRINT DIR
151)   8AB7 C9          		 RET	;
153)   8AB8 CD 36 DC    		CMD_CD: CALL GUSTP   ;SETS HL FROM IX+11,12 USRTOP	;SETS HL FROM IX+11,12 USRTOP
154)   8ABB CD 11 8D    		 CALL STRG_DIRCHG	;
155)   8ABE 38 09       		 JR C, CD_ERR	;
156)   8AC0 3E 96       		 LD A,150   ;ERROR MISSING FILE	;ERROR MISSING FILE
157)   8AC2 28 05       		 JR Z,CD_ERR	;
164)   8AC4 CD B3 8C    		 CALL STRG_DIRNMCHG	;
165)   8AC7 18 0F       		 JR CD_CONT	;
167)   8AC9 E5          		 PUSH HL	;
168)   8ACA F5          		 PUSH AF  	;
169)   8ACB D7 39       		 DEFW ZPTMSG ;	;
170)   8ACD 05          		 DEFB 5	;
171)   8ACE 45 52 52 5F 		 DEFM "ERR_R"	;
171)   8AD2 52          		 DEFM "ERR_R"	;
172)   8AD3 F1          		 POP AF  	;
173)   8AD4 CD F2 80    		 CALL SOUTAS  	;
174)   8AD7 E1          		 POP HL  	;
175)   8AD8 F5          		CD_CONT: PUSH AF   ;SAVE FLAGS  	;SAVE FLAGS
177)   8AD9 54          		 LD D,H	;
178)   8ADA 5D          		 LD E,L	;
179)   8ADB 1A          		CD_AGN: LD A,(DE)	;
180)   8ADC FE 00       		 CP 0	;
181)   8ADE 3E 00       		 LD A,0	;
182)   8AE0 12          		 LD (DE),A    ;ZERO THIS	;ZERO THIS
183)   8AE1 13          		 INC DE	;
184)   8AE2 20 F7       		 JR NZ,CD_AGN	;
185)   8AE4 06 04       		 LD B,4	;
186)   8AE6 12          		CD_AGN2: LD (DE),A	;
187)   8AE7 13          		 INC DE	;
188)   8AE8 10 FC       		 DJNZ CD_AGN2	;
190)   8AEA E5          		 PUSH HL	;
191)   8AEB D5          		 PUSH DE	;
192)   8AEC 21 E0 00    		 LD HL,DIRNM	;
193)   8AEF 7E          		NXTCHR: LD A,(HL)	;
194)   8AF0 B7          		 OR A 	;
195)   8AF1 28 05       		 JR Z,NXTPATH	;
196)   8AF3 DF 3C       		 DEFW WPTCHAR	;
197)   8AF5 23          		 INC HL	;
198)   8AF6 18 F7       		 JR NXTCHR	;
199)   8AF8 23          		NXTPATH: INC HL	;
200)   8AF9 7E          		 LD A,(HL)	;
201)   8AFA B7          		 OR A	;
202)   8AFB 20 F2       		 JR NZ,NXTCHR	;
203)   8AFD D1          		 POP DE	;
204)   8AFE E1          		 POP HL	;
205)   8AFF EB          		 EX DE,HL	;
206)   8B00 CD 8C C5    		 CALL LDUSTP	;
210)   8B03 F1          		 POP AF  ;REST FLAGS  	;REST FLAGS
211)   8B04 AF          		 XOR A	;
212)   8B05 C9          		 RET	;
 10)   8B06 21 82 00    		INITMMU:       LD HL,BANKS	;
 11)   8B09 06 08       		               LD B,8	;
 12)   8B0B AF          		               XOR A	;
 13)   8B0C 77          		INM_AGN:       LD (HL),A	;
 14)   8B0D 3C          		               INC A	;
 15)   8B0E 23          		 INC HL	;
 16)   8B0F 10 FB       		               DJNZ INM_AGN	;
 17)   8B11 C9          		               RET                	;
 23)   8B12 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 24)   8B13 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 25)   8B14 FE 02       		 CP 2	;
 26)   8B16 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 27)   8B17 FE 07       		 CP 7	;
 28)   8B19 C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 29)   8B1A 21 82 00    		 LD HL, BANKS	;
 30)   8B1D 16 00       		 LD D, 0	;
 31)   8B1F 5F          		 LD E, A	;
 32)   8B20 19          		 ADD HL, DE	;
 33)   8B21 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 34)   8B22 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 35)   8B23 0E 00       		 LD C, DEVMMU	;
 36)   8B25 58          		 LD E,B	;
 37)   8B26 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 38)   8B28 CB 20       		 SLA B	;
 39)   8B2A CB 20       		 SLA B	;
 40)   8B2C CB 20       		 SLA B	;
 41)   8B2E CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 42)   8B30 ED 79       		 OUT (C), A	;
 43)   8B32 43          		 LD B,E	;
 44)   8B33 C9          		 RET	;
 49)   8B34 21 82 00    		GETPGINBANK:   LD HL,BANKS	;
 50)   8B37 16 00       		               LD D,0	;
 51)   8B39 58          		               LD E,B	;
 52)   8B3A 19          		               ADD HL,DE	;
 53)   8B3B 7E          		               LD A,(HL)	;
 54)   8B3C C9          		               RET	;
 17)   8B3D 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 18)   8B3D 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 19)   8B3D 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 24)   8B3D 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 29)   8B3D 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 37)   8B3D 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 45)   8B3D 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 46)   8B3D 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 55)   8B3D 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 56)   8B3D 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 57)   8B3D 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 58)   8B3D 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 64)   8B3D F5          		RS_INI: PUSH AF	;
 65)   8B3E 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 66)   8B40 D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 75)   8B42 F1          		 POP AF	;
 76)   8B43 D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 77)   8B45 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 78)   8B47 D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 79)   8B49 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 80)   8B4B D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 82)   8B4D 3E 00       		 LD A, 0	;
 83)   8B4F D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 84)   8B51 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 85)   8B53 D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 86)   8B55 C9          		 RET	;
 89)   8B56 CD 5C 8B    		RS_TX: CALL RSTXRD	;
 90)   8B59 D3 20       		 OUT (THR), A	;
 92)   8B5B C9          		 RET	;
 95)   8B5C F5          		RSTXRD: PUSH AF	;
 96)   8B5D DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 97)   8B5F CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 98)   8B61 28 FA       		 JR Z, RSTXLP	;
 99)   8B63 F1          		 POP AF	;
100)   8B64 C9          		 RET	;
104)   8B65 7E          		RS_TXT: LD A, (HL)	;
105)   8B66 23          		 INC HL	;
106)   8B67 FE 00       		 CP 0	;
107)   8B69 C8          		 RET Z	;
108)   8B6A CD 56 8B    		 CALL RS_TX	;
109)   8B6D 18 F6       		 JR RS_TXT	;
113)   8B6F E5          		RS_MESG: PUSH HL	;
114)   8B70 C5          		 PUSH BC	;
115)   8B71 D5          		 PUSH DE	;
116)   8B72 F5          		 PUSH AF	;
117)   8B73 21 09 00    		 LD HL,9 ;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING	;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING
118)   8B76 39          		 ADD HL,SP	;
119)   8B77 46          		 LD B,(HL)    	;
120)   8B78 2B          		 DEC HL	;
121)   8B79 4E          		 LD C,(HL)	;
122)   8B7A 60          		 LD H,B	;
123)   8B7B 69          		 LD L,C	;
124)   8B7C CD 65 8B    		 CALL RS_TXT	;
125)   8B7F F1          		 POP AF	;
126)   8B80 D1          		 POP DE	;
127)   8B81 44          		 LD B,H  ;NEW RET ADDRESS	;NEW RET ADDRESS
128)   8B82 4D          		 LD C,L	;
129)   8B83 21 05 00    		 LD HL,5 ;POINTS TO RET ADDRESS +6 FROM SP	;POINTS TO RET ADDRESS +6 FROM SP
130)   8B86 39          		 ADD HL,SP  	;
131)   8B87 70          		 LD (HL),B	;
132)   8B88 2B          		 DEC HL	;
133)   8B89 71          		 LD (HL),C  	;
134)   8B8A C1          		 POP BC	;
135)   8B8B E1          		 POP HL	;
136)   8B8C C9          		 RET 	;
143)   8B8D ED 57       		RS_RX: LD A,I        ;SETS PV IF INTS ARE ENABLED	;SETS PV IF INTS ARE ENABLED
144)   8B8F F5          		 PUSH AF	;
145)   8B90 D1          		 POP DE	;
146)   8B91 F3          		 DI	;
147)   8B92 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
148)   8B94 D3 24       		 OUT (MCR), A	;
149)   8B96 CD B4 8B    		 CALL RSRXRD	;
150)   8B99 AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
151)   8B9A D3 24       		 OUT (MCR), A	;
153)   8B9C DB 20       		 IN A, (RBR)  	;
154)   8B9E D5          		 PUSH DE	;
155)   8B9F 57          		 LD D,A	;
156)   8BA0 F1          		 POP AF	;
157)   8BA1 7A          		 LD A,D	;
158)   8BA2 E0          		 RET PO  	;
159)   8BA3 FB          		 EI	;
160)   8BA4 C9          		 RET	;
162)   8BA5 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
163)   8BA7 D3 24       		 OUT (MCR), A	;
164)   8BA9 DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
165)   8BAB CB 47       		 BIT 0, A	;
166)   8BAD 28 03       		 JR Z, RS_NOCHAR	;
167)   8BAF F3          		 DI	;
168)   8BB0 18 E7       		 JR RS_GTCH	;
169)   8BB2 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
170)   8BB3 C9          		 RET	;
178)   8BB4 F5          		 PUSH AF	;
184)   8BB5 DB 25       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
185)   8BB7 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
186)   8BB9 28 FA       		 JR Z, RSRXLP	;
188)   8BBB F1          		 POP AF	;
190)   8BBC C9          		 RET	;
194)   8BBD DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
195)   8BBF CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
196)   8BC1 C9          		 RET	;
198)   8BC2 F5          		SHLCD: PUSH AF	;
200)   8BC3 F1          		 POP AF	;
202)   8BC4 C9          		 RET	;
204)   8BC5 F5          		RS_NEWLINE: PUSH AF	;
205)   8BC6 3E 0D       		 LD A,13	;
206)   8BC8 CD 56 8B    		 CALL RS_TX	;
207)   8BCB 3E 0A       		 LD A,10	;
208)   8BCD CD 56 8B    		 CALL RS_TX	;
209)   8BD0 F1          		 POP AF	;
210)   8BD1 C9          		 RET  	;
213)   8BD2 F5          		CHKERR: PUSH AF	;
214)   8BD3 E5          		 PUSH HL	;
215)   8BD4 C5          		 PUSH BC	;
216)   8BD5 DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
217)   8BD7 CB 67       		 BIT 4, A	;
218)   8BD9 28 04       		 JR Z, LBLPE	;
219)   8BDB 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
220)   8BDD 18 1A       		 JR EXIT	;
221)   8BDF CB 57       		LBLPE: BIT 2, A	;
222)   8BE1 28 04       		 JR Z, LBLFE	;
223)   8BE3 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
224)   8BE5 18 12       		 JR EXIT	;
225)   8BE7 CB 5F       		LBLFE: BIT 3, A	;
226)   8BE9 28 04       		 JR Z, LBLOE	;
227)   8BEB 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
228)   8BED 18 0A       		 JR EXIT	;
229)   8BEF CB 4F       		LBLOE: BIT 1, A	;
230)   8BF1 28 04       		 JR Z, LBLNE	;
231)   8BF3 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
232)   8BF5 18 02       		 JR EXIT	;
233)   8BF7 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
234)   8BF9 21 7A 00    		EXIT: LD HL, SERERR	;
235)   8BFC 77          		 LD (HL), A	;
237)   8BFD C1          		 POP BC	;
238)   8BFE E1          		 POP HL	;
239)   8BFF F1          		 POP AF	;
240)   8C00 C9          		 RET	;
 32)   8C01 	            		@CH376_ERROR EQU RS_MESG	;
 42)   8C01 57          		STRG_INIT: LD D,A	;
 43)   8C02 AF          		 XOR A  	;
 44)   8C03 32 8A 00    		 LD (STRG_STAT),A  ;NOT CONNECTED, NOT EXISTS	;NOT CONNECTED, NOT EXISTS
 45)   8C06 CD DE 91    		 CALL CH376_INIT	;
 46)   8C09 20 06       		 JR NZ,INIERR	;
 47)   8C0B 7A          		 LD A,D   ;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH	;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH
 48)   8C0C CD F3 91    		 CALL CH376_SETUSB	;
 49)   8C0F 28 03       		 JR Z,INIOK	;
 50)   8C11 3E 00       		INIERR: LD A,0  	;
 51)   8C13 C9          		 RET	;
 52)   8C14 CD D3 91    		INIOK: CALL CH376_VERSION	;
 53)   8C17 BF          		 CP A  ;SET ZF	;SET ZF
 54)   8C18 3E 80       		 LD A, $80  ;BIT 7 MEANS EXISTS	;BIT 7 MEANS EXISTS
 55)   8C1A 32 8A 00    		 LD (STRG_STAT),A  ;	;
 56)   8C1D C9          		 RET	;
 59)   8C1E 3A 8A 00    		STRG_EXISTS: LD A,(STRG_STAT)	;
 60)   8C21 CB 7F       		 BIT 7,A	;
 61)   8C23 C9          		 RET	;
 67)   8C24 CD 1E 8C    		STRG_CHECK: CALL STRG_EXISTS	;
 68)   8C27 37          		 SCF	;
 69)   8C28 C8          		 RET Z    ;Z MEANS NOT EXISTS	;Z MEANS NOT EXISTS
 70)   8C29 06 05       		 LD B,5	;
 71)   8C2B CD 23 92    		SC_AGN1: CALL CH376_CONNECT 	;
 72)   8C2E 28 06       		 JR Z,DOCON	;
 73)   8C30 30 1C       		 JR NC,DODISC	;
 74)   8C32 10 F7       		 DJNZ SC_AGN1    	;
 78)   8C34 AF          		 XOR A   	;
 79)   8C35 C9          		 RET   ;TIMEOUT	;TIMEOUT
 81)   8C36 AF          		DOCON: XOR A    ;CLCF	;CLCF
 82)   8C37 3A 8A 00    		 LD A,(STRG_STAT)	;
 83)   8C3A CB 47       		 BIT 0,A	;
 84)   8C3C C0          		 RET NZ    ;ALREADY MOUNTED THE DRIVE	;ALREADY MOUNTED THE DRIVE
 88)   8C3D CD 2E 92    		 CALL CH376_MOUNT   ;MOUNT THE DRIVE	;MOUNT THE DRIVE
 89)   8C40 20 0C       		 JR NZ, DONOMNT	;
 93)   8C42 3A 8A 00    		 LD A,(STRG_STAT)	;
 94)   8C45 CB C7       		 SET 0,A	;
 95)   8C47 32 8A 00    		 LD (STRG_STAT),A	;
 96)   8C4A AF          		 XOR A    ;CLEAR CARRY FLAG MEANS WE ARE OK	;CLEAR CARRY FLAG MEANS WE ARE OK
 97)   8C4B 3E 01       		 LD A,1    ;A=1 IS JUST CONNECTED	;A=1 IS JUST CONNECTED
 98)   8C4D C9          		 RET	;
106)   8C4E AF          		 XOR A 	;
107)   8C4F 3A 8A 00    		 LD A,(STRG_STAT)  	;
108)   8C52 CB 47       		 BIT 0,A	;
109)   8C54 C8          		 RET Z    ;ALREADY DISCONNECTED	;ALREADY DISCONNECTED
110)   8C55 CB 87       		 RES 0,A    ;SET BIT 0 TO 0=DISCONNECTED	;SET BIT 0 TO 0=DISCONNECTED
111)   8C57 32 8A 00    		 LD (STRG_STAT),A  	;
112)   8C5A 3E 02       		 LD A,2    ;A=2 IS JUST DISCONNECTED	;A=2 IS JUST DISCONNECTED
113)   8C5C C9          		 RET	;
119)   8C5D C3 37 92    		STRG_OPENCRD:  JP CH376_MOUNTDEV  	;
122)   8C60 2A 00       		SDIRTP  DEFB '*',0	;
124)   8C62 CD 94 8C    		STRG_DIRLIST: CALL STRG_OPENCDIR ;OPEN CURRENT DIR	;OPEN CURRENT DIR
125)   8C65 21 60 8C    		 LD HL,SDIRTP	;
126)   8C68 CD 11 8D    		 CALL STRG_OPENFD	;
127)   8C6B C8          		DL_NXTFILE: RET Z   ;NO  MORE FILES	;NO  MORE FILES
128)   8C6C 3E 27       		 LD A,CMD_RDUSB_DATA0	;
129)   8C6E CD BD 91    		 CALL CH376_COMMD	;
130)   8C71 CD FC 90    		 CALL CH376_GETDATA ;DATA ON USBBUF A=BYTES TO READ	;DATA ON USBBUF A=BYTES TO READ
131)   8C74 3E 00       		 LD A,0	;
132)   8C76 12          		 LD (DE),A   ;ZT STRING	;ZT STRING
134)   8C77 21 8B 00    		 LD HL,USBBUF	;
135)   8C7A CD 38 80    		 CALL OS_PRMESSCRSFE	;
136)   8C7D 3E 0D       		 LD A,$0D	;
137)   8C7F CD 2D 80    		 CALL OS_PRCHSCR	;
139)   8C82 3E 33       		 LD A, CMD_FILEENUM_GO	;
140)   8C84 CD BD 91    		 CALL CH376_COMMD	;
141)   8C87 CD 4E 91    		 CALL CH376_WTCMDEND	;
142)   8C8A FE 42       		 CP ERR_MISS_FILE	;
143)   8C8C 18 DD       		 JR DL_NXTFILE	;
147)   8C8E 7E          		NEXTDIR: LD A,(HL)	;
148)   8C8F 23          		 INC HL	;
149)   8C90 B7          		 OR A	;
150)   8C91 C8          		 RET Z	;
151)   8C92 18 FA       		 JR NEXTDIR	;
157)   8C94 E5          		STRG_OPENCDIR: PUSH HL	;
158)   8C95 D5          		 PUSH DE	;
159)   8C96 C5          		 PUSH BC  	;
160)   8C97 21 E0 00    		 LD HL,DIRNM	;
161)   8C9A CD A1 8C    		 CALL STRG_OPENCDIR2	;
162)   8C9D C1          		        POP BC	;
163)   8C9E D1          		 POP DE	;
164)   8C9F E1          		 POP HL	;
165)   8CA0 C9          		 RET	;
167)   8CA1 7E          		STRG_OPENCDIR2: LD A,(HL)	;
168)   8CA2 B7          		 OR A	;
169)   8CA3 C8          		 RET Z  ;WHEN ZERO MEANS NO MORE DIR TO OPEN	;WHEN ZERO MEANS NO MORE DIR TO OPEN
173)   8CA4 E5          		 PUSH HL	;
174)   8CA5 CD 11 8D    		 CALL STRG_OPENFD	;
175)   8CA8 E1          		 POP HL	;
176)   8CA9 D8          		 RET C  ;ERROR	;ERROR
177)   8CAA 37          		 SCF	;
178)   8CAB 3E 96       		 LD A,150 ;MISSING FILENAME	;MISSING FILENAME
179)   8CAD C8          		 RET Z  ;FILE MISSING	;FILE MISSING
181)   8CAE CD 8E 8C    		 CALL NEXTDIR	;
182)   8CB1 18 EE       		 JR STRG_OPENCDIR2	;
186)   8CB3 E5          		STRG_DIRNMCHG: PUSH HL 	;
187)   8CB4 7E          		 LD A,(HL)	;
188)   8CB5 FE 5C       		 CP '\'        ;changed from '/' on 18/2/2024	;changed from '/' on 18/2/2024
189)   8CB7 28 0E       		 JR Z,DNC_RESET	;
190)   8CB9 FE 2F       		 CP '/'        ; 25/2/2024	; 25/2/2024
191)   8CBB 28 0A       		 JR Z,DNC_RESET  	;
192)   8CBD FE 2E       		 CP '.'	;
193)   8CBF 20 2D       		 JR NZ, DNC_ADD	;
194)   8CC1 FE 2E       		 CP '.'	;
195)   8CC3 28 0F       		 JR Z,DNC_RMV	;
196)   8CC5 E1          		 POP HL	;
197)   8CC6 C9          		 RET ;DO NOTHING IF . OR .\ OR .<x>	;DO NOTHING IF . OR .\ OR .<x>
198)   8CC7 21 E0 00    		DNC_RESET: LD HL,DIRNM	;
199)   8CCA 36 5C       		 LD (HL),'\'	;
200)   8CCC 23          		 INC HL	;
201)   8CCD 36 00       		 LD (HL),0	;
202)   8CCF 23          		 INC HL	;
203)   8CD0 36 00       		 LD (HL),0	;
204)   8CD2 E1          		 POP HL	;
205)   8CD3 C9          		 RET	;
207)   8CD4 21 E0 00    		DNC_RMV: LD HL,DIRNM	;
208)   8CD7 CD 8E 8C    		 CALL NEXTDIR	;
209)   8CDA 7E          		 LD A,(HL)	;
210)   8CDB B7          		 OR A	;
211)   8CDC EB          		 EX DE,HL ;DE THE NEXT DIR	;DE THE NEXT DIR
212)   8CDD E1          		 POP HL	;
213)   8CDE C8          		 RET Z ;RET IF WE ARE ON 1ST DIRECTORY  	;RET IF WE ARE ON 1ST DIRECTORY
214)   8CDF E5          		 PUSH HL	;
215)   8CE0 EB          		 EX DE,HL ;HL THE NEXT DIR	;HL THE NEXT DIR
216)   8CE1 44          		RMV_NXT: LD B,H	;
217)   8CE2 4D          		 LD C,L	;
218)   8CE3 CD 8E 8C    		 CALL NEXTDIR	;
219)   8CE6 7E          		 LD A,(HL)	;
220)   8CE7 B7          		 OR A	;
221)   8CE8 20 F7       		 JR NZ,RMV_NXT ;GO TO NEXT DIR 	;GO TO NEXT DIR
224)   8CEA AF          		 XOR A	;
225)   8CEB 02          		 LD (BC),A	;
226)   8CEC E1          		 POP HL	;
227)   8CED C9          		 RET	;
228)   8CEE EB          		DNC_ADD: EX DE,HL ;DE THE NEW FILE	;DE THE NEW FILE
229)   8CEF 21 E0 00    		 LD HL,DIRNM	;
230)   8CF2 CD 8E 8C    		ADDNXT: CALL NEXTDIR	;
231)   8CF5 7E          		 LD A,(HL)	;
232)   8CF6 B7          		 OR A	;
233)   8CF7 20 F9       		 JR NZ,ADDNXT	;
235)   8CF9 EB          		 EX DE,HL	;
237)   8CFA 7E          		ADDNXT2: LD A,(HL)	;
238)   8CFB 12          		 LD (DE),A	;
239)   8CFC 23          		 INC HL	;
240)   8CFD 13          		 INC DE	;
241)   8CFE B7          		 OR A	;
242)   8CFF 20 F9       		 JR NZ,ADDNXT2	;
244)   8D01 EB          		 EX DE,HL	;
245)   8D02 36 00       		 LD (HL),0 ;SIGNAL END OF DIRECTORIES WITH A SECOND ZERO	;SIGNAL END OF DIRECTORIES WITH A SECOND ZERO
246)   8D04 E1          		 POP HL	;
247)   8D05 C9          		 RET	;
251)   8D06 F5          		TEMPPRMSG: PUSH AF	;
252)   8D07 CD 30 80    		 CALL OS_PRMESSCR	;
253)   8D0A 3E 0A       		 LD A,$0A	;
254)   8D0C CD 2D 80    		 CALL OS_PRCHSCR	;
255)   8D0F F1          		 POP AF	;
256)   8D10 C9          		 RET	;
265)   8D11 E5          		STRG_DIRCHG: PUSH HL	;
269)   8D12 3E 2F       		 LD A, CMD_SETFILENAME	;
270)   8D14 CD BD 91    		     CALL CH376_COMMD  	;
271)   8D17 CD 72 92    		     CALL CH376_WRSTRING	;
272)   8D1A 20 0E       		 JR NZ,DC_WSERR  	;
273)   8D1C 3E 32       		 LD A, CMD_FILE_OPEN	;
274)   8D1E CD BD 91    		 CALL CH376_COMMD	;
275)   8D21 CD 4E 91    		 CALL CH376_WTCMDEND   	;
276)   8D24 E1          		 POP HL	;
277)   8D25 FE 42       		 CP ERR_MISS_FILE	;
278)   8D27 C8          		 RET Z	;
279)   8D28 B7          		 OR A  ;CLEAR CARRY	;CLEAR CARRY
280)   8D29 C9          		 RET	;
282)   8D2A E1          		DC_WSERR: POP HL	;
283)   8D2B 37          		 SCF	;
284)   8D2C C9          		 RET  	;
286)   8D2D C9          		STRG_TPFILE: RET	;
287)   8D2E C9          		STRG_GETPOS: RET	;
291)   8D2F D5          		STRG_SETPOS16: PUSH DE	;
292)   8D30 11 00 00    		 LD DE,0	;
293)   8D33 CD 38 8D    		 CALL STRG_SETPOS 	;
294)   8D36 D1          		 POP DE	;
295)   8D37 C9          		 RET	;
297)   8D38 3E 39       		STRG_SETPOS: LD A,CMD_BYTE_LOCATE	;
298)   8D3A CD BD 91    		 CALL CH376_COMMD	;
299)   8D3D 79          		 LD A,C                             ; 4 BYTES TO SET THE OFFSET LOW IN FRONT	; 4 BYTES TO SET THE OFFSET LOW IN FRONT
300)   8D3E CD C1 91    		     CALL CH376_DATAWR	;
301)   8D41 78          		 LD A,B	;
302)   8D42 CD C1 91    		 CALL CH376_DATAWR	;
303)   8D45 7B          		 LD A,E	;
304)   8D46 CD C1 91    		 CALL CH376_DATAWR            ;LAST 2 BYTES 0 MAX 65535 SKIP	;LAST 2 BYTES 0 MAX 65535 SKIP
305)   8D49 7A          		 LD A,D	;
306)   8D4A CD C1 91    		 CALL CH376_DATAWR	;
307)   8D4D CD 4E 91    		     CALL CH376_WTCMDEND	;
308)   8D50 C9          		 RET	;
311)   8D51 C9          		STRG_GETSIZE: RET	;
312)   8D52 C9          		STRG_GETEOF: RET	;
319)   8D53 3E 27       		STRG_PRDRVINFO: LD A,CMD_RDUSB_DATA0	;
320)   8D55 CD BD 91    		 CALL CH376_COMMD	;
321)   8D58 CD FC 90    		 CALL CH376_GETDATA	;
322)   8D5B F5          		 PUSH AF	;
323)   8D5C D6 08       		 SUB 8  	;
324)   8D5E 47          		 LD B,A	;
325)   8D5F F1          		 POP AF   	;
326)   8D60 21 93 00    		 LD HL,USBBUF+8  ;SKIP 8 BYTES	;SKIP 8 BYTES
327)   8D63 7E          		PDI_NXT: LD A,(HL)	;
328)   8D64 E5          		 PUSH HL	;
329)   8D65 C5          		 PUSH BC	;
330)   8D66 CD 16 80    		 CALL OS_PRINTCHAR	;
331)   8D69 C1          		 POP BC	;
332)   8D6A E1          		 POP HL	;
333)   8D6B 23          		 INC HL	;
334)   8D6C 10 F5       		 DJNZ PDI_NXT  	;
335)   8D6E CD C5 8B    		 CALL RS_NEWLINE	;
337)   8D71 3E 3F       		 LD A,CMD_DISK_QUERY   	;
338)   8D73 CD BD 91    		 CALL CH376_COMMD	;
339)   8D76 CD 4E 91    		 CALL CH376_WTCMDEND	;
340)   8D79 C0          		 RET NZ	;
341)   8D7A 3E 27       		 LD A,CMD_RDUSB_DATA0	;
342)   8D7C CD BD 91    		 CALL CH376_COMMD  	;
343)   8D7F CD FC 90    		 CALL CH376_GETDATA	;
345)   8D82 DD 21 8B 00 		 LD IX,USBBUF 	;
346)   8D86 DD E5       		 PUSH IX   	;
347)   8D88 DD 56 03    		 LD D,(IX+3)	;
348)   8D8B DD 5E 02    		 LD E,(IX+2)	;
349)   8D8E DD 66 01    		 LD H,(IX+1)	;
350)   8D91 DD 6E 00    		 LD L,(IX+0)	;
351)   8D94 CD 8A 9B    		 CALL B2D32    ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
352)   8D97 21 CB 00    		 LD HL,B2DBUF	;
353)   8D9A CD 1A 9C    		 CALL SKIPSPC	;
354)   8D9D CD 1A 80    		 CALL OS_PRINTTEXT	;
355)   8DA0 CD 26 80    		 CALL OS_PRINTMSG	;
356)   8DA3 20 53 45 43 		 DEFM " SECTORS"	;
356)   8DA7 54 4F 52 53 		 DEFM " SECTORS"	;
357)   8DAB 0A 0D 00    		 DB 10,13 0	;
358)   8DAE DD E1       		 POP IX	;
360)   8DB0 DD E5       		 PUSH IX     	;
361)   8DB2 DD 56 07    		 LD D,(IX+7)	;
362)   8DB5 DD 5E 06    		 LD E,(IX+6)	;
363)   8DB8 DD 66 05    		 LD H,(IX+5)	;
364)   8DBB DD 6E 04    		 LD L,(IX+4)  	;
365)   8DBE CD 8A 9B    		 CALL B2D32  ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
366)   8DC1 21 CB 00    		 LD HL,B2DBUF	;
367)   8DC4 CD 1A 9C    		 CALL SKIPSPC	;
368)   8DC7 CD 1A 80    		 CALL OS_PRINTTEXT	;
369)   8DCA CD 26 80    		 CALL OS_PRINTMSG	;
370)   8DCD 20 53 45 43 		 DEFM " SECTORS FREE   "	;
370)   8DD1 54 4F 52 53 		 DEFM " SECTORS FREE   "	;
370)   8DD5 20 46 52 45 		 DEFM " SECTORS FREE   "	;
370)   8DD9 45 20 20 20 		 DEFM " SECTORS FREE   "	;
371)   8DDD 0A 0D 00    		 DB 10,13,0   	;
372)   8DE0 DD E1       		 POP IX	;
374)   8DE2 DD 7E 08    		FILESYSTEM: LD A,(IX+8) ;1-FAT12,2-FAT16,3-FAT32	;1-FAT12,2-FAT16,3-FAT32
375)   8DE5 3D          		 DEC A	;
376)   8DE6 28 08       		 JR Z,PDI_NXT0	;
377)   8DE8 3D          		 DEC A	;
378)   8DE9 28 18       		 JR Z,PDI_NXT1	;
379)   8DEB 3D          		 DEC A	;
380)   8DEC 28 28       		 JR Z,PDI_NXT2	;
381)   8DEE 18 39       		 JR PDI_NXT3	;
383)   8DF0 CD 26 80    		PDI_NXT0: CALL OS_PRINTMSG	;
384)   8DF3 46 53 20 49 		 DEFM "FS IS FAT-12"	;
384)   8DF7 53 20 46 41 		 DEFM "FS IS FAT-12"	;
384)   8DFB 54 2D 31 32 		 DEFM "FS IS FAT-12"	;
385)   8DFF 0A 0D 00    		 DB 10,13,0	;
386)   8E02 C9          		 RET	;
387)   8E03 CD 26 80    		PDI_NXT1: CALL OS_PRINTMSG	;
388)   8E06 46 53 20 49 		 DEFM "FS IS FAT-16"	;
388)   8E0A 53 20 46 41 		 DEFM "FS IS FAT-16"	;
388)   8E0E 54 2D 31 36 		 DEFM "FS IS FAT-16"	;
389)   8E12 0A 0D 00    		 DB 10,13,0	;
390)   8E15 C9          		 RET	;
391)   8E16 CD 26 80    		PDI_NXT2: CALL OS_PRINTMSG	;
392)   8E19 46 53 20 49 		 DEFM "FS IS FAT-32"	;
392)   8E1D 53 20 46 41 		 DEFM "FS IS FAT-32"	;
392)   8E21 54 2D 33 32 		 DEFM "FS IS FAT-32"	;
393)   8E25 0A 0D 00    		 DB 10,13,0	;
394)   8E28 C9          		 RET	;
395)   8E29 CD 26 80    		PDI_NXT3: CALL OS_PRINTMSG	;
396)   8E2C 55 4E 4B 4E 		 DEFM "UNKNOWN FS"	;
396)   8E30 4F 57 4E 20 		 DEFM "UNKNOWN FS"	;
396)   8E34 46 53       		 DEFM "UNKNOWN FS"	;
397)   8E36 0A 0D 00    		 DB 10,13,0	;
398)   8E39 DD 7E 08    		 LD A,(IX+8)  ;TO BE PRINTED MAYBE	;TO BE PRINTED MAYBE
399)   8E3C C9          		 RET	;
404)   8E3D F5          		STRG_OPNFILE: PUSH AF	;
405)   8E3E 3E 2F       		 LD A, CMD_SETFILENAME	;
406)   8E40 CD BD 91    		     CALL CH376_COMMD	;
407)   8E43 21 F0 00    		 LD HL, STRGBUFF	;
408)   8E46 CD 72 92    		     CALL CH376_WRSTRING	;
409)   8E49 28 1E       		 JR Z,OF_WSOK	;
410)   8E4B F1          		 POP AF	;
411)   8E4C CD 26 80    		 CALL OS_PRINTMSG	;
412)   8E4F 45 52 52 4F 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E53 52 20 53 45 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E57 54 54 49 4E 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E5B 47 20 46 49 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E5F 4C 45 4E 41 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E63 4D 45       		 DEFM "ERROR SETTING FILENAME"	;
413)   8E65 0A 0D 00    		 DB 10,13,0  	;
414)   8E68 C9          		 RET	;
415)   8E69 F1          		OF_WSOK: POP AF	;
419)   8E6A B7          		 OR A  ;0 READ	;0 READ
420)   8E6B 28 0C       		 JR Z,OF_OPEN	;
421)   8E6D D6 01       		 SUB 1  ;1 WRITE	;1 WRITE
422)   8E6F 28 08       		 JR Z,OF_OPEN	;
423)   8E71 D6 01       		 SUB 1  ;2 READ/WRITE	;2 READ/WRITE
424)   8E73 28 04       		 JR Z,OF_OPEN	;
434)   8E75 3E 34       		 LD A, CMD_FILE_CREATE  	;
435)   8E77 18 02       		 JR OF_EXEC	;
440)   8E79 3E 32       		 LD A, CMD_FILE_OPEN	;
444)   8E7B CD BD 91    		 CALL CH376_COMMD	;
445)   8E7E CD 4E 91    		 CALL CH376_WTCMDEND	;
446)   8E81 C9          		 RET	;
448)   8E82 3E 36       		STRG_CLSFILE: LD A, CMD_FILE_CLOSE	;
449)   8E84 CD BD 91    		     CALL CH376_COMMD	;
450)   8E87 3E 01       		     LD A, 1                             ; 1 = update file size if necessary	; 1 = update file size if necessary
451)   8E89 CD C1 91    		     CALL CH376_DATAWR	;
452)   8E8C CD 4E 91    		     CALL CH376_WTCMDEND	;
453)   8E8F C9          		     RET	;
459)   8E90 D5          		STRG_BLKREAD: PUSH DE	;
460)   8E91 3E 3A       		 LD A, CMD_BYTE_READ	;
461)   8E93 CD BD 91    		     CALL CH376_COMMD	;
462)   8E96 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
463)   8E97 CD C1 91    		     CALL CH376_DATAWR	;
464)   8E9A 78          		     LD A, B	;
465)   8E9B CD C1 91    		     CALL CH376_DATAWR	;
466)   8E9E 2F          		 CPL	;
467)   8E9F 2F          		 CPL    	;
471)   8EA0 D1          		 POP DE	;
472)   8EA1 21 00 00    		 LD HL,0      ;BYTE RECEIVE COUNTER	;BYTE RECEIVE COUNTER
473)   8EA4 E5          		STBR_DOREST: PUSH HL	;
474)   8EA5 D5          		 PUSH DE	;
475)   8EA6 CD 4E 91    		 CALL CH376_WTCMDEND	;
476)   8EA9 D1          		 POP DE	;
477)   8EAA E1          		 POP HL	;
478)   8EAB 28 1C       		 JR Z, FR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
479)   8EAD FE 1D       		 CP USB_INT_DISK_READ                    	;
480)   8EAF 20 1C       		     JR NZ, FR_ERROR	;
482)   8EB1 3E 27       		 LD A,CMD_RDUSB_DATA0	;
483)   8EB3 CD BD 91    		 CALL CH376_COMMD 	;
484)   8EB6 CD D0 91    		 CALL CH376_DATARD  ;A= BYTES TO READ TO BUFFER	;A= BYTES TO READ TO BUFFER
485)   8EB9 47          		 LD B,A	;
498)   8EBA CD D0 91    		STBR_NXT1: CALL CH376_DATARD ;READ THE BYTES TO BUFFER	;READ THE BYTES TO BUFFER
499)   8EBD 12          		 LD (DE),A	;
500)   8EBE 13          		 INC DE	;
501)   8EBF 23          		 INC HL    ;TOTAL BYTES READ COUNTER	;TOTAL BYTES READ COUNTER
502)   8EC0 10 F8       		 DJNZ STBR_NXT1  	;
503)   8EC2 3E 3B       		 LD A, CMD_BYTE_RD_GO 	;
504)   8EC4 CD BD 91    		 CALL CH376_COMMD 	;
505)   8EC7 18 DB       		 JR STBR_DOREST	;
511)   8EC9 44          		 LD B,H	;
512)   8ECA 4D          		 LD C,L	;
513)   8ECB AF          		 XOR A	;
514)   8ECC C9          		 RET	;
515)   8ECD F5          		FR_ERROR: PUSH AF	;
516)   8ECE CD 13 9D    		 CALL PRINTNUM	;
517)   8ED1 CD 26 80    		 CALL OS_PRINTMSG	;
518)   8ED4 45 52 52 4F 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8ED8 52 20 52 45 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EDC 41 44 49 4E 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EE0 47 20 42 4C 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EE4 4F 43 4B 21 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EE8 21 21 20    		 DEFM "ERROR READING BLOCK!!! "	;
519)   8EEB 00          		 DB 0 	;
520)   8EEC F1          		 POP AF	;
521)   8EED 06 02       		 LD B,2	;
522)   8EEF 05          		 DEC B	;
523)   8EF0 C9          		 RET  	;
530)   8EF1 D5          		STRG_LOADFILE: PUSH DE	;
531)   8EF2 C5          		 PUSH BC	;
537)   8EF3 CD 48 9D    		 CALL COPYFNAME	;
538)   8EF6 AF          		 XOR A   ;READ ONLY 	;READ ONLY
539)   8EF7 CD 3D 8E    		 CALL STRG_OPNFILE  	;
540)   8EFA 20 4B       		 JR NZ, FOPENERR	;
545)   8EFC C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
546)   8EFD D1          		 POP DE  ;DEST BUFFER	;DEST BUFFER
547)   8EFE CD 90 8E    		 CALL STRG_BLKREAD	;
548)   8F01 28 20       		 JR Z, FREADOK	;
549)   8F03 CD 13 9D    		 CALL PRINTNUM	;
550)   8F06 CD 26 80    		 CALL OS_PRINTMSG	;
551)   8F09 20 45 52 52 		 DEFM " ERROR READING FILE"	;
551)   8F0D 4F 52 20 52 		 DEFM " ERROR READING FILE"	;
551)   8F11 45 41 44 49 		 DEFM " ERROR READING FILE"	;
551)   8F15 4E 47 20 46 		 DEFM " ERROR READING FILE"	;
551)   8F19 49 4C 45    		 DEFM " ERROR READING FILE"	;
552)   8F1C 0A 0D 00    		 DB 10,13,0	;
553)   8F1F D5          		 PUSH DE	;
554)   8F20 C5          		 PUSH BC	;
555)   8F21 18 24       		 JR FOPENERR	;
556)   8F23 C5          		FREADOK: PUSH BC	;
557)   8F24 CD 86 9B    		 CALL B2D16	;
558)   8F27 21 CB 00    		 LD HL,B2DBUF	;
559)   8F2A CD 1A 9C    		 CALL SKIPSPC	;
560)   8F2D CD 65 8B    		 CALL RS_TXT	;
561)   8F30 CD 26 80    		 CALL OS_PRINTMSG	;
562)   8F33 20 42 59 54 		 DEFM " BYTES READ"	;
562)   8F37 45 53 20 52 		 DEFM " BYTES READ"	;
562)   8F3B 45 41 44    		 DEFM " BYTES READ"	;
563)   8F3E 0A 0D 00    		 DB 10,13,0	;
564)   8F41 CD 82 8E    		 CALL STRG_CLSFILE	;
565)   8F44 C1          		 POP BC   ;BYTES LOADED TO BUFFER	;BYTES LOADED TO BUFFER
566)   8F45 AF          		 XOR A	;
567)   8F46 C9          		 RET	;
568)   8F47 C1          		FOPENERR: POP BC	;
569)   8F48 D1          		 POP DE	;
570)   8F49 CD 13 9D    		 CALL PRINTNUM	;
571)   8F4C CD 26 80    		 CALL OS_PRINTMSG	;
572)   8F4F 2D 2D 3E 45 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F53 52 52 4F 52 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F57 20 41 54 20 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F5B 4C 4F 41 44 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F5F 46 49 4C 45 		 DEFM "-->ERROR AT LOADFILE"	;
573)   8F63 0A 0D 00    		 DB 10,13,0	;
574)   8F66 21 F0 00    		 LD HL,STRGBUFF	;
575)   8F69 CD 65 8B    		 CALL RS_TXT	;
576)   8F6C CD C5 8B    		 CALL RS_NEWLINE	;
577)   8F6F 37          		 SCF	;
578)   8F70 C9          		 RET	;
586)   8F71 D5          		STRG_READBUFR: PUSH DE	;
587)   8F72 C5          		 PUSH BC	;
593)   8F73 CD 48 9D    		 CALL COPYFNAME	;
594)   8F76 AF          		 XOR A   ;READ ONLY 	;READ ONLY
595)   8F77 CD 3D 8E    		 CALL STRG_OPNFILE  	;
596)   8F7A 20 32       		 JR NZ, RB_FOPENERR	;
601)   8F7C C1          		 POP BC  ;BYTE OFFSET	;BYTE OFFSET
602)   8F7D CD 2F 8D    		 CALL STRG_SETPOS16	;
603)   8F80 01 F4 01    		 LD BC, 500 ;READ 500 BYTES  	;READ 500 BYTES
604)   8F83 D1          		 POP DE  ;DEST BUFFER	;DEST BUFFER
605)   8F84 CD 90 8E    		 CALL STRG_BLKREAD	;
606)   8F87 28 1E       		 JR Z, RB_FREADOK	;
607)   8F89 CD 13 9D    		 CALL PRINTNUM	;
608)   8F8C CD 26 80    		 CALL OS_PRINTMSG	;
609)   8F8F 20 45 52 52 		 DEFM " ERROR READING FILE"	;
609)   8F93 4F 52 20 52 		 DEFM " ERROR READING FILE"	;
609)   8F97 45 41 44 49 		 DEFM " ERROR READING FILE"	;
609)   8F9B 4E 47 20 46 		 DEFM " ERROR READING FILE"	;
609)   8F9F 49 4C 45    		 DEFM " ERROR READING FILE"	;
610)   8FA2 0A 0D 00    		 DB 10,13,0	;
611)   8FA5 18 09       		 JR RB_FOPENERR2	;
612)   8FA7 C5          		RB_FREADOK: PUSH BC	;
620)   8FA8 CD 82 8E    		 CALL STRG_CLSFILE	;
621)   8FAB C1          		 POP BC   ;BYTES LOADED TO BUFFER	;BYTES LOADED TO BUFFER
622)   8FAC AF          		 XOR A	;
623)   8FAD C9          		 RET	;
624)   8FAE C1          		RB_FOPENERR: POP BC	;
625)   8FAF D1          		 POP DE	;
626)   8FB0 CD 13 9D    		RB_FOPENERR2: CALL PRINTNUM	;
627)   8FB3 CD 26 80    		 CALL OS_PRINTMSG	;
628)   8FB6 2D 2D 3E 45 		 DEFM "-->ERROR OPENING FILE"	;
628)   8FBA 52 52 4F 52 		 DEFM "-->ERROR OPENING FILE"	;
628)   8FBE 20 4F 50 45 		 DEFM "-->ERROR OPENING FILE"	;
628)   8FC2 4E 49 4E 47 		 DEFM "-->ERROR OPENING FILE"	;
628)   8FC6 20 46 49 4C 		 DEFM "-->ERROR OPENING FILE"	;
628)   8FCA 45          		 DEFM "-->ERROR OPENING FILE"	;
629)   8FCB 0A 0D 00    		 DB 10,13,0	;
630)   8FCE 21 F0 00    		 LD HL,STRGBUFF	;
631)   8FD1 CD 65 8B    		 CALL RS_TXT	;
632)   8FD4 CD C5 8B    		 CALL RS_NEWLINE	;
633)   8FD7 37          		 SCF	;
634)   8FD8 C9          		 RET	;
639)   8FD9 D5          		STRG_BLKWRITE: PUSH DE	;
640)   8FDA 3E 3C       		 LD A, CMD_BYTE_WRITE	;
641)   8FDC CD BD 91    		     CALL CH376_COMMD	;
642)   8FDF 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
643)   8FE0 CD C1 91    		     CALL CH376_DATAWR	;
644)   8FE3 78          		     LD A, B	;
645)   8FE4 CD C1 91    		     CALL CH376_DATAWR    	;
649)   8FE7 E1          		 POP HL	;
650)   8FE8 CD 4E 91    		STBW_DOREST: CALL CH376_WTCMDEND 	;
651)   8FEB 28 1B       		 JR Z, WFR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
652)   8FED FE 1E       		 CP USB_INT_DISK_WRITE                    	;
653)   8FEF 20 19       		     JR NZ, WFR_ERROR	;
654)   8FF1 3E 2D       		 LD A,CMD_WR_REQ_DATA	;
655)   8FF3 CD BD 91    		 CALL CH376_COMMD 	;
657)   8FF6 CD D0 91    		 CALL CH376_DATARD ;READ BYTE COUNT UP TO 255 BYTES	;READ BYTE COUNT UP TO 255 BYTES
658)   8FF9 47          		 LD B,A   	;
660)   8FFA 7E          		STBW_NXT1: LD A,(HL)	;
661)   8FFB CD C1 91    		 CALL CH376_DATAWR	;
662)   8FFE 23          		 INC HL	;
663)   8FFF 10 F9       		 DJNZ STBW_NXT1	;
664)   9001 3E 3D       		 LD A, CMD_BYTE_WR_GO 	;
665)   9003 CD BD 91    		 CALL CH376_COMMD 	;
666)   9006 18 E0       		 JR STBW_DOREST	;
672)   9008 B7          		 OR A	;
673)   9009 C9          		 RET	;
674)   900A F5          		WFR_ERROR: PUSH AF	;
675)   900B CD 13 9D    		 CALL PRINTNUM	;
676)   900E CD 26 80    		 CALL OS_PRINTMSG	;
677)   9011 45 52 52 4F 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   9015 52 20 57 52 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   9019 49 54 49 4E 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   901D 47 20 42 4C 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   9021 4F 43 4B 21 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   9025 21 21 20    		 DEFM "ERROR WRITING BLOCK!!! "	;
678)   9028 0D 0A 00    		 DB 13,10,0 	;
679)   902B F1          		 POP AF	;
680)   902C 06 02       		 LD B,2	;
681)   902E 05          		 DEC B	;
682)   902F C9          		 RET  	;
690)   9030 D5          		STRG_SAVEFILE: PUSH DE	;
691)   9031 C5          		 PUSH BC	;
692)   9032 E5          		 PUSH HL  	;
693)   9033 CD 26 80    		 CALL OS_PRINTMSG	;
694)   9036 0A 0D       		 DB 10,13	;
695)   9038 53 41 56 45 		 DEFM "SAVE FILE"	;
695)   903C 20 46 49 4C 		 DEFM "SAVE FILE"	;
695)   9040 45          		 DEFM "SAVE FILE"	;
696)   9041 0A 0D 0A 0D 		 DB 10,13,10,13,0	;
696)   9045 00          		 DB 10,13,10,13,0	;
697)   9046 E1          		 POP HL	;
698)   9047 CD 48 9D    		 CALL COPYFNAME	;
699)   904A 3E 04       		 LD A,4   ;CREATE THE FILE	;CREATE THE FILE
700)   904C CD 3D 8E    		 CALL STRG_OPNFILE  	;
701)   904F 20 4E       		 JR NZ, FSAVEERR	;
702)   9051 CD 26 80    		 CALL OS_PRINTMSG	;
703)   9054 0A 0D       		 DB 10,13	;
704)   9056 46 49 4C 45 		 DEFM "FILE CREATED OK"	;
704)   905A 20 43 52 45 		 DEFM "FILE CREATED OK"	;
704)   905E 41 54 45 44 		 DEFM "FILE CREATED OK"	;
704)   9062 20 4F 4B    		 DEFM "FILE CREATED OK"	;
705)   9065 0A 0D 00    		 DB 10,13,0	;
706)   9068 C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
707)   9069 D1          		 POP DE  ;SOURCE BUFFER	;SOURCE BUFFER
708)   906A CD D9 8F    		 CALL STRG_BLKWRITE	;
709)   906D 28 19       		 JR Z, FWRITEOK	;
711)   906F CD 26 80    		 CALL OS_PRINTMSG	;
712)   9072 20 45 52 52 		 DEFM " ERROR WRITING FILE"	;
712)   9076 4F 52 20 57 		 DEFM " ERROR WRITING FILE"	;
712)   907A 52 49 54 49 		 DEFM " ERROR WRITING FILE"	;
712)   907E 4E 47 20 46 		 DEFM " ERROR WRITING FILE"	;
712)   9082 49 4C 45    		 DEFM " ERROR WRITING FILE"	;
713)   9085 0A 0D 00    		 DB 10,13,0	;
714)   9088 CD 26 80    		FWRITEOK: CALL OS_PRINTMSG	;
715)   908B 42 59 54 45 		 DEFM "BYTE WRITTEN"	;
715)   908F 20 57 52 49 		 DEFM "BYTE WRITTEN"	;
715)   9093 54 54 45 4E 		 DEFM "BYTE WRITTEN"	;
716)   9097 0A 0D 00    		 DB 10,13,0	;
717)   909A CD 82 8E    		 CALL STRG_CLSFILE	;
718)   909D AF          		 XOR A	;
719)   909E C9          		 RET	;
720)   909F C1          		FSAVEERR: POP BC	;
721)   90A0 D1          		 POP DE	;
722)   90A1 CD 13 9D    		 CALL PRINTNUM	;
723)   90A4 CD 26 80    		 CALL OS_PRINTMSG	;
724)   90A7 2D 2D 3E 45 		 DEFM "-->ERROR CREATING FILE"	;
724)   90AB 52 52 4F 52 		 DEFM "-->ERROR CREATING FILE"	;
724)   90AF 20 43 52 45 		 DEFM "-->ERROR CREATING FILE"	;
724)   90B3 41 54 49 4E 		 DEFM "-->ERROR CREATING FILE"	;
724)   90B7 47 20 46 49 		 DEFM "-->ERROR CREATING FILE"	;
724)   90BB 4C 45       		 DEFM "-->ERROR CREATING FILE"	;
725)   90BD 0A 0D 00    		 DB 10,13,0	;
726)   90C0 21 F0 00    		 LD HL,STRGBUFF	;
727)   90C3 CD 65 8B    		 CALL RS_TXT	;
728)   90C6 CD C5 8B    		 CALL RS_NEWLINE	;
729)   90C9 37          		 SCF	;
730)   90CA C9          		 RET	;
740)   90CB C5          		STRG_WRITEBUFR: PUSH BC	;
741)   90CC D5          		 PUSH DE	;
742)   90CD CD 48 9D    		 CALL COPYFNAME   ;HL NOT NEEDED AFTER THIS	;HL NOT NEEDED AFTER THIS
743)   90D0 3E 01       		 LD A,1    ;OPEN THE FILE FOR W	;OPEN THE FILE FOR W
744)   90D2 CD 3D 8E    		 CALL STRG_OPNFILE  	;
745)   90D5 20 0B       		 JR NZ,SWB_CREATE  ;ON ERROR TRY TO CREATE THE FILE	;ON ERROR TRY TO CREATE THE FILE
747)   90D7 01 FF FF    		 LD BC,$FFFF	;
748)   90DA 11 FF FF    		 LD DE,$FFFF 	;
749)   90DD CD 38 8D    		 CALL STRG_SETPOS  ;GOTO EOF	;GOTO EOF
750)   90E0 18 09       		 JR SWB_WRITEBUF	;
752)   90E2 3E 04       		 LD A,4	;
753)   90E4 CD 3D 8E    		 CALL STRG_OPNFILE  	;
754)   90E7 3E 97       		 LD A,151   ;ERROR NUMBER	;ERROR NUMBER
755)   90E9 20 0D       		 JR NZ, SWB_ERR	;
756)   90EB D1          		SWB_WRITEBUF: POP DE	;
757)   90EC C1          		 POP BC    ;THE BYTE COUNT  	;THE BYTE COUNT
758)   90ED CD D9 8F    		 CALL STRG_BLKWRITE  	;
759)   90F0 F5          		 PUSH AF	;
760)   90F1 CD 82 8E    		 CALL STRG_CLSFILE  ;ALWAYS CLOSE FILE	;ALWAYS CLOSE FILE
761)   90F4 F1          		 POP AF	;
762)   90F5 C0          		 RET NZ    ;NZ IF ERROR	;NZ IF ERROR
763)   90F6 AF          		 XOR A	;
764)   90F7 C9          		 RET	;
765)   90F8 D1          		SWB_ERR: POP DE	;
766)   90F9 C1          		 POP BC  	;
767)   90FA 37          		 SCF	;
768)   90FB C9          		 RET  	;
  3)   90FC 	            		INT376CMD EQU DEV376+1	;
  4)   90FC 	            		INT376DAT EQU DEV376	;
 90)   90FC CD D0 91    		CH376_GETDATA: CALL CH376_DATARD	;
 91)   90FF FE 00       		 CP 0	;
 92)   9101 C8          		 RET Z   ;NO DATA AVAILABLE	;NO DATA AVAILABLE
 99)   9102 F5          		               PUSH AF	;
100)   9103 11 8B 00    		 LD DE,USBBUF	;
101)   9106 47          		 LD B,A	;
102)   9107 CD D0 91    		UDC_NXT1: CALL CH376_DATARD	;
104)   910A 12          		 LD (DE),A	;
105)   910B 13          		 INC DE	;
109)   910C 10 F9       		 DJNZ UDC_NXT1 	;
110)   910E F1          		               POP AF	;
111)   910F C9          		 RET	;
114)   9110 F5          		DISKERROR: PUSH AF	;
115)   9111 CD 6F 8B    		 CALL RS_MESG	;
116)   9114 46 41 54 41 		 DEFM "FATAL ERROR:" 	;
116)   9118 4C 20 45 52 		 DEFM "FATAL ERROR:" 	;
116)   911C 52 4F 52 3A 		 DEFM "FATAL ERROR:" 	;
117)   9120 00          		 DB 0  	;
118)   9121 F1          		 POP AF	;
119)   9122 CD 13 9D    		 CALL PRINTNUM	;
120)   9125 21 31 91    		 LD HL,ERR_PART	;
121)   9128 FE 92       		 CP ERR_TYPE_ERROR	;
122)   912A 28 01       		 JR Z,PRNMES	;
123)   912C C9          		 RET	;
124)   912D CD 65 8B    		PRNMES: CALL RS_TXT 	;
125)   9130 C9          		 RET	;
127)   9131 50 41 52 54 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9135 49 54 49 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9139 4E 2E 4E 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   913D 54 2E 53 55 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9141 50 50 4F 52 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9145 54 45 44 21 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9149 21 21       		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
128)   914B 0A 0D 00    		 DB 10,13,0	;
138)   914E E5          		CH376_WTCMDEND: PUSH HL	;
139)   914F CD 5C 91    		 CALL CH376_WAITINT	;
140)   9152 E1          		 POP HL	;
141)   9153 C0          		               RET NZ	;
142)   9154 D8          		 RET C	;
143)   9155 AF          		 XOR A	;
144)   9156 CD 7B 91    		 CALL CH376_GETSTAT	;
145)   9159 FE 14       		 CP USB_INT_SUCCESS  	;
146)   915B C9          		 RET  ;NZ FLAG MEANS ERROR USUALLY	;NZ FLAG MEANS ERROR USUALLY
152)   915C AF          		CH376_WAITINT: XOR A	;
153)   915D 01 32 00    		 LD BC,50	;
154)   9160 CD CD 91    		C3AGN2: CALL CH376_INSTAT	;
155)   9163 CB 7F       		 BIT 7,A	;
156)   9165 C8          		 RET Z	;
157)   9166 F5          		 PUSH AF	;
158)   9167 C5          		 PUSH BC	;
159)   9168 06 14       		 LD B,20	;
160)   916A CD AE 9A    		 CALL DELAYMICRO	;
161)   916D C1          		 POP BC	;
162)   916E F1          		 POP AF	;
163)   916F 0B          		 DEC BC	;
164)   9170 5F          		 LD E,A	;
165)   9171 78          		 LD A,B	;
166)   9172 B1          		 OR C	;
167)   9173 7B          		 LD A,E	;
168)   9174 20 EA       		 JR NZ, C3AGN2  	;
173)   9176 37          		 SCF ;TIMEOUT       	;TIMEOUT
174)   9177 06 02       		 LD B,2	;
175)   9179 05          		 DEC B  ;NZ FLAG	;NZ FLAG
176)   917A C9          		 RET	;
178)   917B 3E 22       		CH376_GETSTAT: LD A,CMD_GET_STATUS	;
179)   917D CD BD 91    		 CALL CH376_COMMD	;
180)   9180 CD D0 91    		 CALL CH376_DATARD	;
181)   9183 C9          		 RET	;
189)   9184 01 C4 09    		CH376_CHOK: LD BC,2500	;
190)   9187 CD CD 91    		C3AGN: CALL CH376_INSTAT	;
191)   918A CB 67       		 BIT 4,A   ;CHECK BUSY	;CHECK BUSY
192)   918C C8          		 RET Z   	;
193)   918D C5          		 PUSH BC	;
194)   918E F5          		 PUSH AF	;
195)   918F 06 32       		 LD B,50	;
196)   9191 CD AE 9A    		 CALL DELAYMICRO	;
197)   9194 F1          		 POP AF	;
198)   9195 C1          		 POP BC	;
199)   9196 0B          		 DEC BC	;
200)   9197 5F          		 LD E,A	;
201)   9198 78          		 LD A,B	;
202)   9199 B1          		 OR C	;
203)   919A 7B          		 LD A,E	;
204)   919B 20 EA       		 JR NZ,C3AGN	;
205)   919D F5          		 PUSH AF  	;
206)   919E CD 13 9D    		 CALL PRINTNUM  	;
207)   91A1 F1          		 POP AF	;
208)   91A2 CD 6F 8B    		 CALL RS_MESG	;
209)   91A5 2A 2A 2A 43 		 DEFM "***CMD TIMEOUT***"	;
209)   91A9 4D 44 20 54 		 DEFM "***CMD TIMEOUT***"	;
209)   91AD 49 4D 45 4F 		 DEFM "***CMD TIMEOUT***"	;
209)   91B1 55 54 2A 2A 		 DEFM "***CMD TIMEOUT***"	;
209)   91B5 2A          		 DEFM "***CMD TIMEOUT***"	;
210)   91B6 0A 0D 00    		 DB 10,13,0       	;
211)   91B9 06 02       		 LD B,2	;
212)   91BB 05          		 DEC B  ;NZ FLAG	;NZ FLAG
213)   91BC C9          		 RET	;
219)   91BD D3 31       		CH376_COMMD: OUT (INT376CMD),A	;
220)   91BF 18 02       		 JR C3D_CONT	;
223)   91C1 D3 30       		CH376_DATAWR: OUT (INT376DAT),A 	;
224)   91C3 C5          		C3D_CONT: PUSH BC	;
225)   91C4 D5          		 PUSH DE	;
226)   91C5 E5          		 PUSH HL	;
227)   91C6 CD 84 91    		 CALL CH376_CHOK  ;CHECK NOT BUSY	;CHECK NOT BUSY
228)   91C9 E1          		 POP HL	;
229)   91CA D1          		 POP DE	;
230)   91CB C1          		 POP BC	;
231)   91CC C9          		 RET	;
233)   91CD DB 31       		CH376_INSTAT: IN A,(INT376CMD)	;
235)   91CF C9          		 RET	;
238)   91D0 DB 30       		CH376_DATARD: IN A,(INT376DAT)	;
243)   91D2 C9          		 RET	;
246)   91D3 3E 01       		CH376_VERSION: LD A,CMD_GET_IC_VER 	;
247)   91D5 CD BD 91    		 CALL CH376_COMMD	;
248)   91D8 CD D0 91    		 CALL CH376_DATARD	;
249)   91DB E6 0F       		 AND 00001111B	;
250)   91DD C9          		               RET	;
252)   91DE 3E 05       		CH376_INIT:    LD A,CMD_RESET_ALL	;
253)   91E0 CD BD 91    		 CALL CH376_COMMD  	;
254)   91E3 3E 06       		 LD A,CMD_CHECK_EXIST 	;
255)   91E5 CD BD 91    		 CALL CH376_COMMD	;
256)   91E8 3E 57       		 LD A,87	;
257)   91EA CD C1 91    		 CALL CH376_DATAWR	;
258)   91ED CD D0 91    		 CALL CH376_DATARD	;
259)   91F0 FE A8       		 CP 255 - 87 	;
260)   91F2 C9          		               RET               	;
264)   91F3 F5          		CH376_SETUSB: PUSH AF	;
265)   91F4 3E 15       		               LD A,CMD_SETUSB_MODE	;
266)   91F6 CD BD 91    		 CALL CH376_COMMD	;
267)   91F9 F1          		               POP AF	;
268)   91FA CD C1 91    		 CALL CH376_DATAWR	;
270)   91FD 06 14       		 LD B,20	;
271)   91FF CD AE 9A    		 CALL DELAYMICRO     ;WAIT A BIT	;WAIT A BIT
276)   9202 CD 7B 91    		 CALL CH376_GETSTAT	;
277)   9205 FE 15       		 CP USB_INT_CONNECT	;
278)   9207 C8          		 RET Z	;
280)   9208 F5          		 PUSH AF	;
281)   9209 CD 6F 8B    		 CALL CH376_ERROR	;
282)   920C 45 52 52 3A 		 DEFM "ERR: SETUSBMODE"	;
282)   9210 20 53 45 54 		 DEFM "ERR: SETUSBMODE"	;
282)   9214 55 53 42 4D 		 DEFM "ERR: SETUSBMODE"	;
282)   9218 4F 44 45    		 DEFM "ERR: SETUSBMODE"	;
283)   921B 0A 0D 00    		 DB 10,13,0	;
284)   921E F1          		 POP AF	;
285)   921F CD 13 9D    		 CALL PRINTNUM	;
286)   9222 C9          		               RET	;
291)   9223 3E 30       		CH376_CONNECT: LD A, CMD_DISK_CONNECT	;
292)   9225 CD BD 91    		     CALL CH376_COMMD	;
293)   9228 CD 4E 91    		 CALL CH376_WTCMDEND	;
295)   922B D8          		 RET C ;TIMEOUT	;TIMEOUT
296)   922C C8          		 RET Z ;CONNECT OK	;CONNECT OK
301)   922D C9          		 RET ;NZ HERE	;NZ HERE
311)   922E 3E 31       		CH376_MOUNT:   LD A,CMD_DISK_MOUNT  	;
312)   9230 CD BD 91    		 CALL CH376_COMMD	;
313)   9233 CD 4E 91    		 CALL CH376_WTCMDEND  	;
314)   9236 C9          		 RET	;
319)   9237 06 0A       		CH376_MOUNTDEV:   LD B,10  ;TRY TO MOUNT 10 TIMES	;TRY TO MOUNT 10 TIMES
320)   9239 C5          		CM_AGN1: PUSH BC	;
321)   923A CD F3 91    		 CALL CH376_SETUSB	;
322)   923D 20 10       		 JR NZ,CM_ERROR	;
323)   923F CD 23 92    		 CALL CH376_CONNECT	;
324)   9242 20 0B       		 JR NZ,CM_ERROR	;
325)   9244 3E 31       		        LD A,CMD_DISK_MOUNT  	;
326)   9246 CD BD 91    		 CALL CH376_COMMD	;
327)   9249 CD 4E 91    		 CALL CH376_WTCMDEND	;
328)   924C C1          		 POP BC	;
329)   924D C8          		 RET Z	;
330)   924E C5          		 PUSH BC	;
331)   924F 06 64       		CM_ERROR: LD B,100	;
332)   9251 CD C3 9A    		 CALL DELAYMILI     ;WAIT A BIT	;WAIT A BIT
333)   9254 C1          		 POP BC	;
334)   9255 10 E2       		 DJNZ CM_AGN1  	;
335)   9257 06 02       		 LD B,2	;
336)   9259 05          		 DEC B  ;NZ  	;NZ
337)   925A F5          		 PUSH AF	;
338)   925B CD 6F 8B    		 CALL CH376_ERROR	;
339)   925E 45 52 52 3A 		 DEFM "ERR: MOUNT DISK"	;
339)   9262 20 4D 4F 55 		 DEFM "ERR: MOUNT DISK"	;
339)   9266 4E 54 20 44 		 DEFM "ERR: MOUNT DISK"	;
339)   926A 49 53 4B    		 DEFM "ERR: MOUNT DISK"	;
340)   926D 0A 0D 00    		 DB 10,13,0	;
341)   9270 F1          		     POP AF	;
342)   9271 C9          		               RET	;
345)   9272 7E          		CH376_WRSTRING: LD A,(HL)	;
351)   9273 CD C1 91    		 CALL CH376_DATAWR	;
352)   9276 C0          		 RET NZ	;
353)   9277 7E          		 LD A,(HL)	;
354)   9278 B7          		 OR A	;
355)   9279 C8          		 RET Z	;
356)   927A 23          		 INC HL	;
357)   927B 18 F5       		 JR CH376_WRSTRING	;
  7)   927D 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   927D 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   927D 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   927D 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   927D 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   927D C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   927E 01 00 20    		 LD BC, $2000	;
 58)   9281 DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   9283 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   9285 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   9287 0B          		 DEC BC	;
 62)   9288 78          		 LD A, B	;
 63)   9289 B1          		 OR C	;
 64)   928A 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   928C C1          		I2CRWT_OK: POP BC	;
 66)   928D DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   928F C9          		 RET	;
 69)   9290 DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   9292 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   9294 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   9296 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   9297 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   9299 C9          		 RET	;
 77)   929A 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   929C D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   929E 3E E0       		 LD A, $E0	;
 80)   92A0 D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   92A2 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   92A4 D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   92A6 06 FA       		 LD B, 250	;
 85)   92A8 CD AE 9A    		 CALL DELAYMICRO	;
 86)   92AB 06 FA       		 LD B, 250	;
 87)   92AD CD AE 9A    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   92B0 3E 06       		 LD A, I2CMODE	;
 93)   92B2 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   92B4 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   92B6 D3 72       		 OUT (DI2C_INDIR), A	;
 96)   92B8 3E 02       		 LD A, I2CSCLL	;
 97)   92BA D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   92BC 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   92BE D3 72       		 OUT (DI2C_INDIR), A	;
100)   92C0 3E 03       		 LD A, I2CSCLH	;
101)   92C2 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   92C4 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   92C6 D3 72       		 OUT (DI2C_INDIR), A	;
105)   92C8 C9          		 RET	;
112)   92C9 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   92CB D3 73       		 OUT (DI2C_CON), A	;
114)   92CD CD 7D 92    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   92D0 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   92D1 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   92D3 28 21       		 JR Z, WRB_S1	;
118)   92D5 FE 10       		 CP MASTER_RESTART_TXed	;
119)   92D7 28 1D       		 JR Z, WRB_S1	;
120)   92D9 FE 28       		 CP MASTER_DATA_W_ACK	;
121)   92DB 28 26       		 JR Z, WRB_S2	;
122)   92DD FE 18       		 CP MASTER_SLA_W_ACK	;
123)   92DF 28 23       		 JR Z, WRB_S3	;
124)   92E1 FE 20       		 CP MASTER_SLA_W_NAK	;
125)   92E3 28 2D       		 JR Z, WRB_EXIT	;
126)   92E5 FE 30       		 CP MASTER_DATA_W_NAK	;
127)   92E7 28 29       		 JR Z, WRB_EXIT	;
128)   92E9 FE 38       		 CP MASTER_ARB_LOST	;
129)   92EB C8          		 RET Z	;
130)   92EC FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   92EE C8          		 RET Z	;
132)   92EF FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   92F1 C8          		 RET Z	;
134)   92F2 FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   92F4 C8          		 RET Z	;
136)   92F5 C9          		 RET	;
138)   92F6 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   92F7 CB 27       		 SLA A	;
140)   92F9 E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   92FB D3 71       		 OUT (DI2C_DAT), A	;
142)   92FD 3E 40       		 LD A, $40	;
143)   92FF D3 73       		 OUT (DI2C_CON), A	;
144)   9301 18 CA       		 JR WRB_LP1	;
145)   9303 0B          		WRB_S2: DEC BC	;
146)   9304 78          		WRB_S3: LD A, B	;
147)   9305 B1          		 OR C	;
148)   9306 28 0A       		 JR Z, WRB_EXIT	;
149)   9308 7E          		 LD A, (HL)	;
150)   9309 23          		 INC HL	;
151)   930A D3 71       		 OUT (DI2C_DAT), A	;
152)   930C 3E 40       		 LD A, $40	;
153)   930E D3 73       		 OUT (DI2C_CON), A	;
154)   9310 18 BB       		 JR WRB_LP1	;
156)   9312 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   9314 D3 73       		 OUT (DI2C_CON), A	;
158)   9316 78          		 LD A, B	;
159)   9317 B1          		 OR C	;
160)   9318 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   9319 78          		I2C_RD_BYTE: LD A, B	;
167)   931A B1          		 OR C	;
168)   931B C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   931C 3E 60       		 LD A, $60	;
170)   931E D3 73       		 OUT (DI2C_CON), A	;
171)   9320 CD 7D 92    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   9323 1E 00       		 LD E, 0	;
173)   9325 FE 08       		 CP MASTER_START_TXed	;
174)   9327 28 1F       		 JR Z, RDB_S1	;
176)   9329 28 1D       		 JR Z, RDB_S1	;
177)   932B FE 58       		 CP MASTER_DATA_R_NAK	;
178)   932D 28 26       		 JR Z, RDB_S2	;
179)   932F FE 50       		 CP MASTER_DATA_R_ACK	;
180)   9331 28 24       		 JR Z, RDB_S3	;
181)   9333 FE 40       		 CP MASTER_SLA_R_ACK	;
182)   9335 28 25       		 JR Z, RDB_S4	;
183)   9337 FE 48       		 CP MASTER_SLA_R_NAK	;
184)   9339 28 38       		 JR Z, RDB_EXIT	;
185)   933B FE 38       		 CP MASTER_ARB_LOST	;
186)   933D C8          		 RET Z	;
187)   933E FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   9340 C8          		 RET Z	;
189)   9341 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   9343 C8          		 RET Z	;
191)   9344 FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   9346 C8          		 RET Z	;
193)   9347 C9          		 RET	;
196)   9348 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   9349 CB 27       		 SLA A	;
198)   934B F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   934D D3 71       		 OUT (DI2C_DAT), A	;
200)   934F 3E 40       		 LD A, $40	;
201)   9351 D3 73       		 OUT (DI2C_CON), A	;
202)   9353 18 CB       		 JR RDB_LP1	;
203)   9355 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   9357 DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   9359 77          		 LD (HL), A	;
206)   935A 23          		 INC HL	;
207)   935B 0B          		 DEC BC	;
208)   935C 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   935D B1          		 OR C	;
210)   935E 28 13       		 JR Z, RDB_EXIT	;
211)   9360 7B          		 LD A, E	;
212)   9361 FE 01       		 CP 1	;
213)   9363 28 0E       		 JR Z, RDB_EXIT	;
214)   9365 78          		 LD A, B	;
215)   9366 81          		 ADD C	;
216)   9367 FE 01       		 CP 1	;
217)   9369 3E 40       		 LD A, $40	;
218)   936B 28 02       		 JR Z, RDB_NXT1	;
219)   936D 3E C0       		 LD A, $C0	;
220)   936F D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   9371 18 AD       		 JR RDB_LP1	;
223)   9373 3E 50       		RDB_EXIT: LD A, $50	;
224)   9375 D3 73       		 OUT (DI2C_CON), A	;
225)   9377 78          		 LD A, B	;
226)   9378 B1          		 OR C	;
227)   9379 C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
112)   937A 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   937C 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   937D 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   937F CB E2       		 SET D4, D	;
117)   9381 0F          		LWNXT1: RRCA	;
118)   9382 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   9384 CB EA       		 SET D5, D	;
120)   9386 0F          		LWNXT2: RRCA	;
121)   9387 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   9389 CB F2       		 SET D6, D	;
123)   938B 0F          		LWNXT3: RRCA	;
124)   938C 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   938E CB FA       		 SET D7, D	;
126)   9390 7B          		LWNXT4: LD A, E	;
127)   9391 0F          		 RRCA	;
128)   9392 30 02       		 JR NC, LWNXT5	;
129)   9394 CB C2       		 SET RS, D	;
131)   9396 3A 7F 00    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   9399 B2          		 OR D	;
133)   939A 57          		 LD D,A	;
135)   939B CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   939D 7A          		 LD A, D	;
137)   939E CD A8 93    		 CALL LCD16_I2CSEND	;
138)   93A1 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   93A3 7A          		 LD A, D	;
140)   93A4 CD A8 93    		 CALL LCD16_I2CSEND	;
141)   93A7 C9          		 RET	;
145)   93A8 D5          		LCD16_I2CSEND: PUSH DE	;
146)   93A9 E5          		 PUSH HL	;
147)   93AA 21 CB 00    		 LD HL, BUFFER	;
148)   93AD 77          		 LD (HL), A	;
149)   93AE 16 27       		 LD D, LCDADDR	;
150)   93B0 01 01 00    		 LD BC, 1	;
151)   93B3 CD C9 92    		 CALL I2C_WRITE	;
152)   93B6 E1          		 POP HL	;
153)   93B7 D1          		 POP DE	;
154)   93B8 C9          		 RET	;
157)   93B9 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   93BB 18 02       		 JR LCD16_SEND	;
161)   93BD 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   93BF 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   93C0 7B          		 LD A, E	;
166)   93C1 0F          		 RRCA	;
167)   93C2 38 07       		 JR C, ISCMDDATA	;
168)   93C4 0F          		 RRCA	;
169)   93C5 30 04       		 JR NC, ISCMDDATA	;
171)   93C7 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   93C9 18 0E       		 JR LCSD_4BIT	;
173)   93CB 7A          		ISCMDDATA: LD A, D	;
174)   93CC CB 3F       		 SRL A	;
175)   93CE CB 3F       		 SRL A	;
176)   93D0 CB 3F       		 SRL A	;
177)   93D2 CB 3F       		 SRL A	;
178)   93D4 D5          		 PUSH DE	;
179)   93D5 CD 7A 93    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   93D8 D1          		 POP DE	;
181)   93D9 7A          		LCSD_4BIT: LD A, D	;
182)   93DA E6 0F       		 AND $0F	;
183)   93DC CD 7A 93    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   93DF C9          		 RET	;
186)   93E0 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   93E2 1E 02       		 LD E, FOUR_BITS	;
188)   93E4 CD BF 93    		 CALL LCD16_SEND	;
189)   93E7 01 00 30    		 LD BC, $3000	;
190)   93EA CD 72 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   93ED 3E 03       		 LD A, 3	;
192)   93EF 1E 02       		 LD E, FOUR_BITS	;
193)   93F1 CD BF 93    		 CALL LCD16_SEND	;
194)   93F4 01 00 30    		 LD BC, $3000	;
195)   93F7 CD 72 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   93FA 3E 03       		 LD A, 3	;
197)   93FC 1E 02       		 LD E, FOUR_BITS	;
198)   93FE CD BF 93    		 CALL LCD16_SEND	;
199)   9401 01 00 30    		 LD BC, $3000	;
200)   9404 CD 72 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   9407 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   9409 1E 02       		 LD E, FOUR_BITS	;
203)   940B CD BF 93    		 CALL LCD16_SEND	;
204)   940E 01 00 30    		 LD BC, $3000	;
205)   9411 CD 72 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   9414 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   9416 CD B9 93    		 CALL LCD16_COMMD	;
209)   9419 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   941B 32 7D 00    		 LD (LCD_DSPCTRL), A	;
211)   941E CD 46 94    		 CALL LCD16_DISP	;
212)   9421 CD 61 94    		 CALL LCD16_CLR	;
213)   9424 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   9426 32 7E 00    		 LD (LCD_DSPMODE), A	;
215)   9429 F6 04       		 OR LCD_ENTRYMODESET	;
216)   942B CD B9 93    		 CALL LCD16_COMMD	;
217)   942E 01 00 30    		 LD BC, $3000	;
218)   9431 CD 72 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   9434 CD E4 94    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   9437 C9          		 RET	;
222)   9438 3A 7D 00    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   943B CB 97       		 RES LCD_DISPLAYON, A	;
224)   943D 32 7D 00    		 LD (LCD_DSPCTRL), A	;
225)   9440 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   9442 CD B9 93    		 CALL LCD16_COMMD	;
227)   9445 C9          		 RET	;
228)   9446 3A 7D 00    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   9449 CB D7       		 SET LCD_DISPLAYON, A	;
230)   944B 32 7D 00    		 LD (LCD_DSPCTRL), A	;
231)   944E F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   9450 CD B9 93    		 CALL LCD16_COMMD	;
233)   9453 C9          		 RET	;
235)   9454 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   9457 C5          		LCLR_AGN1: PUSH BC	;
237)   9458 CD AE 9A    		 CALL DELAYMICRO	;
238)   945B C1          		 POP BC	;
239)   945C 0D          		 DEC C	;
240)   945D E2 57 94    		 JP PO, LCLR_AGN1	;
241)   9460 C9          		 RET	;
243)   9461 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   9463 CD B9 93    		 CALL LCD16_COMMD	;
245)   9466 CD 54 94    		 CALL LCDDELAY	;
246)   9469 C9          		 RET	;
249)   946A 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   946B FE 00       		 CP 0	;
251)   946D C8          		 RET Z	;
252)   946E CD BD 93    		 CALL LCD16_DATA	;
253)   9471 23          		 INC HL	;
254)   9472 18 F6       		 JR LCD16_PRINT	;
257)   9474 CD BD 93    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   9477 C9          		 RET	;
260)   9478 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   947A CD B9 93    		 CALL LCD16_COMMD	;
262)   947D CD 54 94    		 CALL LCDDELAY	;
263)   9480 C9          		 RET	;
266)   9481 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   9485 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   9487 4B          		 LD C, E	;
269)   9488 21 81 94    		 LD HL, ROWOFFSET	;
270)   948B 09          		 ADD HL, BC	;
271)   948C 7E          		 LD A, (HL)	;
272)   948D 82          		 ADD D	;
273)   948E F6 80       		 OR LCD_SETDDRAMADDR	;
274)   9490 CD B9 93    		 CALL LCD16_COMMD	;
275)   9493 C9          		 RET	;
277)   9494 3A 7D 00    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   9497 CB 8F       		 RES LCD_CURSORON, A	;
279)   9499 32 7D 00    		 LD (LCD_DSPCTRL), A	;
280)   949C F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   949E CD B9 93    		 CALL LCD16_COMMD	;
282)   94A1 C9          		 RET	;
285)   94A2 3A 7D 00    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   94A5 CB CF       		 SET LCD_CURSORON, A	;
287)   94A7 32 7D 00    		 LD (LCD_DSPCTRL), A	;
288)   94AA F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   94AC CD B9 93    		 CALL LCD16_COMMD	;
290)   94AF C9          		 RET	;
292)   94B0 3A 7D 00    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   94B3 CB 87       		 RES LCD_BLINKON, A	;
294)   94B5 32 7D 00    		 LD (LCD_DSPCTRL), A	;
295)   94B8 F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   94BA CD B9 93    		 CALL LCD16_COMMD	;
297)   94BD C9          		 RET	;
300)   94BE 3A 7D 00    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   94C1 CB C7       		 SET LCD_BLINKON, A	;
302)   94C3 32 7D 00    		 LD (LCD_DSPCTRL), A	;
303)   94C6 F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   94C8 CD B9 93    		 CALL LCD16_COMMD	;
305)   94CB C9          		 RET	;
307)   94CC 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   94CE CD B9 93    		 CALL LCD16_COMMD	;
309)   94D1 C9          		 RET	;
311)   94D2 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   94D4 CD B9 93    		 CALL LCD16_COMMD	;
313)   94D7 C9          		 RET	;
315)   94D8 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   94DA CD B9 93    		 CALL LCD16_COMMD	;
317)   94DD C9          		 RET	;
319)   94DE 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   94E0 CD B9 93    		 CALL LCD16_COMMD	;
321)   94E3 C9          		 RET	;
324)   94E4 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   94E6 32 7F 00    		 LD (LCD_STSMASK),A	;
326)   94E9 CD A8 93    		 CALL LCD16_I2CSEND	;
327)   94EC C9          		 RET	;
329)   94ED 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   94EF 32 7F 00    		 LD (LCD_STSMASK),A	;
331)   94F2 CD A8 93    		 CALL LCD16_I2CSEND	;
332)   94F5 C9          		 RET	;
 29)   94F6 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 29)   94FA 61 79       		 SUN DEFM  "Sunday"	;
 30)   94FC 00          		 DB 0	;
 31)   94FD 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 31)   9501 61 79       		 MON DEFM  "Monday"	;
 32)   9503 00          		 DB 0	;
 33)   9504 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 33)   9508 64 61 79    		 TUE DEFM  "Tuesday"	;
 34)   950B 00          		 DB 0	;
 35)   950C 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 35)   9510 65 73 64 61 		 WED DEFM  "Wednesday"	;
 35)   9514 79          		 WED DEFM  "Wednesday"	;
 36)   9515 00          		 DB 0	;
 37)   9516 54 68 75 72 		 THU DEFM  "Thursday"	;
 37)   951A 73 64 61 79 		 THU DEFM  "Thursday"	;
 38)   951E 00          		 DB 0	;
 39)   951F 46 72 69 64 		 FRI DEFM  "Friday"	;
 39)   9523 61 79       		 FRI DEFM  "Friday"	;
 40)   9525 00          		 DB 0	;
 41)   9526 53 61 74 75 		 SAT DEFM  "Saturday"	;
 41)   952A 72 64 61 79 		 SAT DEFM  "Saturday"	;
 42)   952E 00          		 DB 0	;
 44)   952F F6 94       		 DAYS DEFW SUN	;
 45)   9531 FD 94       		 DEFW MON	;
 46)   9533 04 95       		 DEFW TUE	;
 47)   9535 0C 95       		 DEFW WED	;
 48)   9537 16 95       		 DEFW THU	;
 49)   9539 1F 95       		 DEFW FRI	;
 50)   953B 26 95       		 DEFW SAT	;
 52)   953D 52 54 43 20 		 MESERR DEFM "RTC ER RV"	;
 52)   9541 45 52 20 52 		 MESERR DEFM "RTC ER RV"	;
 52)   9545 56          		 MESERR DEFM "RTC ER RV"	;
 53)   9546 0A 0D 00    		 DEFB 10,13,0	;
 55)   9549 52 54 43 20 		 MESERR0 DEFM "RTC ER SD"	;
 55)   954D 45 52 20 53 		 MESERR0 DEFM "RTC ER SD"	;
 55)   9551 44          		 MESERR0 DEFM "RTC ER SD"	;
 56)   9552 0A 0D 00    		 DEFB 10,13,0	;
 58)   9555 7B          		SHERR0: LD A, E	;
 59)   9556 C5          		 PUSH BC	;
 60)   9557 CD F2 80    		 CALL SOUTAS	;
 61)   955A C1          		 POP BC	;
 62)   955B 79          		 LD A, C	;
 63)   955C CD F2 80    		 CALL SOUTAS	;
 65)   955F 21 49 95    		 LD HL, MESERR0	;
 66)   9562 CD 65 8B    		 CALL RS_TXT	;
 67)   9565 C9          		 RET	;
 70)   9566 79          		SHERR: LD A, C	;
 71)   9567 CD F2 80    		 CALL SOUTAS	;
 72)   956A 21 3D 95    		 LD HL, MESERR	;
 73)   956D CD 65 8B    		 CALL RS_TXT	;
 74)   9570 37          		 SCF	;
 75)   9571 C9          		 RET	;
 78)   9572 AF          		RST_BUF: XOR A	;
 79)   9573 06 14       		 LD B, 20	;
 80)   9575 21 CB 00    		 LD HL, BUFFER	;
 81)   9578 77          		LP1: LD (HL), A	;
 82)   9579 23          		 INC HL	;
 83)   957A 10 FC       		 DJNZ LP1	;
 84)   957C C9          		 RET	;
 86)   957D 64 64 2F 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9581 6D 2F 79 79 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9585 20 77 20 68 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9589 68 3A 6D 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   958D 3A 73 73    		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 89)   9590 21 7D 95    		DS1307_INIT: LD HL,DATEMASK	;
 90)   9593 11 CB 00    		 LD DE,TIMMSG	;
 91)   9596 01 13 00    		 LD BC,19	;
 92)   9599 ED B0       		 LDIR        	;
 93)   959B C9          		 RET	;
 95)   959C 21 CB 00    		DS1307_GETNOW: LD HL, BUFFER	;
 96)   959F AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 97)   95A0 77          		 LD (HL), A	;
 98)   95A1 16 68       		 LD D, DS1307_ADDRESS	;
 99)   95A3 01 01 00    		 LD BC, 1	;
100)   95A6 CD C9 92    		 CALL I2C_WRITE	;
101)   95A9 C2 55 95    		 JP NZ, SHERR0	;
103)   95AC 21 CB 00    		 LD HL, BUFFER	;
104)   95AF 16 68       		 LD D, DS1307_ADDRESS	;
105)   95B1 01 07 00    		 LD BC, 7	;
106)   95B4 CD 19 93    		 CALL I2C_READ	;
107)   95B7 C2 66 95    		 JP NZ, SHERR	;
108)   95BA AF          		 XOR A	;
109)   95BB C9          		 RET	;
113)   95BC 11 CB 00    		DS1307_SETTIME: LD DE, BUFFER	;
114)   95BF AF          		 XOR A	;
115)   95C0 12          		 LD (DE), A	;
116)   95C1 13          		 INC DE	;
117)   95C2 21 DC 00    		 LD HL,TIMMSG+17  ;SS	;SS
118)   95C5 CD F3 95    		 CALL SETTMPARAM	;
119)   95C8 21 D9 00    		 LD HL,TIMMSG+14  ;MN	;MN
120)   95CB CD F3 95    		 CALL SETTMPARAM	;
121)   95CE 21 D6 00    		 LD HL,TIMMSG+11  ;HH	;HH
122)   95D1 CD F3 95    		 CALL SETTMPARAM	;
123)   95D4 21 D4 00    		 LD HL,TIMMSG+9  ;D OF WEEK 1-7	;D OF WEEK 1-7
124)   95D7 CD F3 95    		 CALL SETTMPARAM	;
125)   95DA 21 CB 00    		 LD HL,TIMMSG  ;DD	;DD
126)   95DD CD F3 95    		 CALL SETTMPARAM	;
127)   95E0 21 CE 00    		 LD HL,TIMMSG+3  ;MM	;MM
128)   95E3 CD F3 95    		 CALL SETTMPARAM	;
129)   95E6 21 D1 00    		 LD HL,TIMMSG+6  ;YY	;YY
130)   95E9 CD F3 95    		 CALL SETTMPARAM	;
131)   95EC 3E 00       		 LD A,0	;
132)   95EE 12          		 LD (DE), A	;
133)   95EF CD 3B 96    		 CALL DS1307_ADJUST	;
134)   95F2 C9          		 RET	;
136)   95F3 D5          		SETTMPARAM: PUSH DE	;
137)   95F4 CD 64 9C    		 CALL strtob	;
138)   95F7 D1          		 POP DE	;
139)   95F8 CD F5 9A    		 CALL BN2BCD	;
140)   95FB 7D          		 LD A,L	;
141)   95FC 12          		 LD (DE),A	;
142)   95FD 13          		 INC DE  	;
143)   95FE C9          		 RET	;
148)   95FF 11 CB 00    		 LD DE, BUFFER	;
149)   9602 AF          		 XOR A	;
150)   9603 12          		 LD (DE), A	;
151)   9604 13          		 INC DE	;
152)   9605 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
153)   9607 CD F5 9A    		 CALL BN2BCD	;
154)   960A 7D          		 LD A, L	;
155)   960B 12          		 LD (DE), A	;
156)   960C 13          		 INC DE	;
157)   960D 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
158)   960F CD F5 9A    		 CALL BN2BCD	;
159)   9612 7D          		 LD A, L	;
160)   9613 12          		 LD (DE), A	;
161)   9614 13          		 INC DE	;
162)   9615 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
163)   9617 CD F5 9A    		 CALL BN2BCD	;
164)   961A 7D          		 LD A, L	;
165)   961B 12          		 LD (DE), A	;
166)   961C 13          		 INC DE	;
167)   961D 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
168)   961F 12          		 LD (DE), A	;
169)   9620 13          		 INC DE	;
170)   9621 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
171)   9623 CD F5 9A    		 CALL BN2BCD	;
172)   9626 7D          		 LD A, L	;
173)   9627 12          		 LD (DE), A	;
174)   9628 13          		 INC DE	;
175)   9629 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
176)   962B CD F5 9A    		 CALL BN2BCD	;
177)   962E 7D          		 LD A, L	;
178)   962F 12          		 LD (DE), A	;
179)   9630 13          		 INC DE	;
180)   9631 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
181)   9633 CD F5 9A    		 CALL BN2BCD	;
182)   9636 7D          		 LD A, L	;
183)   9637 12          		 LD (DE), A	;
184)   9638 13          		 INC DE	;
185)   9639 AF          		 XOR A	;
186)   963A 12          		 LD (DE), A	;
199)   963B 21 CB 00    		DS1307_ADJUST: LD HL, BUFFER	;
200)   963E 16 68       		 LD D, DS1307_ADDRESS	;
201)   9640 01 09 00    		 LD BC, 9	;
202)   9643 CD C9 92    		 CALL I2C_WRITE	;
203)   9646 C2 55 95    		 JP NZ, SHERR0	;
204)   9649 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
205)   964C CD 72 9B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
206)   964F 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
207)   9652 CD 72 9B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
208)   9655 C9          		 RET	;
212)   9656 21 CB 00    		DS1307_SETSQ: LD HL, BUFFER	;
213)   9659 E5          		 PUSH HL	;
214)   965A 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
215)   965C 77          		 LD (HL), A	;
216)   965D 23          		 INC HL	;
217)   965E 7A          		 LD A, D	;
218)   965F 77          		 LD (HL), A	;
219)   9660 E1          		 POP HL	;
220)   9661 16 68       		 LD D, DS1307_ADDRESS	;
221)   9663 01 02 00    		 LD BC, 2	;
222)   9666 CD C9 92    		 CALL I2C_WRITE	;
223)   9669 C2 55 95    		 JP NZ, SHERR0	;
224)   966C C9          		 RET	;
228)   966D CD 5C 9B    		CONVHL: CALL Bcd2ASC	;
229)   9670 26 00       		 LD H, 0	;
230)   9672 C9          		 RET	;
233)   9673 06 07       		CHKERROR: LD B, 7	;
234)   9675 21 CB 00    		 LD HL, BUFFER	;
235)   9678 7E          		CEAGN: LD A, (HL)	;
236)   9679 FE FF       		 CP $FF	;
237)   967B 28 05       		 JR Z, STER	;
238)   967D 23          		 INC HL	;
239)   967E 10 F8       		 DJNZ CEAGN	;
240)   9680 AF          		 XOR A	;
241)   9681 C9          		 RET	;
244)   9682 37          		 SCF	;
245)   9683 C9          		 RET	;
250)   9684 CD 72 95    		DS1307_GETTIME: CALL RST_BUF	;
251)   9687 CD 9C 95    		 CALL DS1307_GETNOW	;
252)   968A D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
253)   968B CD 73 96    		 CALL CHKERROR	;
254)   968E D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
255)   968F DD 21 CB 00 		 LD IX, BUFFER	;
256)   9693 11 CB 00    		 LD DE, TIMMSG	;
257)   9696 26 00       		 LD H, 0	;
258)   9698 DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
259)   969B CD 6D 96    		 CALL CONVHL	;
260)   969E 3E 2F       		 LD A, ' / '	;
261)   96A0 12          		 LD (DE), A	;
262)   96A1 13          		 INC DE	;
263)   96A2 DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
264)   96A5 CD 6D 96    		 CALL CONVHL	;
265)   96A8 3E 2F       		 LD A, ' / '	;
266)   96AA 12          		 LD (DE), A	;
267)   96AB 13          		 INC DE	;
268)   96AC DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
269)   96AF CD 6D 96    		 CALL CONVHL	;
270)   96B2 3E 20       		 LD A, ' '	;
271)   96B4 12          		 LD (DE), A	;
272)   96B5 13          		 INC DE	;
273)   96B6 DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
274)   96B9 CD 6D 96    		 CALL CONVHL	;
275)   96BC 3E 3A       		 LD A, ':'	;
276)   96BE 12          		 LD (DE), A	;
277)   96BF 13          		 INC DE	;
278)   96C0 DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
279)   96C3 CD 6D 96    		 CALL CONVHL	;
280)   96C6 3E 3A       		 LD A, ':'	;
281)   96C8 12          		 LD (DE), A	;
282)   96C9 13          		 INC DE	;
283)   96CA DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
284)   96CD CD 6D 96    		 CALL CONVHL	;
285)   96D0 13          		 INC DE	;
286)   96D1 AF          		 XOR A	;
287)   96D2 12          		 LD (DE), A	;
288)   96D3 C9          		 RET	;
108)   96D4 ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
109)   96D6 ED 44       		 NEG	;
110)   96D8 ED 44       		 NEG	;
111)   96DA ED 44       		 NEG	;
112)   96DC ED 44       		 NEG	;
113)   96DE ED 44       		 NEG	;
114)   96E0 ED 44       		 NEG	;
115)   96E2 ED 44       		 NEG	;
116)   96E4 C9          		 RET	;
123)   96E5 D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
139)   96E7 CD D4 96    		 CALL DELAYABIT	;
140)   96EA C9          		 RET	;
142)   96EB 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
143)   96ED CD E5 96    		 CALL SND_OUT	;
144)   96F0 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
145)   96F2 CD E5 96    		 CALL SND_OUT	;
146)   96F5 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
147)   96F7 CD E5 96    		 CALL SND_OUT	;
148)   96FA 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
149)   96FC CD E5 96    		 CALL SND_OUT                	;
150)   96FF C9          		               RET	;
152)   9700 CD EB 96    		SND_INIT: CALL SND_MUTEALL	;
153)   9703 AF          		               XOR A	;
154)   9704 32 F4 00    		               LD (CHANST),A	;
155)   9707 AF          		SND_CLRDAT:    XOR A	;
156)   9708 21 E0 00    		               LD HL,CHANDATA	;
157)   970B 77          		               LD (HL),A	;
158)   970C 54          		               LD D,H	;
159)   970D 5D          		               LD E,L	;
160)   970E 13          		               INC DE	;
161)   970F 01 0B 00    		               LD BC,11  	;
162)   9712 ED B0       		               LDIR	;
163)   9714 C9          		 RET	;
168)   9715 F5          		SND_NOTE:      PUSH AF	;
169)   9716 E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
170)   9718 07          		               RLCA	;
171)   9719 07          		               RLCA	;
172)   971A 07          		               RLCA	;
173)   971B 07          		               RLCA	;
174)   971C 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
175)   971D B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
176)   971E CD E5 96    		               CALL SND_OUT	;
177)   9721 7D          		SN_LOW:        LD A,L                	;
178)   9722 CD E5 96    		               CALL SND_OUT	;
179)   9725 F1          		               POP AF	;
180)   9726 C9          		               RET	;
186)   9727 F5          		SND_DOBEEP:    PUSH AF	;
187)   9728 3E 02       		               LD A,DEFCHN	;
188)   972A 0E 00       		               LD C,SNDVOLHI	;
189)   972C CD 50 97    		               CALL SND_SETVOLUME                	;
190)   972F 3E 02       		               LD A,DEFCHN	;
191)   9731 CD 15 97    		               CALL SND_NOTE	;
192)   9734 06 A0       		               LD B,160	;
193)   9736 CD C3 9A    		               CALL DELAYMILI	;
194)   9739 3E 02       		               LD A,DEFCHN	;
195)   973B 0E 04       		               LD C,SNDMUTE	;
196)   973D CD 50 97    		               CALL SND_SETVOLUME	;
197)   9740 F1          		               POP AF	;
198)   9741 C9          		               RET	;
200)   9742 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
201)   9745 CD 27 97    		               CALL SND_DOBEEP	;
202)   9748 C9          		               RET	;
204)   9749 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
205)   974C CD 27 97    		               CALL SND_DOBEEP	;
206)   974F C9          		               RET	;
213)   9750 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
214)   9751 3C          		               INC A                           ;E=A+1	;E=A+1
215)   9752 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
216)   9753 79          		               LD A,C	;
217)   9754 FE 04       		               CP SNDMUTE	;
218)   9756 3E 0F       		               LD A,$F	;
219)   9758 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
220)   975A 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
221)   975C 0C          		               INC C	;
222)   975D 0D          		SV_AGN:        DEC C	;
223)   975E 28 03       		               JR Z, SV_DOIT	;
224)   9760 07          		               RLCA	;
225)   9761 18 FA       		               JR SV_AGN	;
226)   9763 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
227)   9764 3E 80       		               LD A,$80	;
228)   9766 CB 03       		               RLC E	;
229)   9768 CB 03       		               RLC E	;
230)   976A CB 03       		               RLC E	;
231)   976C CB 03       		               RLC E	;
232)   976E B2          		               OR D	;
233)   976F B3          		               OR E	;
234)   9770 CD E5 96    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
235)   9773 C9          		               RET	;
238)   9774 F5          		SND_DISABLE:   PUSH AF	;
239)   9775 CD 9D 97    		               CALL SND_GETCHMASK	;
240)   9778 47          		               LD B,A	;
241)   9779 3A F4 00    		               LD A,(CHANST)	;
242)   977C B0          		               OR B	;
243)   977D 32 F4 00    		               LD (CHANST),A	;
244)   9780 F1          		               POP AF	;
245)   9781 0E 04       		               LD C, SNDMUTE	;
246)   9783 CD 50 97    		               CALL SND_SETVOLUME	;
247)   9786 C9          		               RET	;
250)   9787 F5          		SND_ENABLE:    PUSH AF	;
251)   9788 CD 9D 97    		               CALL SND_GETCHMASK	;
252)   978B ED 44       		               NEG	;
253)   978D 3D          		               DEC A	;
254)   978E 47          		               LD B,A	;
255)   978F 3A F4 00    		               LD A,(CHANST)	;
256)   9792 A0          		               AND B	;
257)   9793 32 F4 00    		               LD (CHANST),A	;
258)   9796 F1          		               POP AF	;
259)   9797 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
260)   9799 CD 50 97    		               CALL SND_SETVOLUME	;
261)   979C C9          		               RET	;
266)   979D 3C          		SND_GETCHMASK: INC A	;
267)   979E 4F          		               LD C,A	;
268)   979F AF          		               XOR A	;
269)   97A0 3C          		               INC A                	;
270)   97A1 0D          		GMCAGN:        DEC C	;
271)   97A2 C8          		               RET Z	;
272)   97A3 07          		               RLCA	;
273)   97A4 18 FB       		               JR GMCAGN             	;
280)   97A6 F5          		SND_PLAYCH:    PUSH AF	;
281)   97A7 21 E0 00    		               LD HL,CHANDATA	;
282)   97AA 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
283)   97AB 06 00       		               LD B,0	;
284)   97AD 4F          		               LD C,A	;
285)   97AE 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
286)   97AF 5E          		               LD E,(HL)	;
287)   97B0 23          		               INC HL	;
288)   97B1 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
289)   97B2 7A          		               LD A,D	;
290)   97B3 83          		               ADD E	;
291)   97B4 B7          		               OR A	;
292)   97B5 28 4B       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
294)   97B7 F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
295)   97B8 F5          		               PUSH AF	;
296)   97B9 CD 9D 97    		               CALL SND_GETCHMASK	;
297)   97BC 4F          		               LD C, A	;
298)   97BD 3A F4 00    		               LD A,(CHANST)	;
299)   97C0 A1          		               AND C	;
300)   97C1 C1          		               POP BC	;
301)   97C2 20 50       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
302)   97C4 C5          		               PUSH BC	;
303)   97C5 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
304)   97C6 06 00       		               LD B,0	;
305)   97C8 21 F0 00    		               LD HL,CHANCN	;
306)   97CB 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
307)   97CC 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
308)   97CD 3C          		               INC A	;
309)   97CE 28 32       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
310)   97D0 3D          		               DEC A          	;
311)   97D1 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
312)   97D2 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
313)   97D3 26 00       		               LD H,0                          ;	;
314)   97D5 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
315)   97D6 29          		               ADD HL,HL                       ;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE	;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE
316)   97D7 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
317)   97D8 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAY	;E 2ND BYTE OF THE NOTE TO PLAY
318)   97D9 23          		               INC HL	;
319)   97DA 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAY	;D 1ST BYTE OF THE NOTE TO PLAY
320)   97DB 23          		               INC HL	;
321)   97DC 4E          		               LD C,(HL)                      ;THE DURATION OF THE NOTE ON BC	;THE DURATION OF THE NOTE ON BC
322)   97DD 23          		               INC HL	;
323)   97DE 46          		               LD B,(HL)	;
324)   97DF ED 43 A9 00 		               LD (PRGEX),BC                   ;SAVE BC                	;SAVE BC
325)   97E3 C1          		               POP BC                          ;CHANNEL ON B	;CHANNEL ON B
326)   97E4 C5          		               PUSH BC                         	;
327)   97E5 21 E8 00    		               LD HL,CHANDEL                   ;SAVING DURATION ON CHANDEL + CHAN IDX         	;SAVING DURATION ON CHANDEL + CHAN IDX
328)   97E8 CB 00       		               RLC B                           ;DOUBLE IDX	;DOUBLE IDX
329)   97EA 48          		               LD C,B	;
330)   97EB 06 00       		               LD B,0	;
331)   97ED 09          		               ADD HL,BC	;
332)   97EE ED 4B A9 00 		               LD BC,(PRGEX)                      ;RESTORE BC	;RESTORE BC
333)   97F2 71          		               LD (HL),C                       ;SAVE NOTE DELAY ON CHANNEL DELAY	;SAVE NOTE DELAY ON CHANNEL DELAY
334)   97F3 23          		               INC HL	;
335)   97F4 70          		               LD (HL),B	;
336)   97F5 7A          		               LD A,D	;
337)   97F6 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
338)   97F7 FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
339)   97F9 38 0A       		               JR C,SND_SPOPS	;
340)   97FB EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
341)   97FC 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
342)   97FD CD 15 97    		               CALL SND_NOTE	;
343)   9800 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
344)   9802 C1          		PC_NOMORE:     POP BC	;
345)   9803 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
349)   9805 FE 03       		SND_SPOPS:     CP 3	;
350)   9807 30 07       		               JR NC,SNDOTOPS	;
351)   9809 4F          		               LD C,A                          ;VOLUME	;VOLUME
352)   980A 78          		               LD A,B                          ;CHANNEL	;CHANNEL
353)   980B CD 50 97    		               CALL SND_SETVOLUME	;
354)   980E 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
356)   9810 FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
357)   9812 28 02       		               JR Z, SNDEND	;
359)   9814 AF          		SNDOK:         XOR A                           ;END OK                	;END OK
360)   9815 C9          		               RET	;
361)   9816 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
362)   9818 C9          		               RET	;
368)   9819 21 E8 00    		SND_DOCHAN:    LD HL,CHANDEL	;
369)   981C 4F          		               LD C,A	;
370)   981D 06 00       		               LD B,0	;
371)   981F 09          		               ADD HL,BC	;
372)   9820 09          		               ADD HL,BC       ;DOUBLE CAUSE 2 BYTES PER DELAY VALUE	;DOUBLE CAUSE 2 BYTES PER DELAY VALUE
373)   9821 4E          		               LD C,(HL)	;
374)   9822 23          		               INC HL	;
375)   9823 46          		               LD B,(HL)	;
376)   9824 57          		               LD D,A          ;SAVE A	;SAVE A
377)   9825 78          		               LD A,B	;
378)   9826 B1          		               OR C	;
379)   9827 7A          		               LD A,D          ;RESTORE CHANNEL ON A	;RESTORE CHANNEL ON A
380)   9828 CA A6 97    		               JP Z,SND_PLAYCH ;PLAY CHANNEL NOTES	;PLAY CHANNEL NOTES
381)   982B AF          		               XOR A           ;DATA ON CHANNEL CAUSE WE DELAY 	;DATA ON CHANNEL CAUSE WE DELAY
383)   982C C9          		               RET	;
389)   982D 21 E8 00    		SND_INTDELAY:  LD HL,CHANDEL	;
390)   9830 06 04       		               LD B,4                  	;
391)   9832 5E          		ID_NXTCH:      LD E,(HL)	;
392)   9833 23          		               INC HL	;
393)   9834 56          		               LD D,(HL)	;
394)   9835 7A          		               LD A, D	;
395)   9836 B3          		               OR E	;
396)   9837 28 05       		               JR Z, ID_SKP	;
397)   9839 1B          		               DEC DE          ;MINUS NOTE DELAY VALUE	;MINUS NOTE DELAY VALUE
398)   983A 72          		               LD (HL),D	;
399)   983B 2B          		               DEC HL	;
400)   983C 73          		               LD (HL),E	;
401)   983D 23          		               INC HL	;
402)   983E 23          		ID_SKP:        INC HL	;
403)   983F 10 F1       		               DJNZ ID_NXTCH	;
404)   9841 C9          		               RET	;
408)   9842 06 04       		SND_PLAYMUSIC: LD B,4	;
409)   9844 0E 00       		               LD C,0	;
410)   9846 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
411)   9847 78          		               LD A,B	;
412)   9848 C5          		               PUSH BC                	;
413)   9849 CD 19 98    		               CALL SND_DOCHAN	;
414)   984C C1          		               POP BC                	;
415)   984D 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
416)   984E 4F          		               LD C,A	;
417)   984F 78          		               LD A,B	;
418)   9850 B7          		               OR A	;
419)   9851 20 F3       		               JR NZ, PM_NXT	;
420)   9853 79          		               LD A,C	;
421)   9854 FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
422)   9856 C9          		               RET	;
  8)   9857 FE E1       		@CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
  9)   9859 C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 10)   985A FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 11)   985C C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 12)   985D FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
 13)   985F C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
 14)   9860 FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
 15)   9862 C8          		 RET Z	;
 17)   9863 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
 18)   9864 3A 81 00    		 LD A,(LASTKEY)	;
 19)   9867 FE E1       		 CP $E1	;
 20)   9869 28 23       		 JR Z, GTBRK	;
 21)   986B FE F0       		 CP $F0	;
 22)   986D 28 59       		 JR Z, GTREL	;
 23)   986F FE E0       		 CP $E0	;
 24)   9871 28 21       		 JR Z, GTEXT	;
 25)   9873 79          		 LD A,C	;
 27)   9874 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
 28)   9876 CC F4 98    		 CALL Z, SHFTOG	;
 29)   9879 FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
 30)   987B CC F4 98    		 CALL Z, SHFTOG	;
 31)   987E FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
 32)   9880 CC FD 98    		 CALL Z, CTRTOG	;
 33)   9883 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
 34)   9885 CC 06 99    		 CALL Z, ALTTOG	;
 35)   9888 FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
 36)   988A CC 0F 99    		 CALL Z, CAPSTOG	;
 37)   988D C9          		               RET	;
 39)   988E 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
 40)   988F FE F0       		 CP $F0	;
 41)   9891 C8          		 RET Z  	;
 42)   9892 AF          		 XOR A        	;
 43)   9893 C9          		 RET	;
 45)   9894 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
 46)   9895 FE 6B       		 CP $6B         ;LEFT	;LEFT
 47)   9897 C8          		 RET Z	;
 48)   9898 FE 72       		 CP $72        ;DOWN	;DOWN
 49)   989A C8          		 RET Z	;
 50)   989B FE 74       		 CP $74        ;RIGHT	;RIGHT
 51)   989D C8          		 RET Z	;
 52)   989E FE 75       		 CP $75        ;UP	;UP
 53)   98A0 C8          		 RET Z	;
 54)   98A1 FE 70       		 CP $70        ;INSERT	;INSERT
 55)   98A3 C8          		 RET Z	;
 56)   98A4 FE 6C       		 CP $6C        ;HOME	;HOME
 57)   98A6 C8          		 RET Z	;
 58)   98A7 FE 7D       		 CP $7D        ;PG UP	;PG UP
 59)   98A9 C8          		 RET Z	;
 60)   98AA FE 7A       		 CP $7A        ;PG DN	;PG DN
 61)   98AC C8          		 RET Z	;
 62)   98AD FE 69       		 CP $69        ;END	;END
 63)   98AF C8          		 RET Z	;
 64)   98B0 FE 71       		 CP $71        ;DEL	;DEL
 65)   98B2 C8          		 RET Z	;
 66)   98B3 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
 67)   98B5 C8          		 RET Z	;
 68)   98B6 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
 69)   98B8 C8          		 RET Z	;
 70)   98B9 FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
 71)   98BB C8          		 RET Z	;
 72)   98BC FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
 73)   98BE C8          		 RET Z	;
 74)   98BF FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
 75)   98C1 C8          		 RET Z	;
 76)   98C2 FE F0       		 CP $F0	;
 77)   98C4 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
 79)   98C6 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
 80)   98C7 C9          		 RET	;
 83)   98C8 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
 84)   98C9 FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
 85)   98CB CC E2 98    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
 86)   98CE FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
 87)   98D0 CC E8 98    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
 88)   98D3 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
 89)   98D5 CC EE 98    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
 90)   98D8 FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
 91)   98DA CC E2 98    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
 92)   98DD 32 81 00    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
 93)   98E0 AF          		 XOR A         ; NO KEY  	; NO KEY
 94)   98E1 C9          		 RET	;
 96)   98E2 21 80 00    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
 97)   98E5 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
 98)   98E7 C9          		 RET	;
100)   98E8 21 80 00    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
101)   98EB CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
102)   98ED C9          		 RET	;
104)   98EE 21 80 00    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
105)   98F1 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
106)   98F3 C9          		 RET	;
108)   98F4 21 80 00    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
109)   98F7 3E 40       		 LD A, $40       ; MASK	; MASK
110)   98F9 AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
111)   98FA 77          		 LD (HL), A       ; SAVE	; SAVE
112)   98FB AF          		 XOR A         ; NO KEY	; NO KEY
113)   98FC C9          		 RET	;
115)   98FD 21 80 00    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
116)   9900 3E 80       		 LD A, $80       ; MASK	; MASK
117)   9902 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
118)   9903 77          		 LD (HL), A       ; SAVE	; SAVE
119)   9904 AF          		 XOR A         ; NO KEY	; NO KEY
120)   9905 C9          		 RET	;
122)   9906 21 80 00    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
123)   9909 3E 20       		 LD A, $20	;
124)   990B AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
125)   990C 77          		 LD (HL), A       ; SAVE	; SAVE
126)   990D AF          		 XOR A         ; NO KEY	; NO KEY
127)   990E C9          		 RET	;
129)   990F 21 80 00    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
130)   9912 3E 10       		 LD A, $10	;
131)   9914 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
132)   9915 77          		 LD (HL), A       ; SAVE	; SAVE
133)   9916 AF          		 XOR A         ; NO KEY	; NO KEY
134)   9917 C9          		 RET	;
138)   9918 FE AA       		@PS2LOK: CP $AA	;
139)   991A 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
141)   991C AF          		 XOR A	;
142)   991D C9          		 RET	;
143)   991E 21 54 99    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
144)   9921 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
145)   9922 CD 4E 99    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
146)   9925 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
147)   9926 FE 61       		 CP 'a'	;
148)   9928 38 04       		 JR C,PS2CHKCAPS	;
149)   992A FE 7B       		PS2SGT: CP 'z'+1  	;
150)   992C 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
152)   992E 3A 80 00    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
153)   9931 CB 77       		 BIT 6, A	;
154)   9933 78          		 LD A,B	;
155)   9934 C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
157)   9935 18 0F       		 JR PS2SHIFT	;
159)   9937 3A 80 00    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
160)   993A 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
161)   993B CB 1F       		 RR A	;
162)   993D CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
163)   993F A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
164)   9940 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
165)   9942 20 02       		 JR NZ,PS2SHIFT	;
169)   9944 78          		 LD A,B    	;
170)   9945 C9          		 RET	;
171)   9946 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
172)   9947 21 FE 99    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
173)   994A CD 4E 99    		 CALL PLK1       ;GET CHAR	;GET CHAR
174)   994D C9          		 RET	;
175)   994E 06 00       		PLK1: LD B, 0	;
176)   9950 4F          		 LD C, A	;
177)   9951 09          		 ADD HL, BC	;
178)   9952 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
179)   9953 C9          		 RET	;
183)   9954 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
183)   9958 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
183)   995C 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
184)   995E A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
184)   9962 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
184)   9966 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
185)   9968 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
185)   996C 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
185)   9970 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
186)   9972 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
186)   9976 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
186)   997A 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
187)   997C 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
187)   9980 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
187)   9984 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
188)   9986 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
188)   998A 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
188)   998E 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
189)   9990 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
189)   9994 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
189)   9998 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
190)   999A 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
190)   999E 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
190)   99A2 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
191)   99A4 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
191)   99A8 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
191)   99AC 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
192)   99AE 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
192)   99B2 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
192)   99B6 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
193)   99B8 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
193)   99BC 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
193)   99C0 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
194)   99C2 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
194)   99C6 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
194)   99CA 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
195)   99CC 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
195)   99D0 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
195)   99D4 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
196)   99D6 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
196)   99DA 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
196)   99DE 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
197)   99E0 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
197)   99E4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
197)   99E8 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
198)   99EA 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
198)   99EE 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
198)   99F2 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
199)   99F4 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
199)   99F8 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
199)   99FC 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
202)   99FE 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
202)   9A02 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
202)   9A06 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
203)   9A08 A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
203)   9A0C 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
203)   9A10 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
204)   9A12 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
204)   9A16 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
204)   9A1A 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
205)   9A1C 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
205)   9A20 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
205)   9A24 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
206)   9A26 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
206)   9A2A 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
206)   9A2E 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
207)   9A30 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
207)   9A34 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
207)   9A38 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
208)   9A3A 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
208)   9A3E 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
208)   9A42 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
209)   9A44 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
209)   9A48 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
209)   9A4C 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
210)   9A4E 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
210)   9A52 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
210)   9A56 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
211)   9A58 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
211)   9A5C 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
211)   9A60 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
212)   9A62 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
212)   9A66 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
212)   9A6A 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
213)   9A6C 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
213)   9A70 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
213)   9A74 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
214)   9A76 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
214)   9A7A 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
214)   9A7E 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
215)   9A80 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
215)   9A84 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
215)   9A88 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
216)   9A8A 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
216)   9A8E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
216)   9A92 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
217)   9A94 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
217)   9A98 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
217)   9A9C 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
218)   9A9E 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
218)   9AA2 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
218)   9AA6 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 37)   9AA8 F5          		DELAYMICROSEC: PUSH AF	;
 38)   9AA9 D5          		 PUSH DE	;
 39)   9AAA 1B          		 DEC DE	;
 40)   9AAB D1          		 POP DE	;
 41)   9AAC F1          		 POP AF	;
 42)   9AAD C9          		 RET	;
 45)   9AAE CD A8 9A    		S21: CALL DELAYMICROSEC	;
 46)   9AB1 10 FB       		 DJNZ S21	;
 47)   9AB3 C9          		 RET	;
 51)   9AB4 F5          		DELAYMILISEC: PUSH AF	;
 52)   9AB5 D5          		 PUSH DE	;
 53)   9AB6 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 54)   9AB9 1B          		DEL1: DEC DE	;
 55)   9ABA 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 56)   9ABB B3          		 OR E	;
 57)   9ABC 20 FB       		 JR NZ, DEL1	;
 58)   9ABE D1          		 POP DE	;
 59)   9ABF F1          		 POP AF	;
 60)   9AC0 C9          		 RET	;
 63)   9AC1 06 50       		 LD B, 80	;
 65)   9AC3 CD B4 9A    		S1: CALL DELAYMILISEC	;
 66)   9AC6 10 FB       		 DJNZ S1	;
 67)   9AC8 C9          		 RET	;
 72)   9AC9 C5          		@DELAYSEC: PUSH BC	;
 73)   9ACA 01 E8 03    		 LD BC, 1000	;
 74)   9ACD C5          		MYDLAGN: PUSH BC	;
 75)   9ACE CD B4 9A    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 76)   9AD1 C1          		 POP BC	;
 77)   9AD2 0B          		 DEC BC	;
 78)   9AD3 78          		 LD A, B	;
 79)   9AD4 B1          		 OR C	;
 80)   9AD5 20 F6       		 JR NZ, MYDLAGN	;
 81)   9AD7 C1          		 POP BC	;
 82)   9AD8 10 EF       		 DJNZ DELAYSEC	;
 83)   9ADA C9          		 RET	;
 88)   9ADB F5          		OUTASC: PUSH AF	;
 89)   9ADC D5          		 PUSH DE	;
 90)   9ADD CD 10 9B    		 CALL B2Bcd	;
 91)   9AE0 D1          		 POP DE	;
 92)   9AE1 CD 36 9B    		 CALL BCD2HA	;
 93)   9AE4 F1          		 POP AF	;
 94)   9AE5 C9          		 RET	;
108)   9AE6 B7          		BCD2BN: OR A	;
109)   9AE7 47          		 LD B, A	;
110)   9AE8 E6 F0       		 AND $F0	;
111)   9AEA 0F          		 RRCA	;
112)   9AEB 4F          		 LD C, A	;
113)   9AEC 0F          		 RRCA	;
114)   9AED 0F          		 RRCA	;
115)   9AEE 81          		 ADD A, C	;
116)   9AEF 4F          		 LD C, A	;
117)   9AF0 78          		 LD A, B	;
118)   9AF1 E6 0F       		 AND $0F	;
119)   9AF3 81          		 ADD A, C	;
120)   9AF4 C9          		 RET	;
135)   9AF5 26 FF       		BN2BCD: LD H, $FF	;
136)   9AF7 24          		D100LP: INC H	;
137)   9AF8 D6 64       		 SUB 100	;
138)   9AFA 30 FB       		 JR NC, D100LP	;
139)   9AFC C6 64       		 ADD A, 100	;
140)   9AFE 2E FF       		 LD L, $FF	;
141)   9B00 2C          		D10LP: INC L	;
142)   9B01 D6 0A       		 SUB 10	;
143)   9B03 30 FB       		 JR NC, D10LP	;
144)   9B05 C6 0A       		 ADD A, 10	;
145)   9B07 4F          		 LD C, A	;
146)   9B08 7D          		 LD A, L	;
147)   9B09 07          		 RLCA	;
148)   9B0A 07          		 RLCA	;
149)   9B0B 07          		 RLCA	;
150)   9B0C 07          		 RLCA	;
151)   9B0D B1          		 OR C	;
152)   9B0E 6F          		 LD L, A	;
153)   9B0F C9          		 RET	;
167)   9B10 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
168)   9B13 11 00 00    		 LD DE, 0	;
170)   9B16 29          		 ADD HL, HL	;
171)   9B17 7B          		 LD A, E	;
172)   9B18 8F          		 ADC A, A	;
173)   9B19 27          		 DAA	;
174)   9B1A 5F          		 LD E, A	;
175)   9B1B 7A          		 LD A, D	;
176)   9B1C 8F          		 ADC A, A	;
177)   9B1D 27          		 DAA	;
178)   9B1E 57          		 LD D, A	;
179)   9B1F 79          		 LD A, C	;
180)   9B20 8F          		 ADC A, A	;
181)   9B21 27          		 DAA	;
182)   9B22 4F          		 LD C, A	;
183)   9B23 10 F1       		 DJNZ cvtLp	;
184)   9B25 EB          		 EX DE, HL	;
185)   9B26 C9          		 RET	;
199)   9B27 B7          		BCD2BN: OR A	;
200)   9B28 47          		 LD B, A	;
201)   9B29 E6 F0       		 AND $F0	;
202)   9B2B 0F          		 RRCA	;
203)   9B2C 4F          		 LD C, A	;
204)   9B2D 0F          		 RRCA	;
205)   9B2E 0F          		 RRCA	;
206)   9B2F 81          		 ADD A, C	;
207)   9B30 4F          		 LD C, A	;
208)   9B31 78          		 LD A, B	;
209)   9B32 E6 0F       		 AND $0F	;
210)   9B34 81          		 ADD A, C	;
211)   9B35 C9          		 RET	;
223)   9B36 79          		 LD A, C	;
224)   9B37 CD 63 9B    		 CALL cvtUN	;
225)   9B3A 79          		 LD A, C	;
226)   9B3B CD 67 9B    		 CALL cvtLN	;
227)   9B3E 7C          		 LD A, H	;
228)   9B3F CD 63 9B    		 CALL cvtUN	;
229)   9B42 7C          		 LD A, H	;
230)   9B43 CD 67 9B    		 CALL cvtLN	;
231)   9B46 7D          		 LD A, L	;
232)   9B47 CD 63 9B    		 CALL cvtUN	;
233)   9B4A 7D          		 LD A, L	;
234)   9B4B 18 1A       		 JR cvtLN	;
236)   9B4D 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
237)   9B4E 1F          		 RRA	;
238)   9B4F 1F          		 RRA	;
239)   9B50 1F          		 RRA	;
241)   9B51 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
242)   9B53 C6 90       		 ADD A, 90h        ; old trick	; old trick
243)   9B55 27          		 DAA         ; for converting	; for converting
244)   9B56 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
245)   9B58 27          		 DAA         ; to hex ASCII	; to hex ASCII
246)   9B59 12          		 LD (DE), A	;
247)   9B5A 13          		 INC DE	;
248)   9B5B C9          		 RET	;
260)   9B5C 7D          		 LD A, L	;
261)   9B5D CD 4D 9B    		 CALL cvtUN	;
262)   9B60 7D          		 LD A, L	;
263)   9B61 18 EE       		 JR cvtLN	;
265)   9B63 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
266)   9B64 1F          		 RRA	;
267)   9B65 1F          		 RRA	;
268)   9B66 1F          		 RRA	;
270)   9B67 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
271)   9B69 C6 90       		 ADD A, 90h        ; old trick	; old trick
272)   9B6B 27          		 DAA         ; for converting	; for converting
273)   9B6C CE 40       		 ADC A, 40h        ; one nibble	; one nibble
274)   9B6E 27          		 DAA         ; to hex ASCII	; to hex ASCII
275)   9B6F 12          		 LD (DE), A	;
276)   9B70 13          		 INC DE	;
277)   9B71 C9          		 RET	;
294)   9B72 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
296)   9B73 ED 44       		 NEG         ; 8 T-states	; 8 T-states
297)   9B75 ED 44       		 NEG         ; 8 T-states	; 8 T-states
298)   9B77 ED 44       		 NEG         ; 8 T-states	; 8 T-states
299)   9B79 ED 44       		 NEG         ; 8 T-states	; 8 T-states
300)   9B7B 0B          		 DEC BC         ; 6 T-states	; 6 T-states
301)   9B7C 79          		 LD A, C        ; 9 T-states	; 9 T-states
302)   9B7D B0          		 OR B         ; 4 T-states	; 4 T-states
303)   9B7E C2 73 9B    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
304)   9B81 F1          		 POP AF         ; 10 T-states	; 10 T-states
305)   9B82 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
343)   9B83 26 00       		@B2D8: LD H, 0	;
344)   9B85 6F          		 LD L, A	;
345)   9B86 1E 00       		@B2D16: LD E, 0	;
346)   9B88 16 00       		@B2D24: LD D, 0	;
347)   9B8A 01 00 00    		@B2D32: LD BC, 0	;
348)   9B8D DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
349)   9B91 22 C3 00    		@B2D64: LD (B2DINV), HL	;
350)   9B94 ED 53 C5 00 		 LD (B2DINV + 2), DE	;
351)   9B98 ED 43 C7 00 		 LD (B2DINV + 4), BC	;
352)   9B9C DD 22 C9 00 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
353)   9BA0 21 CB 00    		 LD HL, B2DBUF	;
354)   9BA3 11 CC 00    		 LD DE, B2DBUF + 1	;
355)   9BA6 36 20       		 LD (HL), ' '	;
357)   9BA8 01 12 00    		 LD BC, 18	;
358)   9BAB ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
359)   9BAD ED 43 DE 00 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
360)   9BB1 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
361)   9BB3 21 CB 00    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
362)   9BB6 01 09 09    		 LD BC, 0x0909	;
363)   9BB9 AF          		 XOR A	;
364)   9BBA 05          		B2DSKP0: DEC B	;
365)   9BBB 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
366)   9BBD 2B          		 DEC HL	;
367)   9BBE B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
368)   9BBF 28 F9       		 JR Z, B2DSKP0	;
369)   9BC1 0D          		B2DFND1: DEC C	;
370)   9BC2 17          		 RLA	;
371)   9BC3 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
372)   9BC5 1F          		 RRA	;
373)   9BC6 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
374)   9BC7 E5          		B2DLUS2: PUSH HL	;
375)   9BC8 C5          		 PUSH BC	;
376)   9BC9 21 DE 00    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
377)   9BCC 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
378)   9BCD CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
379)   9BCF 7E          		B2DLUS0: LD A, (HL)	;
380)   9BD0 8F          		 ADC A, A	;
381)   9BD1 27          		 DAA	;
382)   9BD2 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
383)   9BD3 2B          		 DEC HL	;
384)   9BD4 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
385)   9BD6 30 03       		 JR NC, B2DNXT	;
386)   9BD8 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
387)   9BD9 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
388)   9BDB 0D          		B2DNXT: DEC C	;
389)   9BDC 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
390)   9BDE C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
391)   9BDF 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
392)   9BE1 E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
393)   9BE2 2B          		 DEC HL	;
394)   9BE3 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
395)   9BE4 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
396)   9BE6 21 DF 00    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
397)   9BE9 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
398)   9BEA B7          		 OR A	;
399)   9BEB ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
400)   9BED 54          		 LD D, H	;
401)   9BEE 5D          		 LD E, L	;
402)   9BEF ED 42       		 SBC HL, BC	;
403)   9BF1 EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
404)   9BF2 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
405)   9BF3 CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
406)   9BF5 3E 30       		 LD A, '0'	;
407)   9BF7 ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
408)   9BF9 FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
409)   9BFB 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
410)   9BFD 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
411)   9BFE 13          		 INC DE         ; correct start address	; correct start address
412)   9BFF 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
413)   9C01 ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
414)   9C03 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
415)   9C04 13          		 INC DE	;
416)   9C05 ED 6F       		B2DEXPL: RLD	;
417)   9C07 12          		 LD (DE), A	;
418)   9C08 13          		 INC DE	;
419)   9C09 23          		 INC HL         ; next BCD-byte	; next BCD-byte
420)   9C0A 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
421)   9C0C ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
422)   9C0E C9          		 RET	;
426)   9C0F EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
427)   9C10 21 CB 00    		 ld hl, B2DBUF	;
428)   9C13 CD 1A 9C    		 call SkipWhitespace	;
429)   9C16 ED B0       		 ldir	;
430)   9C18 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
431)   9C19 C9          		 ret	;
436)   9C1A 7E          		 ld a, (hl)	;
437)   9C1B FE 20       		 cp ' '	;
438)   9C1D C0          		 ret nz	;
439)   9C1E 23          		 inc hl	;
440)   9C1F 18 F9       		 jr SkipWhitespace	;
444)   9C21 06 08       		@REVBITS: ld b, 8	;
445)   9C23 6F          		 ld l, a	;
447)   9C24 CB 15       		 rl l	;
448)   9C26 1F          		 rra	;
449)   9C27 10 FB       		 djnz REVLOOP	;
450)   9C29 C9          		 RET	;
460)   9C2A E5          		 push hl	;
462)   9C2B 7E          		 ld a, (hl)	;
464)   9C2C FE 00       		 cp  0	;
465)   9C2E 28 0E       		 jr z, IsStrDecTrue	;
467)   9C30 FE 30       		 cp  '0'	;
468)   9C32 38 06       		 jr c, IsStrDecFalse	;
470)   9C34 FE 3A       		 cp  '9'+1	;
471)   9C36 38 09       		 jr c, IsStrDecContinue	;
472)   9C38 FE 39       		 cp  '9'	;
475)   9C3A F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
476)   9C3C E1          		 pop hl	;
477)   9C3D C9          		 ret	;
479)   9C3E BF          		 cp a         ; Set zero flag	; Set zero flag
480)   9C3F E1          		 pop hl	;
481)   9C40 C9          		 ret	;
483)   9C41 23          		 inc hl	;
484)   9C42 18 E7       		 jr IsStrDec00	;
491)   9C44 E5          		 push hl	;
493)   9C45 7E          		 ld a, (hl)	;
495)   9C46 FE 00       		 cp  0	;
496)   9C48 28 14       		 jr z, IsStrHexTrue	;
498)   9C4A FE 30       		 cp  '0'	;
499)   9C4C 38 0C       		 jr c, IsStrHexFalse	;
501)   9C4E FE 3A       		 cp  '9'+1	;
502)   9C50 38 0F       		 jr c, IsStrHexContinue	;
504)   9C52 FE 30       		 cp  '0'	;
505)   9C54 38 04       		 jr c, IsStrHexFalse	;
507)   9C56 FE 47       		 cp  'F'+1	;
508)   9C58 38 07       		 jr c, IsStrHexContinue	;
511)   9C5A F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
512)   9C5C E1          		 pop hl	;
513)   9C5D C9          		 ret	;
515)   9C5E BF          		 cp a         ; Set zero flag	; Set zero flag
516)   9C5F E1          		 pop hl	;
517)   9C60 C9          		 ret	;
519)   9C61 23          		 inc hl	;
520)   9C62 18 E1       		 jr IsStrHex00	;
527)   9C64 AF          		 xor a	;
528)   9C65 CD 6A 9C    		 call loop	;
529)   9C68 7A          		 ld a, d	;
530)   9C69 C9          		 ret	;
532)   9C6A 57          		 ld d, a	;
533)   9C6B 7E          		 ld a, (hl)	;
534)   9C6C 23          		 inc hl	;
535)   9C6D D6 3A       		 sub '9' + 1	;
536)   9C6F C6 0A       		 add 10	;
537)   9C71 D0          		 ret nc	;
538)   9C72 5F          		 ld e, a	;
539)   9C73 7A          		 ld a, d	;
540)   9C74 87          		 add a, a        ;double our accumulator	;double our accumulator
541)   9C75 87          		 add a, a        ;double again (now x4)	;double again (now x4)
542)   9C76 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
543)   9C77 87          		 add a, a        ;double again (now x10)	;double again (now x10)
544)   9C78 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
545)   9C79 18 EF       		 jr loop	;
553)   9C7B 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
554)   9C7C CD 8C 9C    		 call Hex12        ; Convert first char	; Convert first char
555)   9C7F 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
556)   9C80 87          		 add a, a        ; ...	; ...
557)   9C81 87          		 add a, a        ; ...	; ...
558)   9C82 87          		 add a, a        ; ...done!	; ...done!
559)   9C83 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
560)   9C84 23          		 inc hl         ; Advance to next char	; Advance to next char
561)   9C85 7E          		 ld a, (hl)	;
562)   9C86 CD 8C 9C    		 call Hex12        ; Convert second char	; Convert second char
563)   9C89 B2          		 or d         ; Add back top bits	; Add back top bits
564)   9C8A 23          		 inc hl         ; Advance for next guy	; Advance for next guy
565)   9C8B C9          		 ret	;
566)   9C8C D6 30       		Hex12: sub  '0'	;
567)   9C8E FE 0A       		 cp 10	;
568)   9C90 D8          		 ret c	;
569)   9C91 D6 07       		 sub 'A' - '0' - 10	;
570)   9C93 C9          		 ret	;
577)   9C94 CD 7B 9C    		 call Read8bit	;
578)   9C97 47          		 ld b, a	;
579)   9C98 CD 7B 9C    		 call Read8bit	;
580)   9C9B 4F          		 ld c, a	;
581)   9C9C C9          		 ret	;
589)   9C9D 7E          		 ld a, (hl)	;
590)   9C9E 23          		 inc hl	;
591)   9C9F D6 30       		 sub '0'	;
592)   9CA1 CB 27       		 sla a	;
593)   9CA3 CB 27       		 sla a	;
594)   9CA5 CB 27       		 sla a	;
595)   9CA7 CB 27       		 sla a	;
596)   9CA9 47          		 ld b, a	;
597)   9CAA 7E          		 ld a, (hl)	;
598)   9CAB 23          		 inc hl	;
599)   9CAC D6 30       		 sub '0'	;
600)   9CAE B0          		 or b	;
601)   9CAF C9          		 ret	;
606)   9CB0 4F          		 ld c, a        ; a = number to convert	; a = number to convert
607)   9CB1 CD BD 9C    		 call Num1	;
608)   9CB4 77          		 ld (hl), a	;
609)   9CB5 23          		 inc hl	;
610)   9CB6 79          		 ld a, c	;
611)   9CB7 CD C1 9C    		 call Num2	;
612)   9CBA 77          		 ld (hl), a	;
613)   9CBB 23          		 inc hl	;
614)   9CBC C9          		 ret	;
615)   9CBD 1F          		Num1: rra	;
616)   9CBE 1F          		 rra	;
617)   9CBF 1F          		 rra	;
618)   9CC0 1F          		 rra	;
619)   9CC1 F6 F0       		Num2: or $F0	;
620)   9CC3 27          		 daa	;
621)   9CC4 C6 A0       		 add a, $A0	;
622)   9CC6 CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
623)   9CC8 C9          		 ret	;
634)   9CC9 22 AC 00    		STR_SET: LD (LINESTR),HL	;
635)   9CCC C9          		 RET	;
638)   9CCD AF          		STR_CLR: XOR A	;
639)   9CCE 32 AE 00    		 LD (LINEPOS),A	;
640)   9CD1 32 AC 00    		 LD (LINESTR),A	;
641)   9CD4 32 AD 00    		 LD (LINESTR+1),A	;
642)   9CD7 C9          		 RET	;
645)   9CD8 3A AC 00    		STR_VALID: LD A,(LINESTR)	;
646)   9CDB 47          		 LD B,A	;
647)   9CDC 3A AD 00    		 LD A,(LINESTR+1)	;
648)   9CDF 80          		 ADD B	;
649)   9CE0 B7          		 OR A	;
650)   9CE1 C9          		 RET	;
656)   9CE2 F5          		STR_CALCADDR: PUSH AF	;
657)   9CE3 ED 5B AC 00 		 LD DE,(LINESTR)	;
658)   9CE7 EB          		 EX DE,HL	;
659)   9CE8 3A AE 00    		 LD A,(LINEPOS)	;
660)   9CEB 4F          		 LD C,A	;
661)   9CEC 06 00       		 LD B,0	;
662)   9CEE 09          		 ADD HL,BC	;
663)   9CEF EB          		 EX DE,HL	;
664)   9CF0 F1          		 POP AF	;
665)   9CF1 C9          		 RET	;
669)   9CF2 3A AE 00    		STR_NEXTPOS: LD A,(LINEPOS)	;
670)   9CF5 3C          		 INC A	;
671)   9CF6 32 AE 00    		 LD (LINEPOS),A	;
672)   9CF9 C9          		 RET	;
676)   9CFA CD E2 9C    		STR_ADD: CALL STR_CALCADDR	;
677)   9CFD CD F2 9C    		STRA_AGN: CALL STR_NEXTPOS	;
678)   9D00 7E          		 LD A,(HL)	;
679)   9D01 12          		 LD (DE),A	;
680)   9D02 23          		 INC HL	;
681)   9D03 13          		 INC DE	;
682)   9D04 B7          		 OR A	;
683)   9D05 C8          		 RET Z	;
684)   9D06 18 F5       		 JR STRA_AGN	;
687)   9D08 CD E2 9C    		STR_ADDCHAR: CALL STR_CALCADDR	;
688)   9D0B 12          		 LD (DE),A	;
689)   9D0C CD F2 9C    		 CALL STR_NEXTPOS	;
690)   9D0F 13          		 INC DE	;
691)   9D10 AF          		 XOR A	;
692)   9D11 12          		 LD (DE),A	;
693)   9D12 C9          		 RET	;
701)   9D13 26 00       		@PRINTNUM: LD H,0	;
702)   9D15 6F          		 LD L,A	;
703)   9D16 F5          		@PRINTNUM16: PUSH AF	;
705)   9D17 11 BC 00    		 LD DE,NUMBUF	;
706)   9D1A CD 5C 9B    		 CALL Bcd2ASC  ;FOR HEX	;FOR HEX
707)   9D1D 3E 68       		 LD A,'h'	;
708)   9D1F 12          		 LD (DE),A  	;
709)   9D20 13          		 INC DE	;
710)   9D21 AF          		 XOR A	;
711)   9D22 12          		 LD (DE),A  	;
713)   9D23 21 BC 00    		 LD HL,NUMBUF	;
714)   9D26 CD 65 8B    		 CALL RS_TXT	;
715)   9D29 CD C5 8B    		 CALL RS_NEWLINE	;
716)   9D2C F1          		 POP AF	;
717)   9D2D C9          		 RET	;
725)   9D2E E5          		@NUM_ADDZERO: PUSH HL	;
726)   9D2F 0E 00       		 LD C,0	;
727)   9D31 7E          		AZ_AGN: LD A,(HL)   	;
728)   9D32 23          		 INC HL	;
729)   9D33 0C          		 INC C	;
730)   9D34 FE 00       		 CP 0	;
731)   9D36 20 F9       		 JR NZ,AZ_AGN	;
732)   9D38 0D          		 DEC C ;EXCLUDE ZERO TERM	;EXCLUDE ZERO TERM
733)   9D39 E1          		 POP HL	;
734)   9D3A 79          		 LD A,C	;
735)   9D3B B8          		 CP B	;
736)   9D3C C8          		 RET Z	;
738)   9D3D 78          		 LD A,B	;
739)   9D3E 91          		 SUB C	;
740)   9D3F D8          		 RET C ;RETURN IF CARRY MEANS WE HAVE MORE DIGITS	;RETURN IF CARRY MEANS WE HAVE MORE DIGITS
741)   9D40 47          		 LD B,A	;
742)   9D41 3E 30       		 LD A,'0'	;
743)   9D43 2B          		AZ_AGN2: DEC HL	;
744)   9D44 77          		 LD (HL),A	;
745)   9D45 10 FC       		 DJNZ AZ_AGN2 	;
746)   9D47 C9          		 RET	;
752)   9D48 11 F0 00    		@COPYFNAME: LD DE,STRGBUFF	;
753)   9D4B 7E          		@COPYSTRING:   LD A,(HL)	;
754)   9D4C 12          		 LD (DE),A	;
755)   9D4D FE 00       		 CP 0	;
756)   9D4F C8          		 RET Z  	;
757)   9D50 13          		 INC DE	;
758)   9D51 23          		 INC HL	;
759)   9D52 18 F7       		 JR COPYSTRING	;
  1)   9D54 00 00 00 00 		DS 0A000H-$	;
  1)   9D58 00 00 00 00 		DS 0A000H-$	;
  1)   9D5C 00 00 00 00 		DS 0A000H-$	;
  1)   9D60 00 00 00 00 		DS 0A000H-$	;
  1)   9D64 00 00 00 00 		DS 0A000H-$	;
  1)   9D68 00 00 00 00 		DS 0A000H-$	;
  1)   9D6C 00 00 00 00 		DS 0A000H-$	;
  1)   9D70 00 00 00 00 		DS 0A000H-$	;
  1)   9D74 00 00 00 00 		DS 0A000H-$	;
  1)   9D78 00 00 00 00 		DS 0A000H-$	;
  1)   9D7C 00 00 00 00 		DS 0A000H-$	;
  1)   9D80 00 00 00 00 		DS 0A000H-$	;
  1)   9D84 00 00 00 00 		DS 0A000H-$	;
  1)   9D88 00 00 00 00 		DS 0A000H-$	;
  1)   9D8C 00 00 00 00 		DS 0A000H-$	;
  1)   9D90 00 00 00 00 		DS 0A000H-$	;
  1)   9D94 00 00 00 00 		DS 0A000H-$	;
  1)   9D98 00 00 00 00 		DS 0A000H-$	;
  1)   9D9C 00 00 00 00 		DS 0A000H-$	;
  1)   9DA0 00 00 00 00 		DS 0A000H-$	;
  1)   9DA4 00 00 00 00 		DS 0A000H-$	;
  1)   9DA8 00 00 00 00 		DS 0A000H-$	;
  1)   9DAC 00 00 00 00 		DS 0A000H-$	;
  1)   9DB0 00 00 00 00 		DS 0A000H-$	;
  1)   9DB4 00 00 00 00 		DS 0A000H-$	;
  1)   9DB8 00 00 00 00 		DS 0A000H-$	;
  1)   9DBC 00 00 00 00 		DS 0A000H-$	;
  1)   9DC0 00 00 00 00 		DS 0A000H-$	;
  1)   9DC4 00 00 00 00 		DS 0A000H-$	;
  1)   9DC8 00 00 00 00 		DS 0A000H-$	;
  1)   9DCC 00 00 00 00 		DS 0A000H-$	;
  1)   9DD0 00 00 00 00 		DS 0A000H-$	;
  1)   9DD4 00 00 00 00 		DS 0A000H-$	;
  1)   9DD8 00 00 00 00 		DS 0A000H-$	;
  1)   9DDC 00 00 00 00 		DS 0A000H-$	;
  1)   9DE0 00 00 00 00 		DS 0A000H-$	;
  1)   9DE4 00 00 00 00 		DS 0A000H-$	;
  1)   9DE8 00 00 00 00 		DS 0A000H-$	;
  1)   9DEC 00 00 00 00 		DS 0A000H-$	;
  1)   9DF0 00 00 00 00 		DS 0A000H-$	;
  1)   9DF4 00 00 00 00 		DS 0A000H-$	;
  1)   9DF8 00 00 00 00 		DS 0A000H-$	;
  1)   9DFC 00 00 00 00 		DS 0A000H-$	;
  1)   9E00 00 00 00 00 		DS 0A000H-$	;
  1)   9E04 00 00 00 00 		DS 0A000H-$	;
  1)   9E08 00 00 00 00 		DS 0A000H-$	;
  1)   9E0C 00 00 00 00 		DS 0A000H-$	;
  1)   9E10 00 00 00 00 		DS 0A000H-$	;
  1)   9E14 00 00 00 00 		DS 0A000H-$	;
  1)   9E18 00 00 00 00 		DS 0A000H-$	;
  1)   9E1C 00 00 00 00 		DS 0A000H-$	;
  1)   9E20 00 00 00 00 		DS 0A000H-$	;
  1)   9E24 00 00 00 00 		DS 0A000H-$	;
  1)   9E28 00 00 00 00 		DS 0A000H-$	;
  1)   9E2C 00 00 00 00 		DS 0A000H-$	;
  1)   9E30 00 00 00 00 		DS 0A000H-$	;
  1)   9E34 00 00 00 00 		DS 0A000H-$	;
  1)   9E38 00 00 00 00 		DS 0A000H-$	;
  1)   9E3C 00 00 00 00 		DS 0A000H-$	;
  1)   9E40 00 00 00 00 		DS 0A000H-$	;
  1)   9E44 00 00 00 00 		DS 0A000H-$	;
  1)   9E48 00 00 00 00 		DS 0A000H-$	;
  1)   9E4C 00 00 00 00 		DS 0A000H-$	;
  1)   9E50 00 00 00 00 		DS 0A000H-$	;
  1)   9E54 00 00 00 00 		DS 0A000H-$	;
  1)   9E58 00 00 00 00 		DS 0A000H-$	;
  1)   9E5C 00 00 00 00 		DS 0A000H-$	;
  1)   9E60 00 00 00 00 		DS 0A000H-$	;
  1)   9E64 00 00 00 00 		DS 0A000H-$	;
  1)   9E68 00 00 00 00 		DS 0A000H-$	;
  1)   9E6C 00 00 00 00 		DS 0A000H-$	;
  1)   9E70 00 00 00 00 		DS 0A000H-$	;
  1)   9E74 00 00 00 00 		DS 0A000H-$	;
  1)   9E78 00 00 00 00 		DS 0A000H-$	;
  1)   9E7C 00 00 00 00 		DS 0A000H-$	;
  1)   9E80 00 00 00 00 		DS 0A000H-$	;
  1)   9E84 00 00 00 00 		DS 0A000H-$	;
  1)   9E88 00 00 00 00 		DS 0A000H-$	;
  1)   9E8C 00 00 00 00 		DS 0A000H-$	;
  1)   9E90 00 00 00 00 		DS 0A000H-$	;
  1)   9E94 00 00 00 00 		DS 0A000H-$	;
  1)   9E98 00 00 00 00 		DS 0A000H-$	;
  1)   9E9C 00 00 00 00 		DS 0A000H-$	;
  1)   9EA0 00 00 00 00 		DS 0A000H-$	;
  1)   9EA4 00 00 00 00 		DS 0A000H-$	;
  1)   9EA8 00 00 00 00 		DS 0A000H-$	;
  1)   9EAC 00 00 00 00 		DS 0A000H-$	;
  1)   9EB0 00 00 00 00 		DS 0A000H-$	;
  1)   9EB4 00 00 00 00 		DS 0A000H-$	;
  1)   9EB8 00 00 00 00 		DS 0A000H-$	;
  1)   9EBC 00 00 00 00 		DS 0A000H-$	;
  1)   9EC0 00 00 00 00 		DS 0A000H-$	;
  1)   9EC4 00 00 00 00 		DS 0A000H-$	;
  1)   9EC8 00 00 00 00 		DS 0A000H-$	;
  1)   9ECC 00 00 00 00 		DS 0A000H-$	;
  1)   9ED0 00 00 00 00 		DS 0A000H-$	;
  1)   9ED4 00 00 00 00 		DS 0A000H-$	;
  1)   9ED8 00 00 00 00 		DS 0A000H-$	;
  1)   9EDC 00 00 00 00 		DS 0A000H-$	;
  1)   9EE0 00 00 00 00 		DS 0A000H-$	;
  1)   9EE4 00 00 00 00 		DS 0A000H-$	;
  1)   9EE8 00 00 00 00 		DS 0A000H-$	;
  1)   9EEC 00 00 00 00 		DS 0A000H-$	;
  1)   9EF0 00 00 00 00 		DS 0A000H-$	;
  1)   9EF4 00 00 00 00 		DS 0A000H-$	;
  1)   9EF8 00 00 00 00 		DS 0A000H-$	;
  1)   9EFC 00 00 00 00 		DS 0A000H-$	;
  1)   9F00 00 00 00 00 		DS 0A000H-$	;
  1)   9F04 00 00 00 00 		DS 0A000H-$	;
  1)   9F08 00 00 00 00 		DS 0A000H-$	;
  1)   9F0C 00 00 00 00 		DS 0A000H-$	;
  1)   9F10 00 00 00 00 		DS 0A000H-$	;
  1)   9F14 00 00 00 00 		DS 0A000H-$	;
  1)   9F18 00 00 00 00 		DS 0A000H-$	;
  1)   9F1C 00 00 00 00 		DS 0A000H-$	;
  1)   9F20 00 00 00 00 		DS 0A000H-$	;
  1)   9F24 00 00 00 00 		DS 0A000H-$	;
  1)   9F28 00 00 00 00 		DS 0A000H-$	;
  1)   9F2C 00 00 00 00 		DS 0A000H-$	;
  1)   9F30 00 00 00 00 		DS 0A000H-$	;
  1)   9F34 00 00 00 00 		DS 0A000H-$	;
  1)   9F38 00 00 00 00 		DS 0A000H-$	;
  1)   9F3C 00 00 00 00 		DS 0A000H-$	;
  1)   9F40 00 00 00 00 		DS 0A000H-$	;
  1)   9F44 00 00 00 00 		DS 0A000H-$	;
  1)   9F48 00 00 00 00 		DS 0A000H-$	;
  1)   9F4C 00 00 00 00 		DS 0A000H-$	;
  1)   9F50 00 00 00 00 		DS 0A000H-$	;
  1)   9F54 00 00 00 00 		DS 0A000H-$	;
  1)   9F58 00 00 00 00 		DS 0A000H-$	;
  1)   9F5C 00 00 00 00 		DS 0A000H-$	;
  1)   9F60 00 00 00 00 		DS 0A000H-$	;
  1)   9F64 00 00 00 00 		DS 0A000H-$	;
  1)   9F68 00 00 00 00 		DS 0A000H-$	;
  1)   9F6C 00 00 00 00 		DS 0A000H-$	;
  1)   9F70 00 00 00 00 		DS 0A000H-$	;
  1)   9F74 00 00 00 00 		DS 0A000H-$	;
  1)   9F78 00 00 00 00 		DS 0A000H-$	;
  1)   9F7C 00 00 00 00 		DS 0A000H-$	;
  1)   9F80 00 00 00 00 		DS 0A000H-$	;
  1)   9F84 00 00 00 00 		DS 0A000H-$	;
  1)   9F88 00 00 00 00 		DS 0A000H-$	;
  1)   9F8C 00 00 00 00 		DS 0A000H-$	;
  1)   9F90 00 00 00 00 		DS 0A000H-$	;
  1)   9F94 00 00 00 00 		DS 0A000H-$	;
  1)   9F98 00 00 00 00 		DS 0A000H-$	;
  1)   9F9C 00 00 00 00 		DS 0A000H-$	;
  1)   9FA0 00 00 00 00 		DS 0A000H-$	;
  1)   9FA4 00 00 00 00 		DS 0A000H-$	;
  1)   9FA8 00 00 00 00 		DS 0A000H-$	;
  1)   9FAC 00 00 00 00 		DS 0A000H-$	;
  1)   9FB0 00 00 00 00 		DS 0A000H-$	;
  1)   9FB4 00 00 00 00 		DS 0A000H-$	;
  1)   9FB8 00 00 00 00 		DS 0A000H-$	;
  1)   9FBC 00 00 00 00 		DS 0A000H-$	;
  1)   9FC0 00 00 00 00 		DS 0A000H-$	;
  1)   9FC4 00 00 00 00 		DS 0A000H-$	;
  1)   9FC8 00 00 00 00 		DS 0A000H-$	;
  1)   9FCC 00 00 00 00 		DS 0A000H-$	;
  1)   9FD0 00 00 00 00 		DS 0A000H-$	;
  1)   9FD4 00 00 00 00 		DS 0A000H-$	;
  1)   9FD8 00 00 00 00 		DS 0A000H-$	;
  1)   9FDC 00 00 00 00 		DS 0A000H-$	;
  1)   9FE0 00 00 00 00 		DS 0A000H-$	;
  1)   9FE4 00 00 00 00 		DS 0A000H-$	;
  1)   9FE8 00 00 00 00 		DS 0A000H-$	;
  1)   9FEC 00 00 00 00 		DS 0A000H-$	;
  1)   9FF0 00 00 00 00 		DS 0A000H-$	;
  1)   9FF4 00 00 00 00 		DS 0A000H-$	;
  1)   9FF8 00 00 00 00 		DS 0A000H-$	;
  1)   9FFC 00 00 00 00 		DS 0A000H-$	;
