 38)   007A 00          		 @SERERR DEFS 1	;
 42)   007B 00          		 @LCDCX DEFS 1        ;DISPLAY X POS (0..F  FOR 1..16)	;DISPLAY X POS (0..F  FOR 1..16)
 43)   007C 00          		 @LCDCX DEFS 1        ;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)	;DISPLAY Y POS (0 OR 1 FOR LINE 1 AND 2)
 44)   007D 00          		 @LCD_DSPCTRL DEFS 1       ;LCD I2C 16X2	;LCD I2C 16X2
 45)   007E 00          		 @LCD_DSPMODE DEFS 1       ;LCD I2C 16X2	;LCD I2C 16X2
 46)   007F 00          		 @LCD_STSMASK DEFS 1       ;LCD I2C 16X2  	;LCD I2C 16X2
 48)   0080 00          		 @KEYCTR DEFS 1        ;IN NB SYSTEM VARS	;IN NB SYSTEM VARS
 49)   0081 00          		 @LASTKEY DEFS 1  ;LAST KEY PRESSED	;LAST KEY PRESSED
 51)   0082 00 00 00 00 		 @BANKS DEFS 8        ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 51)   0086 00 00 00 00 		 @BANKS DEFS 8        ;8 PAGES FOR THE 8 BANKS 0..7	;8 PAGES FOR THE 8 BANKS 0..7
 53)   008A 00          		 @STRG_STAT DEFS 1       ;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED,1=CONNECTED,BIT 7 DEVICE EXISTS	;STORAGE_NEW STAUS BIT 0=0 NOT CONNECTED, 1=CONNECTED, BIT 7 DEVICE EXISTS
 54)   008B 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   008F 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   0093 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   0097 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   009B 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   009F 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   00A3 00 00 00 00 		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 54)   00A7 00 00       		 @USBBUF DEFS 30       ;CH376 USB BUFFER=20BYTES	;CH376 USB BUFFER=20BYTES
 59)   00A9 00 00       		 @PRGEX DEFS 2        ;ONLY FOR BOOTL	;ONLY FOR BOOTL
 60)   00AB 00          		 TVSTAT DEFS 1	;
 61)   00AC 00 00       		 @LINESTR DEFS 2       ;ADDRESS OF LINEBUF FOR PRINTING ON STRING	;ADDRESS OF LINEBUF FOR PRINTING ON STRING
 62)   00AE 00          		 @LINEPOS DEFS 1	;
 63)   00AF 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00B3 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00B7 00 00 00 00 		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 63)   00BB 00          		 @MYNUM DEFS 13        ;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED	;10CHARS MESSAGE FOR NUMBER AND 3 TERMINATED
 64)   00BC 00 00 00 00 		 @NUMBUF DEFS 7    	;
 64)   00C0 00 00 00    		 @NUMBUF DEFS 7    	;
 65)   00C3 00 00 00 00 		 @B2DINV DEFS 8        ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 65)   00C7 00 00 00 00 		 @B2DINV DEFS 8        ;BINARY NUMBER TO BE CONVERTED	;BINARY NUMBER TO BE CONVERTED
 66)   00CB 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00CF 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00D3 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00D7 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 66)   00DB 00 00 00 00 		 @B2DBUF DEFS 20       ;ASCCI STRING OF THE NUMBER	;ASCCI STRING OF THE NUMBER
 67)   00DF 00          		 @B2DEND DEFS 1        ;0 FOR TERMINATE THE STRING        	;0 FOR TERMINATE THE STRING
 72)   00E0 00 00       		@CHANDATA:     DEFS 2	;
 73)   00E2 00 00       		               DEFS 2	;
 74)   00E4 00 00       		               DEFS 2	;
 75)   00E6 00 00       		               DEFS 2	;
 77)   00E8 00 00       		@CHANDEL:      DEFS 2	;
 78)   00EA 00 00       		               DEFS 2	;
 79)   00EC 00 00       		               DEFS 2	;
 80)   00EE 00 00       		               DEFS 2	;
 82)   00F0 00          		@CHANCN:       DEFS 1	;
 83)   00F1 00          		               DEFS 1	;
 84)   00F2 00          		               DEFS 1	;
 85)   00F3 00          		               DEFS 1	;
 86)   00F4 00          		@CHANST:       DEFS 1    ;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED     	;CHANNEL STATUS  BITS 0-3 SET MEANS DISABLED
112)   8000 2F          		 CPL         ;ROM IS HERE	;ROM IS HERE
113)   8001 C3 82 81    		 JP START	;
114)   8004 C3 5F 80    		 JP GETKEY        ;CALL HERE FROM NB ROM TO FIND THE GTNBKEY  $8004	;CALL HERE FROM NB ROM TO FIND THE GTNBKEY  $8004
115)   8007 C3 8B 80    		 JP RSTX        ; CALL HERE FROM NB TO FIND SERIAL TRASMIT  $8007	; CALL HERE FROM NB TO FIND SERIAL TRASMIT  $8007
116)   800A C3 8F 80    		 JP RSRX        ; CALL HERE FROM NB TO FIND SERIAL RECEIVE  $800A	; CALL HERE FROM NB TO FIND SERIAL RECEIVE  $800A
117)   800D C3 93 80    		 JP NBSTLCD        ;CALL HERE FROM NB TO FIND THE NBSETLCD $800D	;CALL HERE FROM NB TO FIND THE NBSETLCD $800D
118)   8010 C3 D0 81    		 JP MENU	;
119)   8013 C3 4F 80    		 JP CHKKEY       ;CALL HERE FROM NB TO FIND THE CHKKEY $8013 RET NZ FOR KEY AVAIL	;CALL HERE FROM NB TO FIND THE CHKKEY $8013 RET NZ FOR KEY AVAIL
123)   8016 CD 19 8B    		@OS_PRINTCHAR: CALL RS_TX	;
124)   8019 C9          		 RET	;
128)   801A 7E          		@OS_PRINTTEXT: LD A, (HL)	;
129)   801B FE 00       		 CP 0	;
130)   801D C8          		 RET Z	;
131)   801E E5          		 PUSH HL	;
132)   801F CD 16 80    		 CALL OS_PRINTCHAR	;
133)   8022 E1          		 POP HL	;
134)   8023 23          		 INC HL	;
135)   8024 18 F4       		 JR OS_PRINTTEXT	;
138)   8026 E1          		@OS_PRINTMSG: POP HL	;
139)   8027 CD 1A 80    		 CALL OS_PRINTTEXT	;
140)   802A 23          		 INC HL	;
141)   802B E5          		 PUSH HL        ;CONTINUE AFTER THE MESG	;CONTINUE AFTER THE MESG
142)   802C C9          		 RET	;
148)   802D DF 3C       		@OS_PRCHSCR: DEFW WPTCHAR	;
149)   802F C9          		 RET	;
153)   8030 7E          		@OS_PRMESSCR:  LD A,(HL)	;
154)   8031 B7          		 OR A	;
155)   8032 C8          		 RET Z	;
156)   8033 DF 3C       		 DEFW WPTCHAR	;
157)   8035 23          		 INC HL	;
158)   8036 18 F8       		 JR OS_PRMESSCR	;
160)   8038 7E          		@OS_PRMESSCRSFE: LD A,(HL)	;
161)   8039 B7          		 OR A	;
162)   803A C8          		 RET Z	;
163)   803B FE 0A       		 CP $0A	;
164)   803D 28 04       		 JR Z,PMS_PRN	;
165)   803F FE 1F       		 CP 31 	;
166)   8041 38 04       		 JR C,PMS_SKP	;
167)   8043 DF 3C       		PMS_PRN: DEFW WPTCHAR	;
168)   8045 18 05       		 JR PMS_CNT	;
169)   8047 E5          		PMS_SKP:       PUSH HL	;
170)   8048 CD C6 80    		 CALL SOUTAS	;
171)   804B E1          		 POP HL	;
172)   804C 23          		PMS_CNT: INC HL	;
173)   804D 18 E9       		 JR OS_PRMESSCRSFE	;
177)   804F 47          		CHKKEY: LD B,A	;
178)   8050 CD 80 8B    		 CALL RS_KEYRD 	;
179)   8053 20 04       		 JR NZ, CK_EX       ;ZF SET IF NO KEY ON SERIAL	;ZF SET IF NO KEY ON SERIAL
180)   8055 DB 06       		 IN A,(6)	;
181)   8057 CB 5F       		 BIT 3,A        ;CHECK IF REAL KBD HAS AVAIL KEY, ZF SET IF NO KEY ON REAL KBD	;CHECK IF REAL KBD HAS AVAIL KEY, ZF SET IF NO KEY ON REAL KBD
182)   8059 78          		CK_EX: LD A,B	;
183)   805A 16 A0       		 LD D,$A0        ;DISPCOM 	;DISPCOM
184)   805C CB B6       		 RES 6,(HL)       ;KDATA= BIT 6 	;KDATA= BIT 6
185)   805E C9          		 RET	;
187)   805F E5          		GETKEY: PUSH HL	;
188)   8060 D5          		 PUSH DE	;
189)   8061 C5          		 PUSH BC	;
191)   8062 CD B1 89    		 CALL PS2KEYAVAIL       ;ZF=0 IF WE HAVE A KEY ELSE 1	;ZF=0 IF WE HAVE A KEY ELSE 1
192)   8065 20 05       		 JR NZ, KEYAVAIL       ;CHECK FOR SERIAL INPUT	;CHECK FOR SERIAL INPUT
193)   8067 CD B6 89    		 CALL READKBCHAR       ;READ KEY FROM PS/2	;READ KEY FROM PS/2
194)   806A 18 10       		 JR RGT        ;NB TRANSLATION AND EXIT	;NB TRANSLATION AND EXIT
196)   806C CD 50 8B    		KEYAVAIL: CALL RS_RX       ;GET A CHAR FROM RS232 OR PS2_KEYB	;GET A CHAR FROM RS232 OR PS2_KEYB
197)   806F FE FE       		 CP 254        ;BREAK KEY	;BREAK KEY
198)   8071 20 09       		 JR NZ,RGT	;
204)   8073 21 3C 00    		 LD HL,COPST	;
205)   8076 36 66       		 LD (HL),102  ;SIMULATE BREAK	;SIMULATE BREAK
206)   8078 3E 19       		 LD A,$19 	;
207)   807A 18 03       		 JR KAEXIT	;
208)   807C CD FB 87    		RGT: CALL GTNBKEY        ;KEY PRESSED TRANSLATE FOR NB	;KEY PRESSED TRANSLATE FOR NB
217)   807F C1          		KAEXIT: POP BC	;
218)   8080 D1          		 POP DE	;
219)   8081 E1          		 POP HL  	;
220)   8082 FE 00       		 CP 0         ;CHECK IF INVALID KEY	;CHECK IF INVALID KEY
221)   8084 C0          		 RET NZ	;
222)   8085 CB B6       		 RES KDATA (HL)        ; KEY INVALID RESET KDATA TEST BIT	; KEY INVALID RESET KDATA TEST BIT
223)   8087 23          		 INC HL         ;GET TO THE LAST VALID KEY	;GET TO THE LAST VALID KEY
224)   8088 7E          		 LD A, (HL)	;
225)   8089 2B          		 DEC HL	;
226)   808A C9          		 RET	;
228)   808B CD 19 8B    		RSTX: CALL RS_TX	;
229)   808E C9          		 RET	;
231)   808F CD 50 8B    		RSRX: CALL RS_RX	;
232)   8092 C9          		 RET	;
239)   8093 D5          		NBSTLCD: PUSH DE	;
240)   8094 42          		 LD B, D        ;TOTAL CHARS	;TOTAL CHARS
241)   8095 05          		 DEC B	;
242)   8096 05          		 DEC B         ;SKIP 2	;SKIP 2
243)   8097 11 11 00    		 LD DE, 17        ;START FROM THE END	;START FROM THE END
244)   809A 19          		 ADD HL, DE	;
245)   809B AF          		 XOR A	;
246)   809C 11 7C 00    		 LD DE, LCDCX        ;LCD POSITION	;LCD POSITION
247)   809F 12          		 LD (DE), A	;
248)   80A0 13          		 INC DE	;
249)   80A1 12          		 LD (DE), A	;
251)   80A2 D5          		 PUSH DE	;
252)   80A3 57          		 LD D, A	;
253)   80A4 5F          		 LD E, A	;
254)   80A5 CD 48 94    		 CALL LCD16_SETCURS       ;SET LCD TO LCDCX,LCDCY	;SET LCD TO LCDCX,LCDCY
255)   80A8 D1          		 POP DE	;
256)   80A9 1B          		 DEC DE         ;POSITION ON LCDCX	;POSITION ON LCDCX
257)   80AA 0E 00       		 LD C, 0        ;LCD POSITION COUNT	;LCD POSITION COUNT
258)   80AC 7E          		NBSETLP: LD A, (HL)	;
259)   80AD CB 7F       		 BIT 7, A        ;CHECK IF CURSOR HERE	;CHECK IF CURSOR HERE
260)   80AF 28 06       		 JR Z, NBNXT	;
261)   80B1 F5          		 PUSH AF	;
262)   80B2 79          		 LD A, C	;
263)   80B3 12          		 LD (DE), A        ;POSITION CURSOR	;POSITION CURSOR
264)   80B4 F1          		 POP AF	;
265)   80B5 CB BF       		 RES 7, A        ;CLEAR CHAR FROM CURSOR INFO	;CLEAR CHAR FROM CURSOR INFO
266)   80B7 CD 37 94    		NBNXT: CALL LCD16_PRCHR       ;OUTPUT CHAR TO LCD	;OUTPUT CHAR TO LCD
267)   80BA 2B          		 DEC HL	;
268)   80BB 0C          		 INC C	;
269)   80BC 10 EE       		 DJNZ NBSETLP        ;LOOP NEXT CHAR	;LOOP NEXT CHAR
270)   80BE 16 00       		 LD D, 0	;
271)   80C0 59          		 LD E, C	;
272)   80C1 CD 48 94    		 CALL LCD16_SETCURS       ;POSITION CURSOR	;POSITION CURSOR
273)   80C4 D1          		 POP DE	;
274)   80C5 C9          		 RET	;
278)   80C6 F5          		SOUTAS: PUSH AF        ;SERIAL PRINT ASCII IN DECIMAL	;SERIAL PRINT ASCII IN DECIMAL
279)   80C7 26 00       		 LD H, 0	;
280)   80C9 6F          		 LD L, A	;
281)   80CA 11 AF 00    		 LD DE, MYNUM	;
282)   80CD CD 9E 9A    		 CALL OUTASC	;
284)   80D0 3E 0A       		 LD A, 10	;
285)   80D2 12          		 LD (DE), A	;
286)   80D3 13          		 INC DE	;
287)   80D4 3E 0D       		 LD A, 13	;
288)   80D6 12          		 LD (DE), A	;
289)   80D7 13          		 INC DE	;
290)   80D8 AF          		 XOR A	;
291)   80D9 12          		 LD (DE), A	;
293)   80DA 21 AF 00    		 LD HL, MYNUM	;
294)   80DD CD 28 8B    		 CALL RS_TXT	;
295)   80E0 F1          		 POP AF	;
296)   80E1 C9          		 RET	;
299)   80E2 E5          		TVON: PUSH HL	;
300)   80E3 21 AB 00    		 LD HL, TVSTAT	;
301)   80E6 CB D6       		 SET 2, (HL)	;
302)   80E8 21 24 00    		 LD HL, 36	;
303)   80EB CB D6       		 SET 2, (HL)	;
304)   80ED E1          		 POP HL	;
305)   80EE 18 12       		 JR RESTV	;
308)   80F0 E5          		TVOFF: PUSH HL	;
309)   80F1 21 AB 00    		 LD HL, TVSTAT	;
310)   80F4 CB 96       		 RES 2, (HL)	;
311)   80F6 21 24 00    		 LD HL, 36	;
312)   80F9 CB 96       		 RES 2, (HL)	;
313)   80FB E1          		 POP HL	;
314)   80FC 18 04       		 JR RESTV	;
317)   80FE AF          		TVOFTM: XOR A         ;TV OFF	;TV OFF
318)   80FF D3 07       		 OUT (7), A	;
319)   8101 C9          		 RET	;
321)   8102 E5          		RESTV: PUSH HL	;
322)   8103 21 AB 00    		 LD HL, TVSTAT	;
323)   8106 7E          		 LD A, (HL)	;
324)   8107 D3 07       		 OUT (7), A	;
325)   8109 3E 05       		 LD A, 5	;
326)   810B D3 09       		 OUT (9), A        ; SET DISPLAY ADDRESS	; SET DISPLAY ADDRESS
327)   810D E1          		 POP HL	;
328)   810E C9          		 RET	;
331)   810F 5C 43 48 53 		FONTNAME1 DEFM "\CHSET4.CHR"	;
331)   8113 45 54 34 2E 		FONTNAME1 DEFM "\CHSET4.CHR"	;
331)   8117 43 48 52    		FONTNAME1 DEFM "\CHSET4.CHR"	;
332)   811A 00          		 DB 0	;
333)   811B 5C 43 48 53 		FONTNAME2 DEFM "\CHSET2.CHR"	;
333)   811F 45 54 32 2E 		FONTNAME2 DEFM "\CHSET2.CHR"	;
333)   8123 43 48 52    		FONTNAME2 DEFM "\CHSET2.CHR"	;
334)   8126 00          		 DB 0	;
336)   8127 06 02       		LOADFONTS: LD B,2  ;BANK2	;BANK2
337)   8129 3E 08       		 LD A,8   ;VIDEO PAGE FOR FONTS   	;VIDEO PAGE FOR FONTS
338)   812B CD D5 8A    		 CALL PUTPGINBANK  	;
339)   812E 21 0F 81    		 LD HL,FONTNAME1	;
340)   8131 01 B8 0B    		 LD BC,3000  ;MAX FILE SIZE	;MAX FILE SIZE
341)   8134 11 00 40    		 LD DE,$4000  ;0000 ON PAGE 8	;0000 ON PAGE 8
342)   8137 CD B4 8E    		 CALL STRG_LOADFILE	;
343)   813A 30 01       		 JR NC, LFFILOK	;
344)   813C 76          		 HALT   ;STOP EXEC	;STOP EXEC
345)   813D 21 1B 81    		LFFILOK: LD HL,FONTNAME2	;
346)   8140 01 B8 0B    		 LD BC,3000  ;MAX FILE SIZE	;MAX FILE SIZE
347)   8143 11 00 50    		 LD DE,$5000  ;1000h ON PAGE 8	;1000h ON PAGE 8
348)   8146 CD B4 8E    		 CALL STRG_LOADFILE  	;
349)   8149 30 01       		 JR NC, LFFILOK2	;
350)   814B 76          		 HALT   ;STOP EXEC	;STOP EXEC
351)   814C 3E 0E       		LFFILOK2: LD A,14  ;BANK 2 ON NBRAIN RESTORE PAGE 14	;BANK 2 ON NBRAIN RESTORE PAGE 14
352)   814E 06 02       		 LD B,2	;
353)   8150 CD D5 8A    		 CALL PUTPGINBANK	;
354)   8153 C9          		 RET 	;
357)   8154 15 02 00 18 		SCRDATA DB        $15,$02,$00,$18,$18,$28,$40,$20	;
357)   8158 18 28 40 20 		SCRDATA DB        $15,$02,$00,$18,$18,$28,$40,$20	;
358)   815C 00 02 00 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
358)   8160 00 00 0A 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
358)   8164 00 00 FF 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
358)   8168 AB 00 00 00 		 DB $00,$02,$00,$00,$00,$00,$0A,$00,$00,$00,$FF,$00,$AB,$00,$00,$00	;
359)   816C 00 B1       		 DB $00,$B1	;
361)   816E 21 54 81    		SETSCRDATA: LD HL,SCRDATA	;
362)   8171 11 68 02    		 LD DE,$268	;
363)   8174 01 1A 00    		 LD BC,26	;
364)   8177 ED B0       		 LDIR	;
365)   8179 21 5C 00    		 LD HL,$5C	;
366)   817C 36 68       		 LD (HL),$68  ;VIDEO START	;VIDEO START
367)   817E 23          		 INC HL	;
368)   817F 36 02       		 LD (HL),$02	;
369)   8181 C9          		 RET	;
373)   8182 F3          		START: DI	;
374)   8183 CD C8 87    		 CALL STNEWD        ;SET NEWDRIVERS AND DEFSTORE DEVICE	;SET NEWDRIVERS AND DEFSTORE DEVICE
376)   8186 CD F0 80    		 CALL TVOFF	;
381)   8189 3E 01       		 LD A, 1        ;1=115200 BPS	;1=115200 BPS
382)   818B CD 00 8B    		 CALL RS_INI        ;RS232 INITIALIZE	;RS232 INITIALIZE
383)   818E 21 BF 83    		 LD HL, STR00	;
384)   8191 CD 28 8B    		 CALL RS_TXT  	;
385)   8194 21 AC 83    		 LD HL, STRSCR	;
386)   8197 CD 28 8B    		 CALL RS_TXT	;
388)   819A CD AB 89    		 CALL PS2KBINIT  	;
390)   819D CD 5D 92    		 CALL I2C_INIT	;
391)   81A0 CD 53 95    		 CALL DS1307_INIT       ;	;
392)   81A3 CD C2 95    		 CALL DS1307_ADJUST_TEST      ;SET A DEFAULT DATETIME ON DS1307	;SET A DEFAULT DATETIME ON DS1307
393)   81A6 CD A3 93    		 CALL LCD16_INIT       ;LCD 16x2 Initialized	;LCD 16x2 Initialized
394)   81A9 21 1D 83    		 LD HL, STR0	;
395)   81AC CD 2D 94    		 CALL LCD16_PRINT	;
397)   81AF CD C3 96    		 CALL SND_INIT  	;
398)   81B2 CD 05 97    		 CALL SND_BEEP	;
399)   81B5 CD 0C 97    		 CALL SND_BEEP2	;
400)   81B8 CD 05 97    		 CALL SND_BEEP	;
411)   81BB CD 6E 81    		ALLOK: CALL SETSCRDATA	;
412)   81BE CD F8 83    		 CALL SCCLS        ;CLEAR SCREEN BUFFER  	;CLEAR SCREEN BUFFER
413)   81C1 21 2D 83    		 LD HL, STR02	;
414)   81C4 CD 38 84    		 CALL SCPRN        ;PRINT WAITING AT SCREEN BUFFER	;PRINT WAITING AT SCREEN BUFFER
416)   81C7 CD 27 81    		 CALL LOADFONTS       ;LOAD NEWBRAIN FONTS TO VIDEO RAM	;LOAD NEWBRAIN FONTS TO VIDEO RAM
417)   81CA CD E2 80    		 CALL TVON	;
419)   81CD CD E2 89    		 CALL PATCHCMDS       ;PATCH CD ROM TO IMPLEMENT OUR OWN COMMANDS	;PATCH CD ROM TO IMPLEMENT OUR OWN COMMANDS
422)   81D0 21 76 83    		 LD HL, STRMN	;
423)   81D3 CD 28 8B    		 CALL RS_TXT        ;OUTPUT MENU COMMANDS AT RS232	;OUTPUT MENU COMMANDS AT RS232
424)   81D6 21 D5 83    		 LD HL, STR01	;
425)   81D9 CD 28 8B    		 CALL RS_TXT        ;OUTPUT WAITING AT RS232	;OUTPUT WAITING AT RS232
427)   81DC CD 24 94    		 CALL LCD16_CLR	;
429)   81DF 21 2D 83    		 LD HL, STR02	;
430)   81E2 CD 2D 94    		 CALL LCD16_PRINT	;
432)   81E5 21 FE 82    		 LD HL, SMENU	;
433)   81E8 3E 02       		 LD A, 2	;
434)   81EA CD 38 84    		 CALL SCPRN	;
436)   81ED CD 0C 82    		 CALL GET_KBCHAR       ;TAKE A CHAR FROM RS232 OR PS2 KEYB	;TAKE A CHAR FROM RS232 OR PS2 KEYB
439)   81F0 FE 55       		 CP 'U'         ;UPLOAD PROGRAM	;UPLOAD PROGRAM
440)   81F2 CC 71 82    		 CALL Z, UPLOD	;
441)   81F5 FE 58       		 CP 'X'	;
442)   81F7 CA 54 82    		 JP Z, EXEC	;
443)   81FA FE 53       		 CP 'S'	;
444)   81FC CC D5 82    		 CALL Z, TXTSCR	;
445)   81FF FE 4E       		 CP 'N'	;
446)   8201 CA 33 82    		 JP Z, GONB        ;$E090	;$E090
447)   8204 FE 44       		 CP 'D'	;
448)   8206 CC BA 82    		 CALL Z, DNLOD	;
450)   8209 C3 D0 81    		 JP MENU	;
453)   820C AF          		GET_KBCHAR: XOR A	;
456)   820D CD 80 8B    		 CALL RS_KEYRD        ;CHAR IN RS232?	;CHAR IN RS232?
457)   8210 28 04       		 JR Z, GT_TST2	;
459)   8212 CD 50 8B    		 CALL RS_RX        ; GET THAT CHAR	; GET THAT CHAR
460)   8215 C9          		 RET	;
462)   8216 CD B1 89    		GT_TST2: CALL PS2KEYAVAIL      ;ZF=0 IF WE HAVE A KEY ELSE 1	;ZF=0 IF WE HAVE A KEY ELSE 1
463)   8219 20 F1       		 JR NZ, GET_KBCHAR       ;RECHECK	;RECHECK
464)   821B CD B6 89    		 CALL READKBCHAR	;
465)   821E B7          		 OR A	;
466)   821F CA 0C 82    		 JP Z,GET_KBCHAR	;
475)   8222 C9          		 RET	;
477)   8223 16 00       		LCDLN1: LD D, 0	;
478)   8225 1E 00       		 LD E, 0	;
479)   8227 CD 48 94    		 CALL LCD16_SETCURS  ; D HAS THE COLUMN E HAS THE ROW	; D HAS THE COLUMN E HAS THE ROW
480)   822A C9          		 RET	;
482)   822B 16 00       		LCDLN2: LD D, 0	;
483)   822D 1E 01       		 LD E, 1	;
484)   822F CD 48 94    		 CALL LCD16_SETCURS ; D HAS THE COLUMN E HAS THE ROW	; D HAS THE COLUMN E HAS THE ROW
485)   8232 C9          		 RET	;
489)   8233 21 E0 00    		GONB: LD HL,DIRNM	;
490)   8236 3E 2F       		 LD A,'/'	;
491)   8238 77          		 LD (HL),A	;
492)   8239 23          		 INC HL	;
493)   823A 36 00       		 LD (HL),0	;
494)   823C 23          		 INC HL	;
495)   823D 36 00       		 LD (HL),0	;
496)   823F CD 2B 82    		 CALL LCDLN2	;
497)   8242 21 ED 82    		 LD HL, DSPMES	;
498)   8245 CD 2D 94    		 CALL LCD16_PRINT	;
499)   8248 CD 57 94    		 CALL LCD16_CURSOFF       ;CURSOR OFF	;CURSOR OFF
500)   824B CD 81 94    		 CALL LCD16_BLINKON       ;BLINK ON	;BLINK ON
501)   824E AF          		 XOR A	;
502)   824F D3 E0       		 OUT (INTENB),A       ;ENABLE INTERRUPTS ON NB	;ENABLE INTERRUPTS ON NB
503)   8251 C3 15 A0    		 JP $A015	;
508)   8254 CD 24 94    		EXEC: CALL LCD16_CLR	;
509)   8257 CD 2B 82    		 CALL LCDLN2	;
510)   825A 21 54 83    		 LD HL, SPRGX	;
511)   825D CD 2D 94    		 CALL LCD16_PRINT	;
512)   8260 CD 23 82    		 CALL LCDLN1	;
514)   8263 3E 05       		 LD A, 5	;
515)   8265 CD 38 84    		 CALL SCPRN	;
517)   8268 11 A9 00    		 LD DE, PRGEX	;
518)   826B 1A          		 LD A, (DE)	;
519)   826C 6F          		 LD L, A	;
520)   826D 13          		 INC DE	;
521)   826E 1A          		 LD A, (DE)	;
522)   826F 67          		 LD H, A	;
523)   8270 E9          		 JP (HL)	;
526)   8271 21 47 83    		UPLOD: LD HL, DATST	;
527)   8274 CD 2B 82    		 CALL LCDLN2	;
528)   8277 CD 2D 94    		 CALL LCD16_PRINT	;
530)   827A CD 50 8B    		 CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
531)   827D 6F          		 LD L, A	;
532)   827E CD 50 8B    		 CALL RS_RX	;
533)   8281 67          		 LD H, A	;
534)   8282 CD 50 8B    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
535)   8285 4F          		 LD C, A	;
536)   8286 CD 50 8B    		 CALL RS_RX	;
537)   8289 47          		 LD B, A	;
539)   828A 11 A9 00    		 LD DE, PRGEX        ;SAVE TO PRGEX THE PROG EXEC ADDR=HL	;SAVE TO PRGEX THE PROG EXEC ADDR=HL
540)   828D 7D          		 LD A, L	;
541)   828E 12          		 LD (DE), A	;
542)   828F 13          		 INC DE	;
543)   8290 7C          		 LD A, H	;
544)   8291 12          		 LD (DE), A	;
546)   8292 FE 80       		 CP $80	;
547)   8294 28 02       		 JR Z, ROMWR	;
548)   8296 38 02       		 JR C, NORWR	;
550)   8298 D3 7C       		ROMWR: OUT (124), A       ;SET ROM WRITABLE = '0'     	;SET ROM WRITABLE = '0'
552)   829A E5          		NORWR: PUSH HL	;
553)   829B CD 50 8B    		NXB: CALL RS_RX	;
554)   829E 77          		 LD (HL), A	;
555)   829F 23          		 INC HL	;
556)   82A0 0B          		 DEC BC	;
557)   82A1 78          		 LD A, B	;
558)   82A2 B1          		 OR C	;
559)   82A3 20 F6       		 JR NZ, NXB        ;LOOP ALL BYTES	;LOOP ALL BYTES
561)   82A5 D3 7D       		 OUT (125), A        ;SET ROM NON WRITABLE ='1'	;SET ROM NON WRITABLE ='1'
563)   82A7 21 38 83    		 LD HL, DATTR	;
564)   82AA CD 24 94    		 CALL LCD16_CLR	;
565)   82AD CD 2D 94    		 CALL LCD16_PRINT	;
566)   82B0 3E 05       		 LD A, 5	;
567)   82B2 CD 38 84    		 CALL SCPRN	;
568)   82B5 CD 77 9A    		 CALL DELAY	;
570)   82B8 E1          		 POP HL	;
572)   82B9 C9          		 RET	;
579)   82BA CD 50 8B    		DNLOD: CALL RS_RX        ;HL HAS RAM ADDRESS	;HL HAS RAM ADDRESS
580)   82BD 6F          		 LD L, A	;
581)   82BE CD 50 8B    		 CALL RS_RX	;
582)   82C1 67          		 LD H, A	;
583)   82C2 CD 50 8B    		 CALL RS_RX        ;BC HAS TOTAL DATA TO BE SEND	;BC HAS TOTAL DATA TO BE SEND
584)   82C5 4F          		 LD C, A	;
585)   82C6 CD 50 8B    		 CALL RS_RX	;
586)   82C9 47          		 LD B, A	;
588)   82CA 7E          		NXB3: LD A, (HL)	;
589)   82CB CD 19 8B    		 CALL RS_TX        ;SEND BYTE	;SEND BYTE
590)   82CE 23          		 INC HL	;
591)   82CF 0B          		 DEC BC	;
592)   82D0 78          		 LD A, B	;
593)   82D1 B1          		 OR C	;
594)   82D2 20 F6       		 JR NZ, NXB3        ;LOOP ALL BYTES   	;LOOP ALL BYTES
595)   82D4 C9          		 RET	;
598)   82D5 21 60 83    		TXTSCR: LD HL, TXTMES        ;SCREEN START	;SCREEN START
599)   82D8 11 82 02    		 LD DE, TXTRAM	;
600)   82DB 01 15 00    		 LD BC, 21	;
601)   82DE ED B0       		 LDIR	;
603)   82E0 21 60 83    		 LD HL, TXTMES	;
604)   82E3 11 C2 02    		 LD DE, TXTRAM + 64       ;SCREEN START+64 40chars screen +24 excess	;SCREEN START+64 40chars screen +24 excess
605)   82E6 01 15 00    		 LD BC, 21	;
606)   82E9 ED B0       		 LDIR	;
608)   82EB AF          		 XOR A	;
609)   82EC C9          		 RET	;
612)   82ED 3C 3C 20 43 		DSPMES: DEFM "<< CDESP 2022 >>"	;
612)   82F1 44 45 53 50 		DSPMES: DEFM "<< CDESP 2022 >>"	;
612)   82F5 20 32 30 32 		DSPMES: DEFM "<< CDESP 2022 >>"	;
612)   82F9 32 20 3E 3E 		DSPMES: DEFM "<< CDESP 2022 >>"	;
613)   82FD 00          		 DB 0  	;
615)   82FE 55 3A 55 50 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   8302 2C 58 3A 52 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   8306 55 4E 2C 53 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   830A 3A 44 49 53 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   830E 50 2C 4E 3A 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   8312 4E 42 52 4F 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   8316 4D 2C 44 3A 		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
615)   831A 44 4E       		SMENU: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
616)   831C 00          		 DB 0 	;
618)   831D 4C 43 44 20 		STR0: DEFM "LCD INITIALIZED"	;
618)   8321 49 4E 49 54 		STR0: DEFM "LCD INITIALIZED"	;
618)   8325 49 41 4C 49 		STR0: DEFM "LCD INITIALIZED"	;
618)   8329 5A 45 44    		STR0: DEFM "LCD INITIALIZED"	;
619)   832C 00          		 DB 0	;
621)   832D 57 41 49 54 		STR02: DEFM "WAITING..."	;
621)   8331 49 4E 47 2E 		STR02: DEFM "WAITING..."	;
621)   8335 2E 2E       		STR02: DEFM "WAITING..."	;
622)   8337 00          		 DB 0	;
624)   8338 50 52 47 20 		DATTR: DEFM "PRG TRANSFERED"	;
624)   833C 54 52 41 4E 		DATTR: DEFM "PRG TRANSFERED"	;
624)   8340 53 46 45 52 		DATTR: DEFM "PRG TRANSFERED"	;
624)   8344 45 44       		DATTR: DEFM "PRG TRANSFERED"	;
625)   8346 00          		 DB 0	;
627)   8347 52 45 43 45 		DATST: DEFM "RECEIVING..."	;
627)   834B 49 56 49 4E 		DATST: DEFM "RECEIVING..."	;
627)   834F 47 2E 2E 2E 		DATST: DEFM "RECEIVING..."	;
628)   8353 00          		 DB 0	;
630)   8354 50 52 47 20 		SPRGX: DEFM "PRG EXECUTE"	;
630)   8358 45 58 45 43 		SPRGX: DEFM "PRG EXECUTE"	;
630)   835C 55 54 45    		SPRGX: DEFM "PRG EXECUTE"	;
631)   835F 00          		 DB 0	;
633)   8360 4E 45 57 42 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
633)   8364 52 41 49 4E 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
633)   8368 20 53 43 52 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
633)   836C 45 45 4E 20 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
633)   8370 52 45 41 44 		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
633)   8374 59          		TXTMES: DEFM "NEWBRAIN SCREEN READY"	;
634)   8375 00          		 DB 0	;
636)   8376 55 3A 55 50 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   837A 2C 58 3A 52 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   837E 55 4E 2C 53 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   8382 3A 44 49 53 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   8386 50 2C 4E 3A 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   838A 4E 42 52 4F 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   838E 4D 2C 44 3A 		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
636)   8392 44 4E       		STRMN: DEFM "U:UP,X:RUN,S:DISP,N:NBROM,D:DN"	;
637)   8394 0A 0D 00    		 DB 10,13,0	;
639)   8397 4E 45 57 42 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
639)   839B 52 41 49 4E 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
639)   839F 20 42 4F 4F 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
639)   83A3 54 45 44 20 		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
639)   83A7 4F 4B       		STRBT: DEFM "NEWBRAIN BOOTED OK"	;
640)   83A9 0A 0D 00    		 DB 10,13,0	;
642)   83AC 43 4C 45 41 		STRSCR: DEFM "CLEARING SCREEN."	;
642)   83B0 52 49 4E 47 		STRSCR: DEFM "CLEARING SCREEN."	;
642)   83B4 20 53 43 52 		STRSCR: DEFM "CLEARING SCREEN."	;
642)   83B8 45 45 4E 2E 		STRSCR: DEFM "CLEARING SCREEN."	;
643)   83BC 0A 0D 00    		 DB 10,13,0	;
645)   83BF 0A 0D       		STR00: DB 10,13	;
646)   83C1 52 53 32 33 		 DEFM "RS232 INITIALIZED"	;
646)   83C5 32 20 49 4E 		 DEFM "RS232 INITIALIZED"	;
646)   83C9 49 54 49 41 		 DEFM "RS232 INITIALIZED"	;
646)   83CD 4C 49 5A 45 		 DEFM "RS232 INITIALIZED"	;
646)   83D1 44          		 DEFM "RS232 INITIALIZED"	;
647)   83D2 0A 0D 00    		 DB 10,13,0	;
649)   83D5 0A 0D       		STR01: DB 10,13	;
650)   83D7 57 41 49 54 		 DEFM "WAITING..."	;
650)   83DB 49 4E 47 2E 		 DEFM "WAITING..."	;
650)   83DF 2E 2E       		 DEFM "WAITING..."	;
651)   83E1 0A 0D 00    		 DB 10,13,0	;
652)   83E4 00          		 DB 0	;
 14)   83E5 E5          		SCCLL: PUSH HL	;
 15)   83E6 F5          		 PUSH AF	;
 16)   83E7 21 57 84    		 LD HL, STCL4        ;40 LINE CLEAR	;40 LINE CLEAR
 17)   83EA CD 3B 84    		 CALL SCPRN1	;
 18)   83ED F1          		 POP AF	;
 19)   83EE E1          		 POP HL	;
 20)   83EF C9          		 RET	;
 23)   83F0 AF          		 XOR A         ;LINE 0	;LINE 0
 24)   83F1 21 64 85    		 LD HL, SCRDY	;
 25)   83F4 CD 38 84    		 CALL SCPRN	;
 26)   83F7 C9          		 RET	;
 30)   83F8 06 19       		SCCLS: LD B, 25	;
 31)   83FA AF          		 XOR A         ;; PRINT STR0 AT LINE 1	;; PRINT STR0 AT LINE 1
 32)   83FB C5          		 TSTLP1 PUSH BC	;
 33)   83FC CD E5 83    		 CALL SCCLL	;
 34)   83FF 3C          		 INC A         ; NEXT LINE	; NEXT LINE
 35)   8400 C1          		 POP BC	;
 36)   8401 10 F8       		 DJNZ TSTLP1	;
 37)   8403 CD F0 83    		 CALL SCMSG1	;
 38)   8406 C9          		 RET	;
 43)   8407 F5          		 PRNRGA PUSH AF	;
 44)   8408 06 08       		 LD B, 8	;
 45)   840A CB 07       		LPN5: RLC A         ; BIT 7 FIRST	; BIT 7 FIRST
 46)   840C F5          		 PUSH AF	;
 47)   840D 3E 00       		 LD A, 0	;
 48)   840F 30 02       		 JR NC, SKP5	;
 49)   8411 3E 01       		 LD A, 1	;
 50)   8413 C6 30       		 SKP5 ADD A, 48	;
 51)   8415 CD 1E 84    		 CALL PRNCL        ; PRINT A AT COL,LINE	; PRINT A AT COL,LINE
 52)   8418 1C          		 INC E	;
 53)   8419 F1          		 POP AF	;
 54)   841A 10 EE       		 DJNZ LPN5	;
 55)   841C F1          		 POP AF	;
 56)   841D C9          		 RET	;
 59)   841E E5          		PRNCL: PUSH HL	;
 60)   841F D5          		 PUSH DE	;
 61)   8420 F5          		 PUSH AF	;
 62)   8421 C5          		 PUSH BC	;
 63)   8422 21 82 02    		 LD HL, TXTRAM	;
 64)   8425 42          		 LD B, D        ; D HAS THE LINE	; D HAS THE LINE
 65)   8426 D5          		 PUSH DE	;
 66)   8427 11 40 00    		 LD DE, 40 + 24        ; FOR 40 COLUMN SCREEN	; FOR 40 COLUMN SCREEN
 67)   842A 19          		LPN2: ADD HL, DE	;
 68)   842B 10 FD       		 DJNZ LPN2	;
 69)   842D D1          		 POP DE	;
 70)   842E 43          		 LD B, E        ; E HAS THE COLUMN	; E HAS THE COLUMN
 71)   842F 23          		LPN3: INC HL	;
 72)   8430 10 FD       		 DJNZ LPN3	;
 73)   8432 77          		 LD (HL), A        ; A HAS THE CHAR TO PRINT	; A HAS THE CHAR TO PRINT
 74)   8433 C1          		 POP BC	;
 75)   8434 F1          		 POP AF	;
 76)   8435 D1          		 POP DE	;
 77)   8436 E1          		 POP HL	;
 78)   8437 C9          		 RET	;
 81)   8438 CD E5 83    		SCPRN: CALL SCCLL        ; CLEAR THE LINE	; CLEAR THE LINE
 82)   843B E5          		SCPRN1: PUSH HL	;
 83)   843C 21 82 02    		 LD HL, TXTRAM	;
 84)   843F FE 00       		 CP 0	;
 85)   8441 28 07       		 JR Z, SCSKIP        ;SKIP FOR LINE 0	;SKIP FOR LINE 0
 86)   8443 47          		 LD B, A	;
 87)   8444 11 40 00    		 LD DE, 40 + 24        ; FOR 40 COLUMN SCREEN	; FOR 40 COLUMN SCREEN
 88)   8447 19          		LPN1: ADD HL, DE	;
 89)   8448 10 FD       		 DJNZ LPN1	;
 90)   844A EB          		SCSKIP: EX DE, HL	;
 91)   844B E1          		 POP HL	;
 92)   844C 7E          		SCLP: LD A, (HL)	;
 93)   844D FE 00       		 CP 0	;
 94)   844F 28 05       		 JR Z SCEXT	;
 95)   8451 12          		 LD (DE), A	;
 96)   8452 23          		 INC HL	;
 97)   8453 13          		 INC DE	;
 98)   8454 18 F6       		 JR SCLP	;
 99)   8456 C9          		SCEXT: RET	;
101)   8457 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   845B 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   845F 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8463 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8467 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   846B 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   846F 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8473 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8477 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   847B 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   847F 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8483 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8487 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   848B 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   848F 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8493 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   8497 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   849B 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   849F 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84A3 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84A7 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84AB 20 20 20 20 		STCL4: DEFM "                                                                                         "	;
101)   84AF 20          		STCL4: DEFM "                                                                                         "	;
102)   84B0 00          		 DB 0	;
104)   84B1 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84B5 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84B9 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84BD 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84C1 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84C5 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84C9 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84CD 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84D1 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84D5 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84D9 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84DD 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84E1 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84E5 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84E9 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84ED 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84F1 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84F5 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84F9 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   84FD 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8501 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8505 20 20 20 20 		STCL8: DEFM "                                                                                         "	;
104)   8509 20          		STCL8: DEFM "                                                                                         "	;
105)   850A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   850E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8512 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8516 20 20 20 20 		 DEFM "                                                                                         "	;
105)   851A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   851E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8522 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8526 20 20 20 20 		 DEFM "                                                                                         "	;
105)   852A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   852E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8532 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8536 20 20 20 20 		 DEFM "                                                                                         "	;
105)   853A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   853E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8542 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8546 20 20 20 20 		 DEFM "                                                                                         "	;
105)   854A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   854E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8552 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8556 20 20 20 20 		 DEFM "                                                                                         "	;
105)   855A 20 20 20 20 		 DEFM "                                                                                         "	;
105)   855E 20 20 20 20 		 DEFM "                                                                                         "	;
105)   8562 20          		 DEFM "                                                                                         "	;
106)   8563 00          		 DB 0	;
108)   8564 53 43 52 45 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   8568 45 4E 20 52 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   856C 45 41 44 59 		SCRDY: DEFM "SCREEN READY!!!"	;
108)   8570 21 21 21    		SCRDY: DEFM "SCREEN READY!!!"	;
109)   8573 00          		 DB 0	;
 16)   8574 	            		 RBR EQU DEVSER+0       ;	;
 17)   8574 	            		 MCR EQU DEVSER+04	;
 18)   8574 	            		 LSR EQU DEVSER+05	;
 34)   8574 04          		 DEFB 4	;
 35)   8575 05          		 DEFB RS2OIN-$        ;OPEN IN	;OPEN IN
 36)   8576 04          		 DEFB RS2OOT-$        ;OPEN OUT	;OPEN OUT
 37)   8577 10          		 DEFB RS2INP-$        ;INPUT BYTE	;INPUT BYTE
 38)   8578 2A          		 DEFB RS2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
 39)   8579 0A          		 DEFB RS2CLS-$        ;CLOSE	;CLOSE
 51)   857A C5          		RS2OOT: PUSH BC        ;OPENOUT	;OPENOUT
 52)   857B 01 01 00    		 LD BC, 1        ;NO OF BYTES REQUIRED	;NO OF BYTES REQUIRED
 53)   857E E7 37       		 DEFW ZMKBUFF        ;	;
 54)   8580 C1          		 POP BC         ;	;
 55)   8581 D8          		 RET C         ;	;
 57)   8582 72          		 LD (HL), D        ;PORT NUMBER	;PORT NUMBER
 58)   8583 AF          		RS2CLS: XOR A         ; CLOSE STREAM	; CLOSE STREAM
 59)   8584 47          		 LD B A         ;	;
 60)   8585 4F          		 LD C A         ;	;
 61)   8586 C9          		 RET         ;	;
 71)   8587 F3          		RS2INP: DI         ;	;
 72)   8588 21 24 00    		 LD HL ENREGMAP        ;	;
 73)   858B CB 86       		 RES VIDEO, (HL)       ; NO VIDEO	; NO VIDEO
 74)   858D 7E          		 LD A, (HL)	;
 75)   858E D3 07       		 OUT (ENREG) A        ;	;
 76)   8590 3E 01       		 LD A, 1	;
 77)   8592 D3 24       		 OUT (MCR), A	;
 78)   8594 CD B2 85    		 CALL MWAIT        ;	;
 79)   8597 AF          		 XOR A         ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
 80)   8598 D3 24       		 OUT (MCR), A	;
 81)   859A DB 20       		 IN A, (RBR)        ;GET THE CHAR	;GET THE CHAR
 82)   859C CD 48 E5    		 CALL STOPTV        ;	;
 83)   859F FB          		 EI         ;	;
 84)   85A0 B7          		 OR A         ;	;
 85)   85A1 C9          		 RET	;
 88)   85A2 4F          		RS2OTP: LD C, A        ;	;
 94)   85A3 F3          		 DI         ;	;
 95)   85A4 CD 1C E2    		 CALL $E21C        ;NOVID ;	;NOVID ;
 96)   85A7 79          		 LD A, C	;
 97)   85A8 CD 07 80    		 CALL $8007        ;RSTX   ;SEND CHAR IN A	;RSTX   ;SEND CHAR IN A
 98)   85AB CD 48 E5    		 CALL STOPTV        ;	;
 99)   85AE FB          		 EI         ;	;
100)   85AF 2B          		 DEC HL         ;	;
101)   85B0 B7          		 OR A         ;	;
102)   85B1 C9          		 RET         ;	;
105)   85B2 21 00 64    		MWAIT: LD HL 25600	;
107)   85B5 DB 25       		MWAIT2: IN A, (LSR)	;
108)   85B7 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
109)   85B8 D8          		 RET C	;
110)   85B9 10 FA       		 DJNZ MWAIT2	;
111)   85BB DB 25       		 IN A, (LSR)	;
112)   85BD 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
113)   85BE D8          		 RET C	;
114)   85BF 2D          		 DEC L	;
115)   85C0 DB 25       		 IN A, (LSR)	;
116)   85C2 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
117)   85C3 D8          		 RET C	;
118)   85C4 C2 B5 85    		 JP NZ MWAIT2	;
119)   85C7 DB 25       		 IN A, (LSR)	;
120)   85C9 1F          		 RRA         ;check d0 ('DATA')	;check d0 ('DATA')
121)   85CA D8          		 RET C	;
122)   85CB 25          		 DEC H	;
123)   85CC DB 25       		 IN A, (LSR)	;
124)   85CE 1F          		 RRA	;
125)   85CF D8          		 RET C	;
126)   85D0 C2 B5 85    		 JP NZ, MWAIT2	;
127)   85D3 F1          		 POP AF         ;POP LAST RETURN ADDRESS FROM STACK	;POP LAST RETURN ADDRESS FROM STACK
128)   85D4 3E C8       		 LD A, 200        ;TIMEOUT ERROR	;TIMEOUT ERROR
129)   85D6 37          		 SCF	;
130)   85D7 C9          		 RET         ;RETURN TO BASIC WITH ERROR TIMEOUT	;RETURN TO BASIC WITH ERROR TIMEOUT
 26)   85D8 04          		 DEFB 4                                                          ;COUNT OF DISPLACEMENTS-1	;COUNT OF DISPLACEMENTS-1
 27)   85D9 18          		 DEFB SG2OIN-$        ;OPEN IN	;OPEN IN
 28)   85DA 1B          		 DEFB SG2OOT-$        ;OPEN OUT	;OPEN OUT
 29)   85DB 85          		 DEFB SG2INP-$        ;INPUT BYTE	;INPUT BYTE
 30)   85DC EF          		 DEFB SG2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
 31)   85DD 68          		 DEFB SG2CLS-$        ;CLOSE	;CLOSE
 34)   85DE 11 8B 00    		CPYFNAME:      LD DE,STRGBUFF	;
 35)   85E1 ED B0       		               LDIR	;
 36)   85E3 C9          		               RET	;
 40)   85E4 E5          		MKCAPS:        PUSH HL	;
 41)   85E5 7E          		MC_NXT:        LD A,(HL)	;
 42)   85E6 B7          		               OR A	;
 43)   85E7 28 06       		               JR Z,MC_EXIT	;
 44)   85E9 E7 2F       		               DEFW ZTTCAPS	;
 45)   85EB 77          		               LD (HL),A	;
 46)   85EC 23          		               INC HL	;
 47)   85ED 18 F6       		               JR MC_NXT	;
 48)   85EF E1          		MC_EXIT:       POP HL	;
 49)   85F0 C9          		               RET	;
 76)   85F1 3E 00       		SG2OIN: LD A,0        ;OPENIN	;OPENIN
 77)   85F3 18 02       		               JR SG2OPN	;
 80)   85F5 3E 01       		SG2OOT: LD A,1	;
 81)   85F7 E5          		SG2OPN:        PUSH HL	;
 82)   85F8 C5          		               PUSH BC        ;OPENOUT	;OPENOUT
 83)   85F9 F5          		               PUSH AF	;
 84)   85FA 01 10 02    		 LD BC, SPCNEED        ;NO OF BYTES REQUIRED	;NO OF BYTES REQUIRED
 85)   85FD E7 37       		 DEFW ZMKBUFF        ;	;
 86)   85FF D1          		               POP DE	;
 87)   8600 C1          		 POP BC                                 	;
 88)   8601 38 3F       		 JR C, ERREXIT                	;
 89)   8603 E5          		               PUSH HL                                                         ;SAVE START OF STRUCT	;SAVE START OF STRUCT
 90)   8604 7A          		               LD A,D	;
 92)   8605 77          		 LD (HL), A        ;OPEN TYPE	;OPEN TYPE
 93)   8606 23          		               INC HL	;
 94)   8607 36 00       		               LD (HL),0                                                       ;FILE POS ZERO	;FILE POS ZERO
 95)   8609 23          		               INC HL	;
 96)   860A 36 00       		               LD (HL),0	;
 97)   860C 23          		               INC HL	;
 98)   860D 36 00       		               LD (HL),0                                                     ;BUF POS 0 	;BUF POS 0
 99)   860F 23          		               INC HL	;
100)   8610 36 00       		               LD (HL),0	;
101)   8612 23          		               INC HL	;
102)   8613 E5          		               PUSH HL	;
103)   8614 C5          		               PUSH BC	;
104)   8615 01 14 00    		               LD BC,BYTREAD-FNAMEIX                                           ;SKIP FILENAME	;SKIP FILENAME
105)   8618 09          		               ADD HL,BC	;
106)   8619 C1          		               POP BC	;
107)   861A 36 00       		               LD (HL),0                                                       ;BYTES READ TO 0 	;BYTES READ TO 0
108)   861C 23          		               INC HL	;
109)   861D 36 00       		               LD (HL),0                                                     	;
110)   861F D1          		               POP DE                                                          ;DE AT FNAMEIX       	;DE AT FNAMEIX
111)   8620 DD E1       		               POP IX                                                          ;IX THE START OF STRUCT                	;IX THE START OF STRUCT
112)   8622 E1          		               POP HL                                                          ;HL THE FILE NAME	;HL THE FILE NAME
113)   8623 D5          		               PUSH DE                                                         ;SAVE THE START OF FILENAME        	;SAVE THE START OF FILENAME
114)   8624 ED B0       		               LDIR                                                            ;TRANSFER THE FNAME TO OUR STRUCT        	;TRANSFER THE FNAME TO OUR STRUCT
115)   8626 AF          		               XOR A	;
116)   8627 12          		               LD (DE),A                                                       ;NULL TERMINATED STRING	;NULL TERMINATED STRING
117)   8628 E1          		               POP HL                                                          ;START OF FNAME                	;START OF FNAME
118)   8629 CD E4 85    		               CALL MKCAPS                                                     ;make hl filename caps  	;make hl filename caps
119)   862C DD 7E 00    		               LD A,(IX)	;
120)   862F FE 00       		               CP 0	;
121)   8631 20 0D       		               JR NZ,SG2EX                                                      ;IF FILE OPEN OUT EXIT	;IF FILE OPEN OUT EXIT
123)   8633 01 00 00    		               LD BC,0	;
124)   8636 13          		               INC DE	;
125)   8637 CD 57 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR  	;OPEN UP TO CURRENT DIR
126)   863A CD B4 8E    		               CALL STRG_LOADFILE	;
127)   863D 3E 96       		               LD A,ERROPF                                                     ;ERROR NO IF FILE ERROR	;ERROR NO IF FILE ERROR
128)   863F D8          		               RET C	;
129)   8640 AF          		SG2EX:         XOR A	;
130)   8641 C9          		               RET	;
133)   8642 E1          		ERREXIT:       POP HL	;
134)   8643 37          		               SCF	;
135)   8644 C9          		               RET	;
137)   8645 7E          		SG2CLS: LD A,(HL)	;
138)   8646 FE 01       		               CP 1                                                            ;CHECK IF OPENOUT	;CHECK IF OPENOUT
139)   8648 20 12       		               JR NZ,SCL_EX	;
146)   864A DD E5       		               PUSH IX	;
147)   864C E5          		               PUSH HL	;
148)   864D DD E1       		               POP IX	;
149)   864F 01 05 00    		               LD BC,FNAMEIX	;
150)   8652 09          		               ADD HL,BC	;
151)   8653 DD 4E 03    		               LD C,(IX+BUFFOFS)	;
152)   8656 DD 46 04    		               LD B,(IX+BUFFOFS+1)	;
153)   8659 CD FA 86    		               CALL SO_STFILE	;
154)   865C AF          		SCL_EX:        XOR A         ; CLOSE STREAM	; CLOSE STREAM
155)   865D 47          		 LD B A         ;	;
156)   865E 4F          		 LD C A         ;	;
157)   865F C9          		 RET         ;	;
164)   8660 DD E5       		SG2INP:        PUSH IX	;
165)   8662 CD 68 86    		               CALL SG2INP2	;
166)   8665 DD E1       		               POP IX	;
167)   8667 C9          		               RET	;
169)   8668 7E          		SG2INP2:       LD A,(HL)	;
170)   8669 FE 00       		               CP 0	;
171)   866B 3E 9B       		               LD A,ERRTRA	;
172)   866D 37          		               SCF	;
173)   866E C0          		               RET NZ                                                          ;IF NOT INPUT THEN ERROR                	;IF NOT INPUT THEN ERROR
174)   866F CD 25 87    		               CALL SGCHKEOF                                                   ;TEST EOF	;TEST EOF
175)   8672 23          		               INC HL                	;
176)   8673 E5          		               PUSH HL                                                         ;SAVE OFFSET POS	;SAVE OFFSET POS
177)   8674 4E          		               LD C,(HL)	;
178)   8675 23          		               INC HL	;
179)   8676 46          		               LD B,(HL)                                                       ;BC THE FILE OFFS	;BC THE FILE OFFS
180)   8677 23          		               INC HL	;
181)   8678 5E          		               LD E,(HL)	;
182)   8679 23          		               INC HL	;
183)   867A 56          		               LD D,(HL)                                                       ;DE THE BUFFER OFFS	;DE THE BUFFER OFFS
184)   867B 23          		               INC HL                                                          ;NOW ON FILENAME OFFS	;NOW ON FILENAME OFFS
186)   867C 3E 97       		               LD A,ERREOF	;
187)   867E DA 42 86    		               JP C,ERREXIT                                                    ;ON C EOF REACHED                	;ON C EOF REACHED
188)   8681 28 0E       		               JR Z,RDFMFILE                                                   ;ON Z=EOB READ FROM FILE	;ON Z=EOB READ FROM FILE
197)   8683 01 16 00    		RDFMBUFF:      LD BC,FBUFFIX-FNAMEIX                                           ;500 BYTES BUFFER OFFSET	;500 BYTES BUFFER OFFSET
198)   8686 09          		               ADD HL,BC                                                       ;HL ON BUFFER        	;HL ON BUFFER
199)   8687 19          		               ADD HL,DE                                                       ;HL ON NXT BYTE INSIDE BUFFER	;HL ON NXT BYTE INSIDE BUFFER
201)   8688 7E          		               LD A,(HL)                                                       ;READ BYTE TO A                	;READ BYTE TO A
202)   8689 E1          		               POP HL                                                          ;HL AT THE FILE OFFSET	;HL AT THE FILE OFFSET
203)   868A 23          		               INC HL	;
204)   868B 23          		               INC HL                                                          ;AT THE BUFFER OFFSET	;AT THE BUFFER OFFSET
205)   868C 13          		               INC DE                                                          ;POINT TO NEXT BYTE	;POINT TO NEXT BYTE
206)   868D 73          		               LD (HL),E                                                       ;SAVE 	;SAVE
207)   868E 23          		               INC HL	;
208)   868F 72          		               LD (HL),D	;
209)   8690 C9          		               RET	;
210)   8691 E5          		RDFMFILE:      PUSH HL                                                         ;HL FILENAME        	;HL FILENAME
211)   8692 D1          		               POP DE                                                          ;DE FILENAME	;DE FILENAME
212)   8693 EB          		               EX DE,HL	;
213)   8694 C5          		               PUSH BC	;
214)   8695 01 16 00    		               LD BC,FBUFFIX-FNAMEIX                                           ;500 BYTES BUFFER OFFSET	;500 BYTES BUFFER OFFSET
215)   8698 09          		               ADD HL,BC	;
216)   8699 C1          		               POP BC	;
217)   869A EB          		               EX DE,HL                                                        ;HL TO FNAME OFFSET, DE TO BUFFER OFFSET	;HL TO FNAME OFFSET, DE TO BUFFER OFFSET
220)   869B D5          		               PUSH DE                                                         ;BC THE FILE OFFSET TO READ FROM	;BC THE FILE OFFSET TO READ FROM
223)   869C CD 57 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR                                                                                	;OPEN UP TO CURRENT DIR
224)   869F CD 34 8F    		               CALL STRG_READBUFR                                              ;READ 500 BYTES FROM FILE TO BUFFER BC= BYTES READ	;READ 500 BYTES FROM FILE TO BUFFER BC= BYTES READ
225)   86A2 D1          		               POP DE                                                          ;THE BUFFER TO READ THE BYTE	;THE BUFFER TO READ THE BYTE
226)   86A3 3E 98       		               LD A,ERRRDF                                                     ;ERROR CODE CAN'T READ FROM FILE	;ERROR CODE CAN'T READ FROM FILE
227)   86A5 DA 42 86    		               JP C,ERREXIT	;
229)   86A8 E1          		               POP HL                                                          ;GET FILE OFFSET POS ADDR	;GET FILE OFFSET POS ADDR
230)   86A9 D5          		               PUSH DE                                                         ;SAVE START OF BUFFER	;SAVE START OF BUFFER
231)   86AA EB          		               EX DE,HL                                                        ;DE THE OFFSET ADDR	;DE THE OFFSET ADDR
232)   86AB 1A          		               LD A,(DE)                                                       ;OFFSET OF FILE 	;OFFSET OF FILE
233)   86AC 6F          		               LD L,A	;
234)   86AD 13          		               INC DE	;
235)   86AE 1A          		               LD A,(DE)	;
236)   86AF 67          		               LD H,A	;
237)   86B0 09          		               ADD HL,BC                                                       ;ADD NEW READ BYTES TO PREVIOUS OFFSET	;ADD NEW READ BYTES TO PREVIOUS OFFSET
238)   86B1 EB          		               EX DE,HL                                                        ;HL THE OFFSET ADDR, DE THE NEW OFFSET	;HL THE OFFSET ADDR, DE THE NEW OFFSET
239)   86B2 72          		               LD (HL),D                                                       ;SAVE BACK	;SAVE BACK
240)   86B3 2B          		               DEC HL	;
241)   86B4 73          		               LD (HL),E	;
242)   86B5 23          		               INC HL	;
243)   86B6 23          		               INC HL                                                          ;TO THE BUF OFFSET 	;TO THE BUF OFFSET
244)   86B7 3E 01       		               LD A,1	;
245)   86B9 77          		               LD (HL),A                                                       ;SET THE BUF OFFS TO 1	;SET THE BUF OFFS TO 1
246)   86BA 23          		               INC HL	;
247)   86BB AF          		               XOR A	;
248)   86BC 77          		               LD (HL),A     	;
249)   86BD 23          		               INC HL                                                  	;
252)   86BE C5          		               PUSH BC	;
253)   86BF 01 14 00    		               LD BC,20	;
254)   86C2 09          		               ADD HL,BC                                                       ;NOW AT BYTREAD	;NOW AT BYTREAD
255)   86C3 C1          		               POP BC	;
256)   86C4 71          		               LD (HL),C                                                       ;SAVE BYTES READ FROM FILE	;SAVE BYTES READ FROM FILE
257)   86C5 23          		               INC HL	;
258)   86C6 70          		               LD (HL),B	;
259)   86C7 D1          		               POP DE                                                          ;GET START OF BUFFER	;GET START OF BUFFER
260)   86C8 AF          		               XOR A                                                           ;CLEAR CARRY FLAG	;CLEAR CARRY FLAG
261)   86C9 1A          		               LD A,(DE)                                                       ;READ THE 1ST BYTE TO A	;READ THE 1ST BYTE TO A
262)   86CA C9          		               RET	;
271)   86CB DD E5       		SG2OTP:        PUSH IX	;
272)   86CD E5          		               PUSH HL	;
273)   86CE DD E1       		               POP IX	;
274)   86D0 57          		               LD D,A                                                          ;SAVE BYTE TO BE WRITTEN	;SAVE BYTE TO BE WRITTEN
275)   86D1 7E          		               LD A,(HL)	;
276)   86D2 FE 00       		               CP 0	;
277)   86D4 3E 9B       		               LD A,ERRTRA	;
278)   86D6 37          		               SCF	;
279)   86D7 28 47       		               JR Z,SO_EX	;
280)   86D9 7A          		               LD A,D                                                          ;RESTORE A BYTE TO WRITE	;RESTORE A BYTE TO WRITE
281)   86DA 01 05 00    		               LD BC,FNAMEIX	;
282)   86DD 09          		               ADD HL,BC                	;
283)   86DE DD E5       		               PUSH IX	;
284)   86E0 D1          		               POP DE	;
285)   86E1 EB          		               EX DE,HL	;
286)   86E2 01 1B 00    		               LD BC,FBUFFIX	;
287)   86E5 09          		               ADD HL,BC                	;
288)   86E6 DD 4E 03    		               LD C,(IX+BUFFOFS)	;
289)   86E9 DD 46 04    		               LD B,(IX+BUFFOFS+1)	;
290)   86EC 09          		               ADD HL,BC	;
291)   86ED EB          		               EX DE,HL                                	;
292)   86EE 12          		               LD (DE),A	;
294)   86EF 79          		               LD A,C	;
295)   86F0 FE F3       		               CP $F3                                                          ;499 WE START AT 0  	;499 WE START AT 0
296)   86F2 20 25       		               JR NZ,SO_BUFFNXT	;
297)   86F4 78          		               LD A,B	;
298)   86F5 FE 01       		               CP $01	;
299)   86F7 20 20       		               JR NZ,SO_BUFFNXT	;
300)   86F9 03          		               INC BC                                                          ;500	;500
308)   86FA EB          		 SO_STFILE:    EX DE,HL	;
309)   86FB DD E5       		               PUSH IX	;
310)   86FD E1          		               POP HL	;
311)   86FE C5          		               PUSH BC	;
312)   86FF 01 1B 00    		               LD BC,FBUFFIX	;
313)   8702 09          		               ADD HL,BC	;
314)   8703 C1          		               POP BC	;
315)   8704 EB          		               EX DE,HL	;
318)   8705 CD 57 8C    		               CALL STRG_OPENCDIR ;OPEN UP TO CURRENT DIR	;OPEN UP TO CURRENT DIR
319)   8708 CD 8E 90    		               CALL STRG_WRITEBUFR                             ;WRITES 500 BYTES FROM BUFFER DE TO THE END OF THE FILE	;WRITES 500 BYTES FROM BUFFER DE TO THE END OF THE FILE
320)   870B 3E 96       		               LD A,ERROPF	;
321)   870D 38 06       		               JR C,SO_ERROUT	;
322)   870F 3E 99       		               LD A,ERRWTF	;
323)   8711 37          		               SCF	;
324)   8712 20 01       		               JR NZ,SO_ERROUT	;
325)   8714 AF          		               XOR A	;
326)   8715 01 00 00    		SO_ERROUT:     LD BC,0                                         ;ZERO BUFFER OFFSET	;ZERO BUFFER OFFSET
327)   8718 16          		               DB $16                                          ;SKIP INC BC LD D,NN	;SKIP INC BC LD D,NN
328)   8719 03          		SO_BUFFNXT:    INC BC                                          	;
329)   871A DD 71 03    		               LD (IX+BUFFOFS),C	;
330)   871D DD 70 04    		               LD (IX+BUFFOFS+1),B	;
331)   8720 DD E1       		SO_EX          POP IX	;
332)   8722 FE 00       		               CP 0	;
333)   8724 C9          		               RET	;
340)   8725 DD E5       		SGCHKEOF:      PUSH IX	;
341)   8727 D5          		               PUSH DE	;
342)   8728 C5          		               PUSH BC	;
344)   8729 E5          		               PUSH HL	;
345)   872A DD E1       		               POP IX	;
346)   872C DD 5E 03    		               LD E,(IX+BUFFOFS)	;
347)   872F DD 56 04    		               LD D,(IX+BUFFOFS+1)	;
348)   8732 DD 4E 19    		               LD C,(IX+BYTREAD)	;
349)   8735 DD 46 1A    		               LD B,(IX+BYTREAD+1)	;
351)   8738 78          		               LD A,B	;
352)   8739 B1          		               OR C	;
353)   873A 3E 03       		               LD A,3	;
354)   873C 28 1C       		               JR Z, SGEFEXIT                                                  ;Z=EOB	;Z=EOB
355)   873E EB          		               EX DE,HL                                                        ;SAVE HL SET HL=DE	;SAVE HL SET HL=DE
356)   873F B7          		               OR A	;
357)   8740 ED 42       		               SBC HL,BC	;
358)   8742 7C          		               LD A,H	;
359)   8743 B5          		               OR L	;
360)   8744 EB          		               EX DE,HL                                                        ;RESTORE HL	;RESTORE HL
361)   8745 3E 01       		               LD A,1                                                          ;NO EOF NO EOB = NZ	;NO EOF NO EOB = NZ
362)   8747 20 11       		               JR NZ,SGEFEXIT	;
364)   8749 78          		               LD A,B	;
365)   874A D6 01       		               SUB $01	;
366)   874C 20 09       		               JR NZ, SGDOEOF	;
367)   874E 79          		               LD A,C	;
368)   874F D6 F4       		               SUB $F4	;
369)   8751 20 04       		               JR NZ, SGDOEOF	;
370)   8753 3E 02       		               LD A,2                                                          ;Z MEANS EOB END OF BUFFER                	;Z MEANS EOB END OF BUFFER
371)   8755 18 03       		               JR  SGEFEXIT	;
373)   8757 3E 97       		SGDOEOF:       LD A,ERREOF                                                           ;RETURN 0 ON EOF	;RETURN 0 ON EOF
374)   8759 37          		               SCF         	;
375)   875A C1          		SGEFEXIT:      POP BC	;
376)   875B D1          		               POP DE	;
377)   875C DD E1       		               POP IX	;
378)   875E C9          		               RET	;
381)   875F E5          		PRNHL:         PUSH HL	;
382)   8760 C5          		               PUSH BC	;
383)   8761 D5          		               PUSH DE	;
384)   8762 CD 49 9B    		 CALL B2D16	;
385)   8765 21 CB 00    		 LD HL,B2DBUF	;
386)   8768 CD DD 9B    		 CALL SKIPSPC	;
387)   876B CD 28 8B    		 CALL RS_TXT	;
388)   876E D1          		               POP DE	;
389)   876F C1          		               POP BC	;
390)   8770 E1          		               POP HL	;
391)   8771 C9          		               RET	;
393)   8772 E5          		PRINTDBG:      PUSH HL	;
394)   8773 C5          		               PUSH BC	;
395)   8774 D5          		               PUSH DE	;
396)   8775 F5          		               PUSH AF	;
398)   8776 CD 5F 87    		               CALL PRNHL	;
399)   8779 D5          		               PUSH DE	;
400)   877A C5          		               PUSH BC	;
401)   877B CD 26 80    		 CALL OS_PRINTMSG	;
402)   877E 20 48 4C    		 DEFM " HL"	;
403)   8781 0A 0D 00    		 DB 10,13,0	;
404)   8784 C1          		               POP BC	;
405)   8785 D1          		               POP DE	;
407)   8786 D5          		               PUSH DE	;
408)   8787 E1          		               POP HL	;
409)   8788 CD 5F 87    		               CALL PRNHL	;
410)   878B D5          		               PUSH DE	;
411)   878C C5          		               PUSH BC	;
412)   878D CD 26 80    		 CALL OS_PRINTMSG	;
413)   8790 20 44 45    		 DEFM " DE"	;
414)   8793 0A 0D 00    		 DB 10,13,0	;
415)   8796 C1          		               POP BC	;
416)   8797 D1          		               POP DE	;
418)   8798 C5          		               PUSH BC	;
419)   8799 E1          		               POP HL	;
420)   879A CD 5F 87    		               CALL PRNHL	;
421)   879D D5          		               PUSH DE	;
422)   879E C5          		               PUSH BC	;
423)   879F CD 26 80    		 CALL OS_PRINTMSG	;
424)   87A2 20 42 43    		 DEFM " BC"	;
425)   87A5 0A 0D 00    		 DB 10,13,0	;
426)   87A8 C1          		               POP BC	;
427)   87A9 D1          		               POP DE	;
430)   87AA F1          		               POP AF	;
431)   87AB D1          		               POP DE	;
432)   87AC C1          		               POP BC	;
433)   87AD E1          		               POP HL	;
434)   87AE C9          		               RET	;
438)   87AF F5          		CLRBUFR:       PUSH AF	;
439)   87B0 E5          		               PUSH HL	;
440)   87B1 D5          		               PUSH DE	;
441)   87B2 C5          		               PUSH BC	;
442)   87B3 AF          		               XOR A	;
443)   87B4 12          		               LD (DE),A	;
444)   87B5 D5          		               PUSH DE	;
445)   87B6 E1          		               POP HL	;
446)   87B7 13          		               INC DE	;
447)   87B8 01 F3 01    		               LD BC,499	;
448)   87BB ED B0       		               LDIR        	;
449)   87BD C1          		               POP BC	;
450)   87BE D1          		               POP DE	;
451)   87BF E1          		               POP HL	;
452)   87C0 F1          		               POP AF	;
453)   87C1 C9          		               RET	;
458)   87C2 04          		 DEFB 4                                                          ;COUNT OF DISPLACEMENTS-1	;COUNT OF DISPLACEMENTS-1
459)   87C3 2E          		 DEFB SG2OIN-$        ;OPEN IN	;OPEN IN
460)   87C4 31          		 DEFB SG2OOT-$        ;OPEN OUT	;OPEN OUT
461)   87C5 9B          		 DEFB SG2INP-$        ;INPUT BYTE	;INPUT BYTE
462)   87C6 05          		 DEFB SG2OTP-$        ;OUTPUT BYTE	;OUTPUT BYTE
463)   87C7 7E          		 DEFB SG2CLS-$        ;CLOSE	;CLOSE
 19)   87C8 21 58 00    		STNEWD: LD HL, $58        ;DEVTAB	;DEVTAB
 20)   87CB 11 D8 87    		 LD DE, DEVTAB        ; NEW TABLE SET	; NEW TABLE SET
 21)   87CE 73          		 LD (HL), E	;
 22)   87CF 23          		 INC HL	;
 23)   87D0 72          		 LD (HL), D	;
 24)   87D1 21 13 00    		 LD HL, DEFSTOR	;
 25)   87D4 3E 0C       		 LD A, 12        ;DEFAULT STORE DEVICE IS 12 NB STORAGE MODULE	;DEFAULT STORE DEVICE IS 12 NB STORAGE MODULE
 26)   87D6 77          		 LD (HL), A	;
 27)   87D7 C9          		 RET	;
 31)   87D8 11          		DEVTAB: DEFB 17        ;number of entries ;number of entries	;number of entries ;number of entries
 32)   87D9 83 E6       		 DEFW TVIO        ;	;
 33)   87DB EE ED       		 DEFW TP1IO        ;	;
 34)   87DD F4 ED       		 DEFW TP2IO        ;	;
 35)   87DF 50 E6       		 DEFW LIIO        ;	;
 36)   87E1 75 E6       		 DEFW TLIO        ;	;
 37)   87E3 36 A1       		 DEFW NKBWIO        ;	;
 38)   87E5 1A A1       		 DEFW NKBIIO        ;	;
 39)   87E7 1F E4       		 DEFW UPIO        ;	;
 40)   87E9 3C E4       		 DEFW LPIO        ;	;
 41)   87EB 2F E4       		 DEFW JGIO        ;	;
 42)   87ED 19 E4       		 DEFW DUMMY        ;	;
 43)   87EF 96 A5       		 DEFW GRAPH        ;  	;
 44)   87F1 D8 85       		               DEFW SG2IO        ;MY STORAGE DEVICE 13 BDISCIO BINARY SERIAL	;MY STORAGE DEVICE 13 BDISCIO BINARY SERIAL
 45)   87F3 D8 85       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 14 TDISCIO SAME AS 13 FOR ME	;MY STORAGE DEVICE 14 TDISCIO SAME AS 13 FOR ME
 46)   87F5 D8 85       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 15 RDISCIO RANDOM ACCESS	;MY STORAGE DEVICE 15 RDISCIO RANDOM ACCESS
 47)   87F7 D8 85       		               DEFW SG2IO                                                      ;MY STORAGE DEVICE 16 SDISCIO DIR COMMANDS	;MY STORAGE DEVICE 16 SDISCIO DIR COMMANDS
 48)   87F9 74 85       		               DEFW RS2IO        ;MY SERIAL DEVICE 17	;MY SERIAL DEVICE 17
  6)   87FB FE 00       		 CP 0	;
  7)   87FD C8          		 RET Z	;
  8)   87FE CD A2 88    		 CALL NBLOOKASC	;
  9)   8801 C9          		 RET	;
 12)   8802 21 20 88    		NBLOOK: LD HL, NBTAB	;
 13)   8805 06 00       		 LD B, 0	;
 14)   8807 4F          		 LD C, A	;
 15)   8808 09          		 ADD HL, BC	;
 16)   8809 7E          		 LD A, (HL)	;
 17)   880A FE 00       		 CP 0	;
 18)   880C C8          		 RET Z	;
 19)   880D 21 80 00    		 LD HL, KEYCTR        ;BIT 6=SHIFT BIT 7=CTRL  BIT 6+7=GRPH	;BIT 6=SHIFT BIT 7=CTRL  BIT 6+7=GRPH
 20)   8810 CB 6E       		 BIT 5, (HL)	;
 21)   8812 28 04       		 JR Z, NOGRPH	;
 22)   8814 06 C0       		 LD B, 192        ;SET BIT 6 AND 7	;SET BIT 6 AND 7
 23)   8816 18 06       		 JR NBLKEX	;
 24)   8818 4F          		NOGRPH: LD C, A	;
 25)   8819 7E          		 LD A, (HL)	;
 26)   881A E6 C0       		 AND 11000000	;
 27)   881C 47          		 LD B, A	;
 28)   881D 79          		 LD A, C	;
 29)   881E B0          		NBLKEX: OR B	;
 30)   881F C9          		 RET	;
 32)   8820 00 00 00 00 		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 32)   8824 00 00 00 00 		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 32)   8828 00 00       		NBTAB: DB 0,0,0,0,0,0,0,0,0,0       ;  0-  9	;  0-  9
 33)   882A 00 00 00 A4 		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 33)   882E 00 00 00 00 		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 33)   8832 00 00       		 DB 0,0,0,36+128,0,0,0,0,0,0      ; 10- 19 0,0,0,TAB	; 10- 19 0,0,0,TAB
 34)   8834 00 0E 09 00 		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 34)   8838 00 00 3C 2D 		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 34)   883C 2E 0D       		 DB 0,14,9,0,0,0,60,45,46,13      ; 20- 29	; 20- 29
 35)   883E 08 00 00 3A 		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 35)   8842 3B 2C 0C 06 		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 35)   8846 07 00       		 DB 8,0,0,58,59,44,12,6,7,0      ; 30- 39	; 30- 39
 36)   8848 00 0F 39 2B 		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 36)   884C 0A 0B 05 00 		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 36)   8850 00 34       		 DB 0,15,57,43,10,11,5,0,0,52      ; 40- 49	; 40- 49
 37)   8852 38 29 2A 25 		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 37)   8856 04 00 00 00 		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 37)   885A 35 33       		 DB 56,41,42,37,4,0,0,0,53,51      ; 50- 59	; 50- 59
 38)   885C 23 03 13 00 		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 38)   8860 00 36 3E 24 		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 38)   8864 26 15       		 DB 35,3,19,0,0,54,62,36,38,21      ; 60- 69	; 60- 69
 39)   8866 14 00 00 37 		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 39)   886A 2F 27 28 1A 		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 39)   886E 1C 00       		 DB 20,0,0,55,47,39,40,26,28,0      ; 70- 79	; 70- 79
 40)   8870 00 00 43 00 		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 40)   8874 56 1B 00 00 		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 40)   8878 00 00       		 DB 0,0,67,0,86,27,0,0,0,0      ; 80- 89	; 80- 89
 41)   887A 1E 00 00 00 		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 41)   887E 00 00 00 00 		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 41)   8882 00 00       		 DB 30,0,0,0,0,0,0,0,0,0      ; 90- 99	; 90- 99
 42)   8884 00 00 40 00 		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 42)   8888 00 9A 00 02 		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 42)   888C 3F 00       		 DB 0,0,64,0,0,26+128,0,2,63,0      ;100-109  0,0,64,0,0,END	;100-109  0,0,64,0,0,END
 43)   888E 00 00 3D A5 		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 43)   8892 22 00 12 32 		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 43)   8896 1F 19       		 DB 0,0,61,37+128,34,0,18,50,31,25     ;110-119  0,0,INS,DEL	;110-119  0,0,INS,DEL
 44)   8898 00 1D 07 1C 		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 44)   889C 18 14 00 00 		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 44)   88A0 00 00       		 DB 0,29,7,28,24,20,0,0,0,0      ;120-129	;120-129
 47)   88A2 21 AB 88    		NBLOOKASC:     LD HL, NBRSTAB	;
 48)   88A5 06 00       		 LD B, 0	;
 49)   88A7 4F          		 LD C, A	;
 50)   88A8 09          		 ADD HL, BC	;
 51)   88A9 7E          		 LD A, (HL)	;
 52)   88AA C9          		 RET	;
 55)   88AB 00 3D 52 12 		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 55)   88AF 02 00 40 00 		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 55)   88B3 40 9B       		NBRSTAB:      DB 0,61,18+64,18,2,0,64,0,64,27+128    ;  0-  9	;  0-  9
 56)   88B5 22 32 00 1E 		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 56)   88B9 00 00 00 00 		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 56)   88BD 00 00       		 DB 34,50,0,30,0,0,0,0,0,0     ; 10- 19 	; 10- 19
 57)   88BF 00 00 00 00 		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 57)   88C3 00 00 00 1F 		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 57)   88C7 9C 9D       		 DB 0,0,0,0,0,0,0,31,28+128,29+128    ; 20- 29	; 20- 29
 58)   88C9 00 00 0F 49 		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 58)   88CD 48 47 46 45 		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 58)   88D1 00 43       		 DB 0,0,15,9+64,8+64,7+64,6+64,5+64,0,3+64          ; 30- 39  	; 30- 39
 59)   88D3 16 17 18 1D 		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 59)   88D7 36 1C 37 2F 		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 59)   88DB 15 09       		 DB 22,23,24,29,54,28,55,47,21,9     ; 40- 49	; 40- 49
 60)   88DD 08 07 06 05 		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 60)   88E1 04 03 13 14 		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 60)   88E5 68 28       		 DB 8,7,6,5,4,3,19,20,40+64,40             ; 50- 59	; 50- 59
 61)   88E7 00 1B 00 6F 		 DB 0,27,0,47+64,0,46+64,56+64,58+64,44+64,12+64   ; 60- 69	; 60- 69
 61)   88EB 00 6E 78 7A 		 DB 0,27,0,47+64,0,46+64,56+64,58+64,44+64,12+64   ; 60- 69	; 60- 69
 61)   88EF 6C 4C       		 DB 0,27,0,47+64,0,46+64,56+64,58+64,44+64,12+64   ; 60- 69	; 60- 69
 62)   88F1 6B 6A 69 64 		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 62)   88F5 73 7E 67 75 		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 62)   88F9 74 66       		 DB 43+64,42+64,41+64,36+64,51+64,62+64,39+64,53+64,52+64,38+64 ; 70- 79	; 70- 79
 63)   88FB 5A 4E 4B 6D 		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 63)   88FF 4A 63 79 4D 		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 63)   8903 7B 65       		 DB 26+64,14+64,11+64,45+64,10+64,35+64,57+64,13+64,59+64,37+64 ; 80- 89	; 80- 89
 64)   8905 7C 56 5C 57 		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 64)   8909 00 00 00 2E 		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 64)   890D 38 3A       		 DB 60+64,22+64,92,23+64,0,0,0,46,56,58    ; 90- 99	; 90- 99
 65)   890F 2C 0C 2B 2A 		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 65)   8913 29 24 33 3E 		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 65)   8917 27 35       		 DB 44,12,43,42,41,36,51,62,39,53    ;100-109  	;100-109
 66)   8919 34 26 1A 0E 		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 66)   891D 0B 2D 0A 23 		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 66)   8921 39 0D       		 DB 52,38,26,14,11,45,10,35,57,13           ;110-119  	;110-119
 67)   8923 3B 25 3C 00 		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 67)   8927 00 00 00 00 		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 67)   892B 00 00       		 DB 59,37,60,0,0,0,0,0,0,0       ;120-129	;120-129
 68)   892D 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 68)   8931 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 68)   8935 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;130-  9	;130-  9
 69)   8937 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 69)   893B 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 69)   893F 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;140-  9	;140-  9
 70)   8941 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 70)   8945 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 70)   8949 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;150-  9	;150-  9
 71)   894B 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 71)   894F 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 71)   8953 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;160-  9	;160-  9
 72)   8955 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 72)   8959 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 72)   895D 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;170-  9	;170-  9
 73)   895F 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 73)   8963 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 73)   8967 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;180-  9	;180-  9
 74)   8969 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 74)   896D 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 74)   8971 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;190-  9	;190-  9
 75)   8973 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 75)   8977 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 75)   897B 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;200-  9	;200-  9
 76)   897D 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 76)   8981 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 76)   8985 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;210-  9	;210-  9
 77)   8987 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 77)   898B 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 77)   898F 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;220-  9	;220-  9
 78)   8991 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 78)   8995 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 78)   8999 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;230-  9	;230-  9
 79)   899B 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 79)   899F 00 00 00 00 		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 79)   89A3 00 00       		               DB 0,0,0,0,0,0,0,0,0,0       ;240-  9	;240-  9
 80)   89A5 00 00 00 00 		               DB 0,0,0,0,0,0           ;250-  5	;250-  5
 80)   89A9 00 00       		               DB 0,0,0,0,0,0           ;250-  5	;250-  5
  7)   89AB 21 80 00    		@PS2KBINIT: LD HL,KEYCTR	;
  8)   89AE 36 00       		 LD (HL),0	;
  9)   89B0 C9          		 RET	;
 12)   89B1 DB 06       		@PS2KEYAVAIL: IN A,(6)	;
 13)   89B3 FE 38       		 CP 56  ;38H =0011 1000  0011 IS 3 MEANS KBD INPUT 1000 MEANS REAL KEYBOARD	;38H =0011 1000  0011 IS 3 MEANS KBD INPUT 1000 MEANS REAL KEYBOARD
 14)   89B5 C9          		 RET	;
 16)   89B6 CD C2 89    		@READKBCHAR: CALL GETKBKEY ;GET HARDWARE KEY WITH CHECKS ON SHIFT...	;GET HARDWARE KEY WITH CHECKS ON SHIFT...
 17)   89B9 B7          		 OR A ;	;
 18)   89BA C8          		 RET Z	;
 19)   89BB 32 81 00    		 LD (LASTKEY),A	;
 20)   89BE CD DB 98    		 CALL PS2LOK  ;RETURN ASCII CHAR	;RETURN ASCII CHAR
 21)   89C1 C9          		 RET	;
 24)   89C2 CD CB 89    		GETKBKEY: CALL GETPS2HWKEY ;GET SCANCODE FROM PS/2 KEYB	;GET SCANCODE FROM PS/2 KEYB
 25)   89C5 B7          		 OR A 	;
 26)   89C6 C8          		 RET Z   ;IF KEYBRD KEY IS ZERO	;IF KEYBRD KEY IS ZERO
 27)   89C7 CD 1A 98    		 CALL CHECKEXT  ;CHECKEXT SHIFTS CTRL ALT CAPS	;CHECKEXT SHIFTS CTRL ALT CAPS
 28)   89CA C9          		 RET	;
 32)   89CB F3          		GETPS2HWKEY: DI	;
 33)   89CC DB 48       		 IN A,(DEVKBI)  	;
 34)   89CE 4F          		 LD C,A	;
 35)   89CF CD DA 89    		 CALL KBENABLE	;
 36)   89D2 79          		 LD A,C	;
 37)   89D3 FB          		 EI	;
 38)   89D4 C9          		 RET	;
 40)   89D5 3E 02       		@KBDISABLE: LD A, 2	;
 41)   89D7 D3 48       		 OUT (DEVKBI), A	;
 42)   89D9 C9          		 RET	;
 44)   89DA AF          		@KBENABLE: XOR A	;
 45)   89DB D3 48       		 OUT (DEVKBI), A	;
 46)   89DD D3 48       		 OUT (DEVKBI), A	;
 47)   89DF D3 48       		 OUT (DEVKBI), A	;
 48)   89E1 C9          		 RET	;
 35)   89E2 3E 03       		PATCHCMDS: LD A,11b ;DISABLE INTS & DISABLE NB=RAM WRITABLE	;DISABLE INTS & DISABLE NB=RAM WRITABLE
 36)   89E4 D3 E0       		 OUT (INTENB),A	;
 37)   89E6 21 F9 A2    		 LD HL,$A2F9	;
 38)   89E9 36 CD       		 LD (HL),$CD ;CALL	;CALL
 39)   89EB 11 22 8A    		 LD DE,CHKNEWCMD	;
 40)   89EE 23          		 INC HL	;
 41)   89EF 73          		 LD (HL),E	;
 42)   89F0 23          		 INC HL	;
 43)   89F1 72          		 LD (HL),D	;
 44)   89F2 21 85 A4    		 LD HL,$A485  ;PXCL3	;PXCL3
 45)   89F5 36 C3       		 LD (HL),$C3 ;JP	;JP
 46)   89F7 11 06 8A    		 LD DE,OSXCL3	;
 47)   89FA 23          		 INC HL	;
 48)   89FB 73          		 LD (HL),E	;
 49)   89FC 23          		 INC HL	;
 50)   89FD 72          		 LD (HL),D	;
 51)   89FE 3E 01       		 LD A,01b  ;DISABLE INTS & ENABLE NB=RAM NON WRITABLE	;DISABLE INTS & ENABLE NB=RAM NON WRITABLE
 52)   8A00 D3 E0       		 OUT (INTENB),A  	;
 53)   8A02 C9          		 RET	;
 57)   8A03 01          		 TOS DEFB 1	;
 58)   8A04 4F          		 DEFM 'O'	;
 59)   8A05 D3          		 DEFB 'S'+80H	;
 62)   8A06 01 14 DD    		OSXCL3: LD BC,XTABLE	;
 63)   8A09 FA 35 C3    		 JP M,ENTER	;
 64)   8A0C 01 00 DE    		 LD BC,XTABL2	;
 65)   8A0F FE 56       		 CP LPCODE	;
 66)   8A11 DA 35 C3    		 JP C,ENTER       ;IF <$56 GOTO TAB2 	;IF <$56 GOTO TAB2
 67)   8A14 01 43 A4    		 LD BC,XTABL3	;
 68)   8A17 FE 62       		 CP OSCODE	;
 69)   8A19 DA 35 C3    		 JP C,ENTER ;IF <$62 GOTO TAB3	;IF <$62 GOTO TAB3
 70)   8A1C 01 ED 89    		 LD BC,XTABL4 ;ELSE  OUR TAB4	;ELSE  OUR TAB4
 71)   8A1F C3 35 C3    		 JP ENTER	;
 74)   8A22 DD E5       		 PUSH IX	;
 75)   8A24 FD E5       		 PUSH IY	;
 76)   8A26 D5          		 PUSH DE	;
 77)   8A27 21 03 8A    		 LD HL,TOS	;
 78)   8A2A CD D4 A2    		 CALL PSCAN	;
 79)   8A2D D4 39 8A    		 CALL NC, COSCMD	;
 80)   8A30 D1          		 POP DE	;
 81)   8A31 FD E1       		 POP IY	;
 82)   8A33 DD E1       		 POP IX	;
 84)   8A35 21 5A A3    		 LD HL,TPLOT	;
 85)   8A38 C9          		 RET	;
 88)   8A39 21 59 8A    		COSCMD: LD HL,OSLST	;
 89)   8A3C CD D4 A2    		 CALL PSCAN ;check for any of the OS COMMAND-list	;check for any of the OS COMMAND-list
 90)   8A3F D8          		 RET C	;
 91)   8A40 61          		 LD H,C  ;THE OS LIST COMMAND ID ON C	;THE OS LIST COMMAND ID ON C
 92)   8A41 2E B1       		 LD L,YOSCMD ;THE OS COMMAND	;THE OS COMMAND
 93)   8A43 D7 01       		 DEFW ZCM2HL	;
 94)   8A45 05          		 DEC B  ;CHECK FOR ARGS	;CHECK FOR ARGS
 95)   8A46 C8          		 RET Z	;
 99)   8A47 DF 18       		 DEFW WEXPN	;
100)   8A49 D8          		 RET C	;
108)   8A4A C9          		 RET	;
111)   8A4B 63 8A       		OSCMDTBL: DEFW CMD_DIR	;
112)   8A4D 7B 8A       		 DEFW CMD_CD	;
125)   8A4F 51 8A       		       DEFW XOSCMD	;
127)   8A51 7E          		XOSCMD: LD A,(HL) ;GET SUB COMMAND 0=DIR 1=CD	;GET SUB COMMAND 0=DIR 1=CD
128)   8A52 B7          		 OR A	;
129)   8A53 28 0E       		 JR Z,CMD_DIR	;
130)   8A55 3D          		 DEC A	;
131)   8A56 28 23       		 JR Z,CMD_CD	;
133)   8A58 C9          		 RET	;
135)   8A59 02          		OSLST: DEFB 2 ;no of sub-commands	;no of sub-commands
137)   8A5A 44 49       		 DEFM 'DI' 	;
138)   8A5C D2 00 01    		 DEFB 'R'+80H,CDIR,1 ;+1 OF ARGS	;+1 OF ARGS
140)   8A5F 43          		 DEFM 'C' 	;
141)   8A60 C4 01 02    		 DEFB 'D'+80H,CCD,2	;
145)   8A63 D7 39       		CMD_DIR: DEFW ZPTMSG ;	;
146)   8A65 11          		 DEFB 17	;
147)   8A66 0D          		 DEFB $0D	;
148)   8A67 2D 2D 2D 5B 		 DEFM "---[DIR INFO]--"	;
148)   8A6B 44 49 52 20 		 DEFM "---[DIR INFO]--"	;
148)   8A6F 49 4E 46 4F 		 DEFM "---[DIR INFO]--"	;
148)   8A73 5D 2D 2D    		 DEFM "---[DIR INFO]--"	;
149)   8A76 0D          		 DEFB $0D	;
150)   8A77 CD 25 8C    		 CALL STRG_DIRLIST  ;PRINT DIR	;PRINT DIR
151)   8A7A C9          		 RET	;
153)   8A7B CD 36 DC    		CMD_CD: CALL GUSTP   ;SETS HL FROM IX+11,12 USRTOP	;SETS HL FROM IX+11,12 USRTOP
154)   8A7E CD D4 8C    		 CALL STRG_DIRCHG	;
155)   8A81 38 09       		 JR C, CD_ERR	;
156)   8A83 3E 96       		 LD A,150   ;ERROR MISSING FILE	;ERROR MISSING FILE
157)   8A85 28 05       		 JR Z,CD_ERR	;
164)   8A87 CD 76 8C    		 CALL STRG_DIRNMCHG	;
165)   8A8A 18 0F       		 JR CD_CONT	;
167)   8A8C E5          		 PUSH HL	;
168)   8A8D F5          		 PUSH AF  	;
169)   8A8E D7 39       		 DEFW ZPTMSG ;	;
170)   8A90 05          		 DEFB 5	;
171)   8A91 45 52 52 5F 		 DEFM "ERR_R"	;
171)   8A95 52          		 DEFM "ERR_R"	;
172)   8A96 F1          		 POP AF  	;
173)   8A97 CD C6 80    		 CALL SOUTAS  	;
174)   8A9A E1          		 POP HL  	;
175)   8A9B F5          		CD_CONT: PUSH AF   ;SAVE FLAGS  	;SAVE FLAGS
177)   8A9C 54          		 LD D,H	;
178)   8A9D 5D          		 LD E,L	;
179)   8A9E 1A          		CD_AGN: LD A,(DE)	;
180)   8A9F FE 00       		 CP 0	;
181)   8AA1 3E 00       		 LD A,0	;
182)   8AA3 12          		 LD (DE),A    ;ZERO THIS	;ZERO THIS
183)   8AA4 13          		 INC DE	;
184)   8AA5 20 F7       		 JR NZ,CD_AGN	;
185)   8AA7 06 04       		 LD B,4	;
186)   8AA9 12          		CD_AGN2: LD (DE),A	;
187)   8AAA 13          		 INC DE	;
188)   8AAB 10 FC       		 DJNZ CD_AGN2	;
190)   8AAD E5          		 PUSH HL	;
191)   8AAE D5          		 PUSH DE	;
192)   8AAF 21 E0 00    		 LD HL,DIRNM	;
193)   8AB2 7E          		NXTCHR: LD A,(HL)	;
194)   8AB3 B7          		 OR A 	;
195)   8AB4 28 05       		 JR Z,NXTPATH	;
196)   8AB6 DF 3C       		 DEFW WPTCHAR	;
197)   8AB8 23          		 INC HL	;
198)   8AB9 18 F7       		 JR NXTCHR	;
199)   8ABB 23          		NXTPATH: INC HL	;
200)   8ABC 7E          		 LD A,(HL)	;
201)   8ABD B7          		 OR A	;
202)   8ABE 20 F2       		 JR NZ,NXTCHR	;
203)   8AC0 D1          		 POP DE	;
204)   8AC1 E1          		 POP HL	;
205)   8AC2 EB          		 EX DE,HL	;
206)   8AC3 CD 8C C5    		 CALL LDUSTP	;
210)   8AC6 F1          		 POP AF  ;REST FLAGS  	;REST FLAGS
211)   8AC7 AF          		 XOR A	;
212)   8AC8 C9          		 RET	;
 10)   8AC9 21 82 00    		INITMMU:       LD HL,BANKS	;
 11)   8ACC 06 08       		               LD B,8	;
 12)   8ACE AF          		               XOR A	;
 13)   8ACF 77          		INM_AGN:       LD (HL),A	;
 14)   8AD0 3C          		               INC A	;
 15)   8AD1 23          		 INC HL	;
 16)   8AD2 10 FB       		               DJNZ INM_AGN	;
 17)   8AD4 C9          		               RET                	;
 23)   8AD5 4F          		PUTPGINBANK: LD C, A       ;SAVE PAGE	;SAVE PAGE
 24)   8AD6 78          		 LD A, B                                                         ;BANK IN A	;BANK IN A
 25)   8AD7 FE 02       		 CP 2	;
 26)   8AD9 D8          		 RET C         ;BANK 0,1 WILL NEVER CHANGE	;BANK 0,1 WILL NEVER CHANGE
 27)   8ADA FE 07       		 CP 7	;
 28)   8ADC C8          		 RET Z         ;BANK 7 WILL NEVER CHANGE	;BANK 7 WILL NEVER CHANGE
 29)   8ADD 21 82 00    		 LD HL, BANKS	;
 30)   8AE0 16 00       		 LD D, 0	;
 31)   8AE2 5F          		 LD E, A	;
 32)   8AE3 19          		 ADD HL, DE	;
 33)   8AE4 79          		 LD A, C        ;RESTORE PAGE	;RESTORE PAGE
 34)   8AE5 77          		 LD (HL), A        ;SAVE PG IN BANK B MEMORY	;SAVE PG IN BANK B MEMORY
 35)   8AE6 0E 00       		 LD C, DEVMMU	;
 36)   8AE8 58          		 LD E,B	;
 37)   8AE9 CB 20       		 SLA B         ;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT	;SHIFT BANK TO A15..A13 FROM A2..A0 WE USE THESE PINS ON THE CPLD FOR BANK INPUT
 38)   8AEB CB 20       		 SLA B	;
 39)   8AED CB 20       		 SLA B	;
 40)   8AEF CB 20       		 SLA B	;
 41)   8AF1 CB 20       		 SLA B         ;SET TO A15,A14,A13	;SET TO A15,A14,A13
 42)   8AF3 ED 79       		 OUT (C), A	;
 43)   8AF5 43          		 LD B,E	;
 44)   8AF6 C9          		 RET	;
 49)   8AF7 21 82 00    		GETPGINBANK:   LD HL,BANKS	;
 50)   8AFA 16 00       		               LD D,0	;
 51)   8AFC 58          		               LD E,B	;
 52)   8AFD 19          		               ADD HL,DE	;
 53)   8AFE 7E          		               LD A,(HL)	;
 54)   8AFF C9          		               RET	;
 17)   8B00 	            		 RBR EQU DEVSER+0      ;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)	;RECEIVER BUFFER REGISTER (READ ONLY) (DLAB = 0)
 18)   8B00 	            		 THR EQU DEVSER+0      ;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)	;TRANSMITER HOLDING REGISTER (WRITE ONLY) (DLAB = 0)
 19)   8B00 	            		 IER EQU DEVSER+1      ;INTERRUPT ENABLE REGISTER (DLAB = 0)	;INTERRUPT ENABLE REGISTER (DLAB = 0)
 24)   8B00 	            		 IIR EQU DEVSER+2      ;INTERRUPT IDENT. REGISTER (READ ONLY)	;INTERRUPT IDENT. REGISTER (READ ONLY)
 29)   8B00 	            		 FCR EQU DEVSER+2      ;FIFO CONTROL REGISTER (WRITE ONLY)	;FIFO CONTROL REGISTER (WRITE ONLY)
 37)   8B00 	            		 LCR EQU DEVSER+3      ;LINE CONTROL REGISTER	;LINE CONTROL REGISTER
 45)   8B00 	            		 MCR EQU DEVSER+4      ;MODEM CONTROL REGISTER	;MODEM CONTROL REGISTER
 46)   8B00 	            		 LSR EQU DEVSER+5      ;LINE STATUS REGISTER	;LINE STATUS REGISTER
 55)   8B00 	            		 MSR EQU DEVSER+6      ;MODEM STATUS REGISTER	;MODEM STATUS REGISTER
 56)   8B00 	            		 SCR EQU DEVSER+7      ;SCRATCH REGISTER	;SCRATCH REGISTER
 57)   8B00 	            		 DLL EQU DEVSER+0      ;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (LEAST SIGNIFICANT BYTE) (DLAB = 1)
 58)   8B00 	            		 DLM EQU DEVSER+1      ;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)	;DIVISOR LATCH (MOST SIGNIFICANT BYTE) (DLAB = 1)
 64)   8B00 F5          		RS_INI: PUSH AF	;
 65)   8B01 3E 80       		 LD A, $80        ; Mask to set DLAB on	; Mask to set DLAB on
 66)   8B03 D3 23       		 OUT (LCR), A        ; Send to LINe Control Register	; Send to LINe Control Register
 75)   8B05 F1          		 POP AF	;
 76)   8B06 D3 20       		 OUT (DLL), A        ; Set LSB of divisor	; Set LSB of divisor
 77)   8B08 3E 00       		 LD A, 00        ; This will be the MSB of the divisior	; This will be the MSB of the divisior
 78)   8B0A D3 21       		 OUT (DLM), A        ; Send to the MSB register	; Send to the MSB register
 79)   8B0C 3E 03       		 LD A, $03        ; 8 bits, 1 stop, no parity (and clear DLAB)	; 8 bits, 1 stop, no parity (and clear DLAB)
 80)   8B0E D3 23       		 OUT (LCR), A        ; Write new value to LCR	; Write new value to LCR
 82)   8B10 3E 00       		 LD A, 0	;
 83)   8B12 D3 22       		 OUT (FCR), A        ;//was commented	;//was commented
 84)   8B14 3E 00       		 LD A, $00        ; 5 A=0 Disable all INterrupts	; 5 A=0 Disable all INterrupts
 85)   8B16 D3 21       		 OUT (IER), A        ; Send to INterrupt Enable Register	; Send to INterrupt Enable Register
 86)   8B18 C9          		 RET	;
 89)   8B19 CD 1F 8B    		RS_TX: CALL RSTXRD	;
 90)   8B1C D3 20       		 OUT (THR), A	;
 92)   8B1E C9          		 RET	;
 95)   8B1F F5          		RSTXRD: PUSH AF	;
 96)   8B20 DB 25       		RSTXLP: IN A, (LSR)        ; fetch the control register	; fetch the control register
 97)   8B22 CB 6F       		 BIT 5, A        ; bit will be set if UART is ready	; bit will be set if UART is ready
 98)   8B24 28 FA       		 JR Z, RSTXLP	;
 99)   8B26 F1          		 POP AF	;
100)   8B27 C9          		 RET	;
104)   8B28 7E          		RS_TXT: LD A, (HL)	;
105)   8B29 23          		 INC HL	;
106)   8B2A FE 00       		 CP 0	;
107)   8B2C C8          		 RET Z	;
108)   8B2D CD 19 8B    		 CALL RS_TX	;
109)   8B30 18 F6       		 JR RS_TXT	;
113)   8B32 E5          		RS_MESG: PUSH HL	;
114)   8B33 C5          		 PUSH BC	;
115)   8B34 D5          		 PUSH DE	;
116)   8B35 F5          		 PUSH AF	;
117)   8B36 21 09 00    		 LD HL,9 ;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING	;POINTS TO RET ADDRESS +10 FROM SP = OUR STRING
118)   8B39 39          		 ADD HL,SP	;
119)   8B3A 46          		 LD B,(HL)    	;
120)   8B3B 2B          		 DEC HL	;
121)   8B3C 4E          		 LD C,(HL)	;
122)   8B3D 60          		 LD H,B	;
123)   8B3E 69          		 LD L,C	;
124)   8B3F CD 28 8B    		 CALL RS_TXT	;
125)   8B42 F1          		 POP AF	;
126)   8B43 D1          		 POP DE	;
127)   8B44 44          		 LD B,H  ;NEW RET ADDRESS	;NEW RET ADDRESS
128)   8B45 4D          		 LD C,L	;
129)   8B46 21 05 00    		 LD HL,5 ;POINTS TO RET ADDRESS +6 FROM SP	;POINTS TO RET ADDRESS +6 FROM SP
130)   8B49 39          		 ADD HL,SP  	;
131)   8B4A 70          		 LD (HL),B	;
132)   8B4B 2B          		 DEC HL	;
133)   8B4C 71          		 LD (HL),C  	;
134)   8B4D C1          		 POP BC	;
135)   8B4E E1          		 POP HL	;
136)   8B4F C9          		 RET 	;
143)   8B50 ED 57       		RS_RX: LD A,I        ;SETS PV IF INTS ARE ENABLED	;SETS PV IF INTS ARE ENABLED
144)   8B52 F5          		 PUSH AF	;
145)   8B53 D1          		 POP DE	;
146)   8B54 F3          		 DI	;
147)   8B55 3E 01       		 LD A, 1        ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
148)   8B57 D3 24       		 OUT (MCR), A	;
149)   8B59 CD 77 8B    		 CALL RSRXRD	;
150)   8B5C AF          		RS_GTCH: XOR A        ;NOT ready to receive SIGNAL DSR 0	;NOT ready to receive SIGNAL DSR 0
151)   8B5D D3 24       		 OUT (MCR), A	;
153)   8B5F DB 20       		 IN A, (RBR)  	;
154)   8B61 D5          		 PUSH DE	;
155)   8B62 57          		 LD D,A	;
156)   8B63 F1          		 POP AF	;
157)   8B64 7A          		 LD A,D	;
158)   8B65 E0          		 RET PO  	;
159)   8B66 FB          		 EI	;
160)   8B67 C9          		 RET	;
162)   8B68 3E 01       		RS_RXNW: LD A, 1       ;ready to receive SIGNAL DSR 1	;ready to receive SIGNAL DSR 1
163)   8B6A D3 24       		 OUT (MCR), A	;
164)   8B6C DB 25       		 IN A, (LSR)        ; fetch the conrtol register	; fetch the conrtol register
165)   8B6E CB 47       		 BIT 0, A	;
166)   8B70 28 03       		 JR Z, RS_NOCHAR	;
167)   8B72 F3          		 DI	;
168)   8B73 18 E7       		 JR RS_GTCH	;
169)   8B75 AF          		RS_NOCHAR: XOR A        ;RETURN ZERO	;RETURN ZERO
170)   8B76 C9          		 RET	;
178)   8B77 F5          		 PUSH AF	;
184)   8B78 DB 25       		 IN A, (LSR)        ; fetch the control register	; fetch the control register
185)   8B7A CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
186)   8B7C 28 FA       		 JR Z, RSRXLP	;
188)   8B7E F1          		 POP AF	;
190)   8B7F C9          		 RET	;
194)   8B80 DB 25       		RS_KEYRD: IN A, (LSR)       ; fetch the conrtol register	; fetch the conrtol register
195)   8B82 CB 47       		 BIT 0, A        ; bit will be set if UART has data	; bit will be set if UART has data
196)   8B84 C9          		 RET	;
198)   8B85 F5          		SHLCD: PUSH AF	;
200)   8B86 F1          		 POP AF	;
202)   8B87 C9          		 RET	;
204)   8B88 F5          		RS_NEWLINE: PUSH AF	;
205)   8B89 3E 0D       		 LD A,13	;
206)   8B8B CD 19 8B    		 CALL RS_TX	;
207)   8B8E 3E 0A       		 LD A,10	;
208)   8B90 CD 19 8B    		 CALL RS_TX	;
209)   8B93 F1          		 POP AF	;
210)   8B94 C9          		 RET  	;
213)   8B95 F5          		CHKERR: PUSH AF	;
214)   8B96 E5          		 PUSH HL	;
215)   8B97 C5          		 PUSH BC	;
216)   8B98 DB 25       		 IN A, (LSR)        ;FETCH LINE STATUS REGISTER	;FETCH LINE STATUS REGISTER
217)   8B9A CB 67       		 BIT 4, A	;
218)   8B9C 28 04       		 JR Z, LBLPE	;
219)   8B9E 3E 42       		 LD A, 'B'       ;$20  ;BREAK	;$20  ;BREAK
220)   8BA0 18 1A       		 JR EXIT	;
221)   8BA2 CB 57       		LBLPE: BIT 2, A	;
222)   8BA4 28 04       		 JR Z, LBLFE	;
223)   8BA6 3E 50       		 LD A, 'P'       ;$40  ;PARITY	;$40  ;PARITY
224)   8BA8 18 12       		 JR EXIT	;
225)   8BAA CB 5F       		LBLFE: BIT 3, A	;
226)   8BAC 28 04       		 JR Z, LBLOE	;
227)   8BAE 3E 46       		 LD A, 'F'       ;$60  ;FRAME	;$60  ;FRAME
228)   8BB0 18 0A       		 JR EXIT	;
229)   8BB2 CB 4F       		LBLOE: BIT 1, A	;
230)   8BB4 28 04       		 JR Z, LBLNE	;
231)   8BB6 3E 4F       		 LD A, 'O'        ;$80  ;OVERRUN	;$80  ;OVERRUN
232)   8BB8 18 02       		 JR EXIT	;
233)   8BBA 3E 4E       		LBLNE: LD A, 'N'        ;NO ERROR	;NO ERROR
234)   8BBC 21 7A 00    		EXIT: LD HL, SERERR	;
235)   8BBF 77          		 LD (HL), A	;
237)   8BC0 C1          		 POP BC	;
238)   8BC1 E1          		 POP HL	;
239)   8BC2 F1          		 POP AF	;
240)   8BC3 C9          		 RET	;
 32)   8BC4 	            		@CH376_ERROR EQU RS_MESG	;
 42)   8BC4 57          		STRG_INIT: LD D,A	;
 43)   8BC5 AF          		 XOR A  	;
 44)   8BC6 32 8A 00    		 LD (STRG_STAT),A  ;NOT CONNECTED, NOT EXISTS	;NOT CONNECTED, NOT EXISTS
 45)   8BC9 CD A1 91    		 CALL CH376_INIT	;
 46)   8BCC 20 06       		 JR NZ,INIERR	;
 47)   8BCE 7A          		 LD A,D   ;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH	;SELECT USB DEVICE 3 FOR SDCARD, 6 FOR FLASH
 48)   8BCF CD B6 91    		 CALL CH376_SETUSB	;
 49)   8BD2 28 03       		 JR Z,INIOK	;
 50)   8BD4 3E 00       		INIERR: LD A,0  	;
 51)   8BD6 C9          		 RET	;
 52)   8BD7 CD 96 91    		INIOK: CALL CH376_VERSION	;
 53)   8BDA BF          		 CP A  ;SET ZF	;SET ZF
 54)   8BDB 3E 80       		 LD A, $80  ;BIT 7 MEANS EXISTS	;BIT 7 MEANS EXISTS
 55)   8BDD 32 8A 00    		 LD (STRG_STAT),A  ;	;
 56)   8BE0 C9          		 RET	;
 59)   8BE1 3A 8A 00    		STRG_EXISTS: LD A,(STRG_STAT)	;
 60)   8BE4 CB 7F       		 BIT 7,A	;
 61)   8BE6 C9          		 RET	;
 67)   8BE7 CD E1 8B    		STRG_CHECK: CALL STRG_EXISTS	;
 68)   8BEA 37          		 SCF	;
 69)   8BEB C8          		 RET Z    ;Z MEANS NOT EXISTS	;Z MEANS NOT EXISTS
 70)   8BEC 06 05       		 LD B,5	;
 71)   8BEE CD E6 91    		SC_AGN1: CALL CH376_CONNECT 	;
 72)   8BF1 28 06       		 JR Z,DOCON	;
 73)   8BF3 30 1C       		 JR NC,DODISC	;
 74)   8BF5 10 F7       		 DJNZ SC_AGN1    	;
 78)   8BF7 AF          		 XOR A   	;
 79)   8BF8 C9          		 RET   ;TIMEOUT	;TIMEOUT
 81)   8BF9 AF          		DOCON: XOR A    ;CLCF	;CLCF
 82)   8BFA 3A 8A 00    		 LD A,(STRG_STAT)	;
 83)   8BFD CB 47       		 BIT 0,A	;
 84)   8BFF C0          		 RET NZ    ;ALREADY MOUNTED THE DRIVE	;ALREADY MOUNTED THE DRIVE
 88)   8C00 CD F1 91    		 CALL CH376_MOUNT   ;MOUNT THE DRIVE	;MOUNT THE DRIVE
 89)   8C03 20 0C       		 JR NZ, DONOMNT	;
 93)   8C05 3A 8A 00    		 LD A,(STRG_STAT)	;
 94)   8C08 CB C7       		 SET 0,A	;
 95)   8C0A 32 8A 00    		 LD (STRG_STAT),A	;
 96)   8C0D AF          		 XOR A    ;CLEAR CARRY FLAG MEANS WE ARE OK	;CLEAR CARRY FLAG MEANS WE ARE OK
 97)   8C0E 3E 01       		 LD A,1    ;A=1 IS JUST CONNECTED	;A=1 IS JUST CONNECTED
 98)   8C10 C9          		 RET	;
106)   8C11 AF          		 XOR A 	;
107)   8C12 3A 8A 00    		 LD A,(STRG_STAT)  	;
108)   8C15 CB 47       		 BIT 0,A	;
109)   8C17 C8          		 RET Z    ;ALREADY DISCONNECTED	;ALREADY DISCONNECTED
110)   8C18 CB 87       		 RES 0,A    ;SET BIT 0 TO 0=DISCONNECTED	;SET BIT 0 TO 0=DISCONNECTED
111)   8C1A 32 8A 00    		 LD (STRG_STAT),A  	;
112)   8C1D 3E 02       		 LD A,2    ;A=2 IS JUST DISCONNECTED	;A=2 IS JUST DISCONNECTED
113)   8C1F C9          		 RET	;
119)   8C20 C3 FA 91    		STRG_OPENCRD:  JP CH376_MOUNTDEV  	;
122)   8C23 2A 00       		SDIRTP  DEFB '*',0	;
124)   8C25 CD 57 8C    		STRG_DIRLIST: CALL STRG_OPENCDIR ;OPEN CURRENT DIR	;OPEN CURRENT DIR
125)   8C28 21 23 8C    		 LD HL,SDIRTP	;
126)   8C2B CD D4 8C    		 CALL STRG_OPENFD	;
127)   8C2E C8          		DL_NXTFILE: RET Z   ;NO  MORE FILES	;NO  MORE FILES
128)   8C2F 3E 27       		 LD A,CMD_RDUSB_DATA0	;
129)   8C31 CD 80 91    		 CALL CH376_COMMD	;
130)   8C34 CD BF 90    		 CALL CH376_GETDATA ;DATA ON USBBUF A=BYTES TO READ	;DATA ON USBBUF A=BYTES TO READ
131)   8C37 3E 00       		 LD A,0	;
132)   8C39 12          		 LD (DE),A   ;ZT STRING	;ZT STRING
134)   8C3A 21 8B 00    		 LD HL,USBBUF	;
135)   8C3D CD 38 80    		 CALL OS_PRMESSCRSFE	;
136)   8C40 3E 0D       		 LD A,$0D	;
137)   8C42 CD 2D 80    		 CALL OS_PRCHSCR	;
139)   8C45 3E 33       		 LD A, CMD_FILEENUM_GO	;
140)   8C47 CD 80 91    		 CALL CH376_COMMD	;
141)   8C4A CD 11 91    		 CALL CH376_WTCMDEND	;
142)   8C4D FE 42       		 CP ERR_MISS_FILE	;
143)   8C4F 18 DD       		 JR DL_NXTFILE	;
147)   8C51 7E          		NEXTDIR: LD A,(HL)	;
148)   8C52 23          		 INC HL	;
149)   8C53 B7          		 OR A	;
150)   8C54 C8          		 RET Z	;
151)   8C55 18 FA       		 JR NEXTDIR	;
157)   8C57 E5          		STRG_OPENCDIR: PUSH HL	;
158)   8C58 D5          		 PUSH DE	;
159)   8C59 C5          		 PUSH BC  	;
160)   8C5A 21 E0 00    		 LD HL,DIRNM	;
161)   8C5D CD 64 8C    		 CALL STRG_OPENCDIR2	;
162)   8C60 C1          		        POP BC	;
163)   8C61 D1          		 POP DE	;
164)   8C62 E1          		 POP HL	;
165)   8C63 C9          		 RET	;
167)   8C64 7E          		STRG_OPENCDIR2: LD A,(HL)	;
168)   8C65 B7          		 OR A	;
169)   8C66 C8          		 RET Z  ;WHEN ZERO MEANS NO MORE DIR TO OPEN	;WHEN ZERO MEANS NO MORE DIR TO OPEN
173)   8C67 E5          		 PUSH HL	;
174)   8C68 CD D4 8C    		 CALL STRG_OPENFD	;
175)   8C6B E1          		 POP HL	;
176)   8C6C D8          		 RET C  ;ERROR	;ERROR
177)   8C6D 37          		 SCF	;
178)   8C6E 3E 96       		 LD A,150 ;MISSING FILENAME	;MISSING FILENAME
179)   8C70 C8          		 RET Z  ;FILE MISSING	;FILE MISSING
181)   8C71 CD 51 8C    		 CALL NEXTDIR	;
182)   8C74 18 EE       		 JR STRG_OPENCDIR2	;
186)   8C76 E5          		STRG_DIRNMCHG: PUSH HL 	;
187)   8C77 7E          		 LD A,(HL)	;
188)   8C78 FE 5C       		 CP '\'        ;changed from '/' on 18/2/2024	;changed from '/' on 18/2/2024
189)   8C7A 28 0E       		 JR Z,DNC_RESET	;
190)   8C7C FE 2F       		 CP '/'        ; 25/2/2024	; 25/2/2024
191)   8C7E 28 0A       		 JR Z,DNC_RESET  	;
192)   8C80 FE 2E       		 CP '.'	;
193)   8C82 20 2D       		 JR NZ, DNC_ADD	;
194)   8C84 FE 2E       		 CP '.'	;
195)   8C86 28 0F       		 JR Z,DNC_RMV	;
196)   8C88 E1          		 POP HL	;
197)   8C89 C9          		 RET ;DO NOTHING IF . OR .\ OR .<x>	;DO NOTHING IF . OR .\ OR .<x>
198)   8C8A 21 E0 00    		DNC_RESET: LD HL,DIRNM	;
199)   8C8D 36 5C       		 LD (HL),'\'	;
200)   8C8F 23          		 INC HL	;
201)   8C90 36 00       		 LD (HL),0	;
202)   8C92 23          		 INC HL	;
203)   8C93 36 00       		 LD (HL),0	;
204)   8C95 E1          		 POP HL	;
205)   8C96 C9          		 RET	;
207)   8C97 21 E0 00    		DNC_RMV: LD HL,DIRNM	;
208)   8C9A CD 51 8C    		 CALL NEXTDIR	;
209)   8C9D 7E          		 LD A,(HL)	;
210)   8C9E B7          		 OR A	;
211)   8C9F EB          		 EX DE,HL ;DE THE NEXT DIR	;DE THE NEXT DIR
212)   8CA0 E1          		 POP HL	;
213)   8CA1 C8          		 RET Z ;RET IF WE ARE ON 1ST DIRECTORY  	;RET IF WE ARE ON 1ST DIRECTORY
214)   8CA2 E5          		 PUSH HL	;
215)   8CA3 EB          		 EX DE,HL ;HL THE NEXT DIR	;HL THE NEXT DIR
216)   8CA4 44          		RMV_NXT: LD B,H	;
217)   8CA5 4D          		 LD C,L	;
218)   8CA6 CD 51 8C    		 CALL NEXTDIR	;
219)   8CA9 7E          		 LD A,(HL)	;
220)   8CAA B7          		 OR A	;
221)   8CAB 20 F7       		 JR NZ,RMV_NXT ;GO TO NEXT DIR 	;GO TO NEXT DIR
224)   8CAD AF          		 XOR A	;
225)   8CAE 02          		 LD (BC),A	;
226)   8CAF E1          		 POP HL	;
227)   8CB0 C9          		 RET	;
228)   8CB1 EB          		DNC_ADD: EX DE,HL ;DE THE NEW FILE	;DE THE NEW FILE
229)   8CB2 21 E0 00    		 LD HL,DIRNM	;
230)   8CB5 CD 51 8C    		ADDNXT: CALL NEXTDIR	;
231)   8CB8 7E          		 LD A,(HL)	;
232)   8CB9 B7          		 OR A	;
233)   8CBA 20 F9       		 JR NZ,ADDNXT	;
235)   8CBC EB          		 EX DE,HL	;
237)   8CBD 7E          		ADDNXT2: LD A,(HL)	;
238)   8CBE 12          		 LD (DE),A	;
239)   8CBF 23          		 INC HL	;
240)   8CC0 13          		 INC DE	;
241)   8CC1 B7          		 OR A	;
242)   8CC2 20 F9       		 JR NZ,ADDNXT2	;
244)   8CC4 EB          		 EX DE,HL	;
245)   8CC5 36 00       		 LD (HL),0 ;SIGNAL END OF DIRECTORIES WITH A SECOND ZERO	;SIGNAL END OF DIRECTORIES WITH A SECOND ZERO
246)   8CC7 E1          		 POP HL	;
247)   8CC8 C9          		 RET	;
251)   8CC9 F5          		TEMPPRMSG: PUSH AF	;
252)   8CCA CD 30 80    		 CALL OS_PRMESSCR	;
253)   8CCD 3E 0A       		 LD A,$0A	;
254)   8CCF CD 2D 80    		 CALL OS_PRCHSCR	;
255)   8CD2 F1          		 POP AF	;
256)   8CD3 C9          		 RET	;
265)   8CD4 E5          		STRG_DIRCHG: PUSH HL	;
269)   8CD5 3E 2F       		 LD A, CMD_SETFILENAME	;
270)   8CD7 CD 80 91    		     CALL CH376_COMMD  	;
271)   8CDA CD 35 92    		     CALL CH376_WRSTRING	;
272)   8CDD 20 0E       		 JR NZ,DC_WSERR  	;
273)   8CDF 3E 32       		 LD A, CMD_FILE_OPEN	;
274)   8CE1 CD 80 91    		 CALL CH376_COMMD	;
275)   8CE4 CD 11 91    		 CALL CH376_WTCMDEND   	;
276)   8CE7 E1          		 POP HL	;
277)   8CE8 FE 42       		 CP ERR_MISS_FILE	;
278)   8CEA C8          		 RET Z	;
279)   8CEB B7          		 OR A  ;CLEAR CARRY	;CLEAR CARRY
280)   8CEC C9          		 RET	;
282)   8CED E1          		DC_WSERR: POP HL	;
283)   8CEE 37          		 SCF	;
284)   8CEF C9          		 RET  	;
286)   8CF0 C9          		STRG_TPFILE: RET	;
287)   8CF1 C9          		STRG_GETPOS: RET	;
291)   8CF2 D5          		STRG_SETPOS16: PUSH DE	;
292)   8CF3 11 00 00    		 LD DE,0	;
293)   8CF6 CD FB 8C    		 CALL STRG_SETPOS 	;
294)   8CF9 D1          		 POP DE	;
295)   8CFA C9          		 RET	;
297)   8CFB 3E 39       		STRG_SETPOS: LD A,CMD_BYTE_LOCATE	;
298)   8CFD CD 80 91    		 CALL CH376_COMMD	;
299)   8D00 79          		 LD A,C                             ; 4 BYTES TO SET THE OFFSET LOW IN FRONT	; 4 BYTES TO SET THE OFFSET LOW IN FRONT
300)   8D01 CD 84 91    		     CALL CH376_DATAWR	;
301)   8D04 78          		 LD A,B	;
302)   8D05 CD 84 91    		 CALL CH376_DATAWR	;
303)   8D08 7B          		 LD A,E	;
304)   8D09 CD 84 91    		 CALL CH376_DATAWR            ;LAST 2 BYTES 0 MAX 65535 SKIP	;LAST 2 BYTES 0 MAX 65535 SKIP
305)   8D0C 7A          		 LD A,D	;
306)   8D0D CD 84 91    		 CALL CH376_DATAWR	;
307)   8D10 CD 11 91    		     CALL CH376_WTCMDEND	;
308)   8D13 C9          		 RET	;
311)   8D14 C9          		STRG_GETSIZE: RET	;
312)   8D15 C9          		STRG_GETEOF: RET	;
319)   8D16 3E 27       		STRG_PRDRVINFO: LD A,CMD_RDUSB_DATA0	;
320)   8D18 CD 80 91    		 CALL CH376_COMMD	;
321)   8D1B CD BF 90    		 CALL CH376_GETDATA	;
322)   8D1E F5          		 PUSH AF	;
323)   8D1F D6 08       		 SUB 8  	;
324)   8D21 47          		 LD B,A	;
325)   8D22 F1          		 POP AF   	;
326)   8D23 21 93 00    		 LD HL,USBBUF+8  ;SKIP 8 BYTES	;SKIP 8 BYTES
327)   8D26 7E          		PDI_NXT: LD A,(HL)	;
328)   8D27 E5          		 PUSH HL	;
329)   8D28 C5          		 PUSH BC	;
330)   8D29 CD 16 80    		 CALL OS_PRINTCHAR	;
331)   8D2C C1          		 POP BC	;
332)   8D2D E1          		 POP HL	;
333)   8D2E 23          		 INC HL	;
334)   8D2F 10 F5       		 DJNZ PDI_NXT  	;
335)   8D31 CD 88 8B    		 CALL RS_NEWLINE	;
337)   8D34 3E 3F       		 LD A,CMD_DISK_QUERY   	;
338)   8D36 CD 80 91    		 CALL CH376_COMMD	;
339)   8D39 CD 11 91    		 CALL CH376_WTCMDEND	;
340)   8D3C C0          		 RET NZ	;
341)   8D3D 3E 27       		 LD A,CMD_RDUSB_DATA0	;
342)   8D3F CD 80 91    		 CALL CH376_COMMD  	;
343)   8D42 CD BF 90    		 CALL CH376_GETDATA	;
345)   8D45 DD 21 8B 00 		 LD IX,USBBUF 	;
346)   8D49 DD E5       		 PUSH IX   	;
347)   8D4B DD 56 03    		 LD D,(IX+3)	;
348)   8D4E DD 5E 02    		 LD E,(IX+2)	;
349)   8D51 DD 66 01    		 LD H,(IX+1)	;
350)   8D54 DD 6E 00    		 LD L,(IX+0)	;
351)   8D57 CD 4D 9B    		 CALL B2D32    ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
352)   8D5A 21 CB 00    		 LD HL,B2DBUF	;
353)   8D5D CD DD 9B    		 CALL SKIPSPC	;
354)   8D60 CD 1A 80    		 CALL OS_PRINTTEXT	;
355)   8D63 CD 26 80    		 CALL OS_PRINTMSG	;
356)   8D66 20 53 45 43 		 DEFM " SECTORS"	;
356)   8D6A 54 4F 52 53 		 DEFM " SECTORS"	;
357)   8D6E 0A 0D 00    		 DB 10,13 0	;
358)   8D71 DD E1       		 POP IX	;
360)   8D73 DD E5       		 PUSH IX     	;
361)   8D75 DD 56 07    		 LD D,(IX+7)	;
362)   8D78 DD 5E 06    		 LD E,(IX+6)	;
363)   8D7B DD 66 05    		 LD H,(IX+5)	;
364)   8D7E DD 6E 04    		 LD L,(IX+4)  	;
365)   8D81 CD 4D 9B    		 CALL B2D32  ;DE:HL RES ON B2DBUF	;DE:HL RES ON B2DBUF
366)   8D84 21 CB 00    		 LD HL,B2DBUF	;
367)   8D87 CD DD 9B    		 CALL SKIPSPC	;
368)   8D8A CD 1A 80    		 CALL OS_PRINTTEXT	;
369)   8D8D CD 26 80    		 CALL OS_PRINTMSG	;
370)   8D90 20 53 45 43 		 DEFM " SECTORS FREE   "	;
370)   8D94 54 4F 52 53 		 DEFM " SECTORS FREE   "	;
370)   8D98 20 46 52 45 		 DEFM " SECTORS FREE   "	;
370)   8D9C 45 20 20 20 		 DEFM " SECTORS FREE   "	;
371)   8DA0 0A 0D 00    		 DB 10,13,0   	;
372)   8DA3 DD E1       		 POP IX	;
374)   8DA5 DD 7E 08    		FILESYSTEM: LD A,(IX+8) ;1-FAT12,2-FAT16,3-FAT32	;1-FAT12,2-FAT16,3-FAT32
375)   8DA8 3D          		 DEC A	;
376)   8DA9 28 08       		 JR Z,PDI_NXT0	;
377)   8DAB 3D          		 DEC A	;
378)   8DAC 28 18       		 JR Z,PDI_NXT1	;
379)   8DAE 3D          		 DEC A	;
380)   8DAF 28 28       		 JR Z,PDI_NXT2	;
381)   8DB1 18 39       		 JR PDI_NXT3	;
383)   8DB3 CD 26 80    		PDI_NXT0: CALL OS_PRINTMSG	;
384)   8DB6 46 53 20 49 		 DEFM "FS IS FAT-12"	;
384)   8DBA 53 20 46 41 		 DEFM "FS IS FAT-12"	;
384)   8DBE 54 2D 31 32 		 DEFM "FS IS FAT-12"	;
385)   8DC2 0A 0D 00    		 DB 10,13,0	;
386)   8DC5 C9          		 RET	;
387)   8DC6 CD 26 80    		PDI_NXT1: CALL OS_PRINTMSG	;
388)   8DC9 46 53 20 49 		 DEFM "FS IS FAT-16"	;
388)   8DCD 53 20 46 41 		 DEFM "FS IS FAT-16"	;
388)   8DD1 54 2D 31 36 		 DEFM "FS IS FAT-16"	;
389)   8DD5 0A 0D 00    		 DB 10,13,0	;
390)   8DD8 C9          		 RET	;
391)   8DD9 CD 26 80    		PDI_NXT2: CALL OS_PRINTMSG	;
392)   8DDC 46 53 20 49 		 DEFM "FS IS FAT-32"	;
392)   8DE0 53 20 46 41 		 DEFM "FS IS FAT-32"	;
392)   8DE4 54 2D 33 32 		 DEFM "FS IS FAT-32"	;
393)   8DE8 0A 0D 00    		 DB 10,13,0	;
394)   8DEB C9          		 RET	;
395)   8DEC CD 26 80    		PDI_NXT3: CALL OS_PRINTMSG	;
396)   8DEF 55 4E 4B 4E 		 DEFM "UNKNOWN FS"	;
396)   8DF3 4F 57 4E 20 		 DEFM "UNKNOWN FS"	;
396)   8DF7 46 53       		 DEFM "UNKNOWN FS"	;
397)   8DF9 0A 0D 00    		 DB 10,13,0	;
398)   8DFC DD 7E 08    		 LD A,(IX+8)  ;TO BE PRINTED MAYBE	;TO BE PRINTED MAYBE
399)   8DFF C9          		 RET	;
404)   8E00 F5          		STRG_OPNFILE: PUSH AF	;
405)   8E01 3E 2F       		 LD A, CMD_SETFILENAME	;
406)   8E03 CD 80 91    		     CALL CH376_COMMD	;
407)   8E06 21 8B 00    		 LD HL, STRGBUFF	;
408)   8E09 CD 35 92    		     CALL CH376_WRSTRING	;
409)   8E0C 28 1E       		 JR Z,OF_WSOK	;
410)   8E0E F1          		 POP AF	;
411)   8E0F CD 26 80    		 CALL OS_PRINTMSG	;
412)   8E12 45 52 52 4F 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E16 52 20 53 45 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E1A 54 54 49 4E 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E1E 47 20 46 49 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E22 4C 45 4E 41 		 DEFM "ERROR SETTING FILENAME"	;
412)   8E26 4D 45       		 DEFM "ERROR SETTING FILENAME"	;
413)   8E28 0A 0D 00    		 DB 10,13,0  	;
414)   8E2B C9          		 RET	;
415)   8E2C F1          		OF_WSOK: POP AF	;
419)   8E2D B7          		 OR A  ;0 READ	;0 READ
420)   8E2E 28 0C       		 JR Z,OF_OPEN	;
421)   8E30 D6 01       		 SUB 1  ;1 WRITE	;1 WRITE
422)   8E32 28 08       		 JR Z,OF_OPEN	;
423)   8E34 D6 01       		 SUB 1  ;2 READ/WRITE	;2 READ/WRITE
424)   8E36 28 04       		 JR Z,OF_OPEN	;
434)   8E38 3E 34       		 LD A, CMD_FILE_CREATE  	;
435)   8E3A 18 02       		 JR OF_EXEC	;
440)   8E3C 3E 32       		 LD A, CMD_FILE_OPEN	;
444)   8E3E CD 80 91    		 CALL CH376_COMMD	;
445)   8E41 CD 11 91    		 CALL CH376_WTCMDEND	;
446)   8E44 C9          		 RET	;
448)   8E45 3E 36       		STRG_CLSFILE: LD A, CMD_FILE_CLOSE	;
449)   8E47 CD 80 91    		     CALL CH376_COMMD	;
450)   8E4A 3E 01       		     LD A, 1                             ; 1 = update file size if necessary	; 1 = update file size if necessary
451)   8E4C CD 84 91    		     CALL CH376_DATAWR	;
452)   8E4F CD 11 91    		     CALL CH376_WTCMDEND	;
453)   8E52 C9          		     RET	;
459)   8E53 D5          		STRG_BLKREAD: PUSH DE	;
460)   8E54 3E 3A       		 LD A, CMD_BYTE_READ	;
461)   8E56 CD 80 91    		     CALL CH376_COMMD	;
462)   8E59 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
463)   8E5A CD 84 91    		     CALL CH376_DATAWR	;
464)   8E5D 78          		     LD A, B	;
465)   8E5E CD 84 91    		     CALL CH376_DATAWR	;
466)   8E61 2F          		 CPL	;
467)   8E62 2F          		 CPL    	;
471)   8E63 D1          		 POP DE	;
472)   8E64 21 00 00    		 LD HL,0      ;BYTE RECEIVE COUNTER	;BYTE RECEIVE COUNTER
473)   8E67 E5          		STBR_DOREST: PUSH HL	;
474)   8E68 D5          		 PUSH DE	;
475)   8E69 CD 11 91    		 CALL CH376_WTCMDEND	;
476)   8E6C D1          		 POP DE	;
477)   8E6D E1          		 POP HL	;
478)   8E6E 28 1C       		 JR Z, FR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
479)   8E70 FE 1D       		 CP USB_INT_DISK_READ                    	;
480)   8E72 20 1C       		     JR NZ, FR_ERROR	;
482)   8E74 3E 27       		 LD A,CMD_RDUSB_DATA0	;
483)   8E76 CD 80 91    		 CALL CH376_COMMD 	;
484)   8E79 CD 93 91    		 CALL CH376_DATARD  ;A= BYTES TO READ TO BUFFER	;A= BYTES TO READ TO BUFFER
485)   8E7C 47          		 LD B,A	;
498)   8E7D CD 93 91    		STBR_NXT1: CALL CH376_DATARD ;READ THE BYTES TO BUFFER	;READ THE BYTES TO BUFFER
499)   8E80 12          		 LD (DE),A	;
500)   8E81 13          		 INC DE	;
501)   8E82 23          		 INC HL    ;TOTAL BYTES READ COUNTER	;TOTAL BYTES READ COUNTER
502)   8E83 10 F8       		 DJNZ STBR_NXT1  	;
503)   8E85 3E 3B       		 LD A, CMD_BYTE_RD_GO 	;
504)   8E87 CD 80 91    		 CALL CH376_COMMD 	;
505)   8E8A 18 DB       		 JR STBR_DOREST	;
511)   8E8C 44          		 LD B,H	;
512)   8E8D 4D          		 LD C,L	;
513)   8E8E AF          		 XOR A	;
514)   8E8F C9          		 RET	;
515)   8E90 F5          		FR_ERROR: PUSH AF	;
516)   8E91 CD D6 9C    		 CALL PRINTNUM	;
517)   8E94 CD 26 80    		 CALL OS_PRINTMSG	;
518)   8E97 45 52 52 4F 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8E9B 52 20 52 45 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8E9F 41 44 49 4E 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EA3 47 20 42 4C 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EA7 4F 43 4B 21 		 DEFM "ERROR READING BLOCK!!! "	;
518)   8EAB 21 21 20    		 DEFM "ERROR READING BLOCK!!! "	;
519)   8EAE 00          		 DB 0 	;
520)   8EAF F1          		 POP AF	;
521)   8EB0 06 02       		 LD B,2	;
522)   8EB2 05          		 DEC B	;
523)   8EB3 C9          		 RET  	;
530)   8EB4 D5          		STRG_LOADFILE: PUSH DE	;
531)   8EB5 C5          		 PUSH BC	;
537)   8EB6 CD 0B 9D    		 CALL COPYFNAME	;
538)   8EB9 AF          		 XOR A   ;READ ONLY 	;READ ONLY
539)   8EBA CD 00 8E    		 CALL STRG_OPNFILE  	;
540)   8EBD 20 4B       		 JR NZ, FOPENERR	;
545)   8EBF C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
546)   8EC0 D1          		 POP DE  ;DEST BUFFER	;DEST BUFFER
547)   8EC1 CD 53 8E    		 CALL STRG_BLKREAD	;
548)   8EC4 28 20       		 JR Z, FREADOK	;
549)   8EC6 CD D6 9C    		 CALL PRINTNUM	;
550)   8EC9 CD 26 80    		 CALL OS_PRINTMSG	;
551)   8ECC 20 45 52 52 		 DEFM " ERROR READING FILE"	;
551)   8ED0 4F 52 20 52 		 DEFM " ERROR READING FILE"	;
551)   8ED4 45 41 44 49 		 DEFM " ERROR READING FILE"	;
551)   8ED8 4E 47 20 46 		 DEFM " ERROR READING FILE"	;
551)   8EDC 49 4C 45    		 DEFM " ERROR READING FILE"	;
552)   8EDF 0A 0D 00    		 DB 10,13,0	;
553)   8EE2 D5          		 PUSH DE	;
554)   8EE3 C5          		 PUSH BC	;
555)   8EE4 18 24       		 JR FOPENERR	;
556)   8EE6 C5          		FREADOK: PUSH BC	;
557)   8EE7 CD 49 9B    		 CALL B2D16	;
558)   8EEA 21 CB 00    		 LD HL,B2DBUF	;
559)   8EED CD DD 9B    		 CALL SKIPSPC	;
560)   8EF0 CD 28 8B    		 CALL RS_TXT	;
561)   8EF3 CD 26 80    		 CALL OS_PRINTMSG	;
562)   8EF6 20 42 59 54 		 DEFM " BYTES READ"	;
562)   8EFA 45 53 20 52 		 DEFM " BYTES READ"	;
562)   8EFE 45 41 44    		 DEFM " BYTES READ"	;
563)   8F01 0A 0D 00    		 DB 10,13,0	;
564)   8F04 CD 45 8E    		 CALL STRG_CLSFILE	;
565)   8F07 C1          		 POP BC   ;BYTES LOADED TO BUFFER	;BYTES LOADED TO BUFFER
566)   8F08 AF          		 XOR A	;
567)   8F09 C9          		 RET	;
568)   8F0A C1          		FOPENERR: POP BC	;
569)   8F0B D1          		 POP DE	;
570)   8F0C CD D6 9C    		 CALL PRINTNUM	;
571)   8F0F CD 26 80    		 CALL OS_PRINTMSG	;
572)   8F12 2D 2D 3E 45 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F16 52 52 4F 52 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F1A 20 41 54 20 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F1E 4C 4F 41 44 		 DEFM "-->ERROR AT LOADFILE"	;
572)   8F22 46 49 4C 45 		 DEFM "-->ERROR AT LOADFILE"	;
573)   8F26 0A 0D 00    		 DB 10,13,0	;
574)   8F29 21 8B 00    		 LD HL,STRGBUFF	;
575)   8F2C CD 28 8B    		 CALL RS_TXT	;
576)   8F2F CD 88 8B    		 CALL RS_NEWLINE	;
577)   8F32 37          		 SCF	;
578)   8F33 C9          		 RET	;
586)   8F34 D5          		STRG_READBUFR: PUSH DE	;
587)   8F35 C5          		 PUSH BC	;
593)   8F36 CD 0B 9D    		 CALL COPYFNAME	;
594)   8F39 AF          		 XOR A   ;READ ONLY 	;READ ONLY
595)   8F3A CD 00 8E    		 CALL STRG_OPNFILE  	;
596)   8F3D 20 32       		 JR NZ, RB_FOPENERR	;
601)   8F3F C1          		 POP BC  ;BYTE OFFSET	;BYTE OFFSET
602)   8F40 CD F2 8C    		 CALL STRG_SETPOS16	;
603)   8F43 01 F4 01    		 LD BC, 500 ;READ 500 BYTES  	;READ 500 BYTES
604)   8F46 D1          		 POP DE  ;DEST BUFFER	;DEST BUFFER
605)   8F47 CD 53 8E    		 CALL STRG_BLKREAD	;
606)   8F4A 28 1E       		 JR Z, RB_FREADOK	;
607)   8F4C CD D6 9C    		 CALL PRINTNUM	;
608)   8F4F CD 26 80    		 CALL OS_PRINTMSG	;
609)   8F52 20 45 52 52 		 DEFM " ERROR READING FILE"	;
609)   8F56 4F 52 20 52 		 DEFM " ERROR READING FILE"	;
609)   8F5A 45 41 44 49 		 DEFM " ERROR READING FILE"	;
609)   8F5E 4E 47 20 46 		 DEFM " ERROR READING FILE"	;
609)   8F62 49 4C 45    		 DEFM " ERROR READING FILE"	;
610)   8F65 0A 0D 00    		 DB 10,13,0	;
611)   8F68 18 09       		 JR RB_FOPENERR2	;
612)   8F6A C5          		RB_FREADOK: PUSH BC	;
620)   8F6B CD 45 8E    		 CALL STRG_CLSFILE	;
621)   8F6E C1          		 POP BC   ;BYTES LOADED TO BUFFER	;BYTES LOADED TO BUFFER
622)   8F6F AF          		 XOR A	;
623)   8F70 C9          		 RET	;
624)   8F71 C1          		RB_FOPENERR: POP BC	;
625)   8F72 D1          		 POP DE	;
626)   8F73 CD D6 9C    		RB_FOPENERR2: CALL PRINTNUM	;
627)   8F76 CD 26 80    		 CALL OS_PRINTMSG	;
628)   8F79 2D 2D 3E 45 		 DEFM "-->ERROR OPENING FILE"	;
628)   8F7D 52 52 4F 52 		 DEFM "-->ERROR OPENING FILE"	;
628)   8F81 20 4F 50 45 		 DEFM "-->ERROR OPENING FILE"	;
628)   8F85 4E 49 4E 47 		 DEFM "-->ERROR OPENING FILE"	;
628)   8F89 20 46 49 4C 		 DEFM "-->ERROR OPENING FILE"	;
628)   8F8D 45          		 DEFM "-->ERROR OPENING FILE"	;
629)   8F8E 0A 0D 00    		 DB 10,13,0	;
630)   8F91 21 8B 00    		 LD HL,STRGBUFF	;
631)   8F94 CD 28 8B    		 CALL RS_TXT	;
632)   8F97 CD 88 8B    		 CALL RS_NEWLINE	;
633)   8F9A 37          		 SCF	;
634)   8F9B C9          		 RET	;
639)   8F9C D5          		STRG_BLKWRITE: PUSH DE	;
640)   8F9D 3E 3C       		 LD A, CMD_BYTE_WRITE	;
641)   8F9F CD 80 91    		     CALL CH376_COMMD	;
642)   8FA2 79          		     LD A, C                           ; BYTES REQUEST ON BC	; BYTES REQUEST ON BC
643)   8FA3 CD 84 91    		     CALL CH376_DATAWR	;
644)   8FA6 78          		     LD A, B	;
645)   8FA7 CD 84 91    		     CALL CH376_DATAWR    	;
649)   8FAA E1          		 POP HL	;
650)   8FAB CD 11 91    		STBW_DOREST: CALL CH376_WTCMDEND 	;
651)   8FAE 28 1B       		 JR Z, WFR_DONE   ;Z=NO MORE OR CANNOT READ	;Z=NO MORE OR CANNOT READ
652)   8FB0 FE 1E       		 CP USB_INT_DISK_WRITE                    	;
653)   8FB2 20 19       		     JR NZ, WFR_ERROR	;
654)   8FB4 3E 2D       		 LD A,CMD_WR_REQ_DATA	;
655)   8FB6 CD 80 91    		 CALL CH376_COMMD 	;
657)   8FB9 CD 93 91    		 CALL CH376_DATARD ;READ BYTE COUNT UP TO 255 BYTES	;READ BYTE COUNT UP TO 255 BYTES
658)   8FBC 47          		 LD B,A   	;
660)   8FBD 7E          		STBW_NXT1: LD A,(HL)	;
661)   8FBE CD 84 91    		 CALL CH376_DATAWR	;
662)   8FC1 23          		 INC HL	;
663)   8FC2 10 F9       		 DJNZ STBW_NXT1	;
664)   8FC4 3E 3D       		 LD A, CMD_BYTE_WR_GO 	;
665)   8FC6 CD 80 91    		 CALL CH376_COMMD 	;
666)   8FC9 18 E0       		 JR STBW_DOREST	;
672)   8FCB B7          		 OR A	;
673)   8FCC C9          		 RET	;
674)   8FCD F5          		WFR_ERROR: PUSH AF	;
675)   8FCE CD D6 9C    		 CALL PRINTNUM	;
676)   8FD1 CD 26 80    		 CALL OS_PRINTMSG	;
677)   8FD4 45 52 52 4F 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   8FD8 52 20 57 52 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   8FDC 49 54 49 4E 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   8FE0 47 20 42 4C 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   8FE4 4F 43 4B 21 		 DEFM "ERROR WRITING BLOCK!!! "	;
677)   8FE8 21 21 20    		 DEFM "ERROR WRITING BLOCK!!! "	;
678)   8FEB 0D 0A 00    		 DB 13,10,0 	;
679)   8FEE F1          		 POP AF	;
680)   8FEF 06 02       		 LD B,2	;
681)   8FF1 05          		 DEC B	;
682)   8FF2 C9          		 RET  	;
690)   8FF3 D5          		STRG_SAVEFILE: PUSH DE	;
691)   8FF4 C5          		 PUSH BC	;
692)   8FF5 E5          		 PUSH HL  	;
693)   8FF6 CD 26 80    		 CALL OS_PRINTMSG	;
694)   8FF9 0A 0D       		 DB 10,13	;
695)   8FFB 53 41 56 45 		 DEFM "SAVE FILE"	;
695)   8FFF 20 46 49 4C 		 DEFM "SAVE FILE"	;
695)   9003 45          		 DEFM "SAVE FILE"	;
696)   9004 0A 0D 0A 0D 		 DB 10,13,10,13,0	;
696)   9008 00          		 DB 10,13,10,13,0	;
697)   9009 E1          		 POP HL	;
698)   900A CD 0B 9D    		 CALL COPYFNAME	;
699)   900D 3E 04       		 LD A,4   ;CREATE THE FILE	;CREATE THE FILE
700)   900F CD 00 8E    		 CALL STRG_OPNFILE  	;
701)   9012 20 4E       		 JR NZ, FSAVEERR	;
702)   9014 CD 26 80    		 CALL OS_PRINTMSG	;
703)   9017 0A 0D       		 DB 10,13	;
704)   9019 46 49 4C 45 		 DEFM "FILE CREATED OK"	;
704)   901D 20 43 52 45 		 DEFM "FILE CREATED OK"	;
704)   9021 41 54 45 44 		 DEFM "FILE CREATED OK"	;
704)   9025 20 4F 4B    		 DEFM "FILE CREATED OK"	;
705)   9028 0A 0D 00    		 DB 10,13,0	;
706)   902B C1          		 POP BC  ;BYTECOUNT	;BYTECOUNT
707)   902C D1          		 POP DE  ;SOURCE BUFFER	;SOURCE BUFFER
708)   902D CD 9C 8F    		 CALL STRG_BLKWRITE	;
709)   9030 28 19       		 JR Z, FWRITEOK	;
711)   9032 CD 26 80    		 CALL OS_PRINTMSG	;
712)   9035 20 45 52 52 		 DEFM " ERROR WRITING FILE"	;
712)   9039 4F 52 20 57 		 DEFM " ERROR WRITING FILE"	;
712)   903D 52 49 54 49 		 DEFM " ERROR WRITING FILE"	;
712)   9041 4E 47 20 46 		 DEFM " ERROR WRITING FILE"	;
712)   9045 49 4C 45    		 DEFM " ERROR WRITING FILE"	;
713)   9048 0A 0D 00    		 DB 10,13,0	;
714)   904B CD 26 80    		FWRITEOK: CALL OS_PRINTMSG	;
715)   904E 42 59 54 45 		 DEFM "BYTE WRITTEN"	;
715)   9052 20 57 52 49 		 DEFM "BYTE WRITTEN"	;
715)   9056 54 54 45 4E 		 DEFM "BYTE WRITTEN"	;
716)   905A 0A 0D 00    		 DB 10,13,0	;
717)   905D CD 45 8E    		 CALL STRG_CLSFILE	;
718)   9060 AF          		 XOR A	;
719)   9061 C9          		 RET	;
720)   9062 C1          		FSAVEERR: POP BC	;
721)   9063 D1          		 POP DE	;
722)   9064 CD D6 9C    		 CALL PRINTNUM	;
723)   9067 CD 26 80    		 CALL OS_PRINTMSG	;
724)   906A 2D 2D 3E 45 		 DEFM "-->ERROR CREATING FILE"	;
724)   906E 52 52 4F 52 		 DEFM "-->ERROR CREATING FILE"	;
724)   9072 20 43 52 45 		 DEFM "-->ERROR CREATING FILE"	;
724)   9076 41 54 49 4E 		 DEFM "-->ERROR CREATING FILE"	;
724)   907A 47 20 46 49 		 DEFM "-->ERROR CREATING FILE"	;
724)   907E 4C 45       		 DEFM "-->ERROR CREATING FILE"	;
725)   9080 0A 0D 00    		 DB 10,13,0	;
726)   9083 21 8B 00    		 LD HL,STRGBUFF	;
727)   9086 CD 28 8B    		 CALL RS_TXT	;
728)   9089 CD 88 8B    		 CALL RS_NEWLINE	;
729)   908C 37          		 SCF	;
730)   908D C9          		 RET	;
740)   908E C5          		STRG_WRITEBUFR: PUSH BC	;
741)   908F D5          		 PUSH DE	;
742)   9090 CD 0B 9D    		 CALL COPYFNAME   ;HL NOT NEEDED AFTER THIS	;HL NOT NEEDED AFTER THIS
743)   9093 3E 01       		 LD A,1    ;OPEN THE FILE FOR W	;OPEN THE FILE FOR W
744)   9095 CD 00 8E    		 CALL STRG_OPNFILE  	;
745)   9098 20 0B       		 JR NZ,SWB_CREATE  ;ON ERROR TRY TO CREATE THE FILE	;ON ERROR TRY TO CREATE THE FILE
747)   909A 01 FF FF    		 LD BC,$FFFF	;
748)   909D 11 FF FF    		 LD DE,$FFFF 	;
749)   90A0 CD FB 8C    		 CALL STRG_SETPOS  ;GOTO EOF	;GOTO EOF
750)   90A3 18 09       		 JR SWB_WRITEBUF	;
752)   90A5 3E 04       		 LD A,4	;
753)   90A7 CD 00 8E    		 CALL STRG_OPNFILE  	;
754)   90AA 3E 97       		 LD A,151   ;ERROR NUMBER	;ERROR NUMBER
755)   90AC 20 0D       		 JR NZ, SWB_ERR	;
756)   90AE D1          		SWB_WRITEBUF: POP DE	;
757)   90AF C1          		 POP BC    ;THE BYTE COUNT  	;THE BYTE COUNT
758)   90B0 CD 9C 8F    		 CALL STRG_BLKWRITE  	;
759)   90B3 F5          		 PUSH AF	;
760)   90B4 CD 45 8E    		 CALL STRG_CLSFILE  ;ALWAYS CLOSE FILE	;ALWAYS CLOSE FILE
761)   90B7 F1          		 POP AF	;
762)   90B8 C0          		 RET NZ    ;NZ IF ERROR	;NZ IF ERROR
763)   90B9 AF          		 XOR A	;
764)   90BA C9          		 RET	;
765)   90BB D1          		SWB_ERR: POP DE	;
766)   90BC C1          		 POP BC  	;
767)   90BD 37          		 SCF	;
768)   90BE C9          		 RET  	;
  3)   90BF 	            		INT376CMD EQU DEV376+1	;
  4)   90BF 	            		INT376DAT EQU DEV376	;
 90)   90BF CD 93 91    		CH376_GETDATA: CALL CH376_DATARD	;
 91)   90C2 FE 00       		 CP 0	;
 92)   90C4 C8          		 RET Z   ;NO DATA AVAILABLE	;NO DATA AVAILABLE
 99)   90C5 F5          		               PUSH AF	;
100)   90C6 11 8B 00    		 LD DE,USBBUF	;
101)   90C9 47          		 LD B,A	;
102)   90CA CD 93 91    		UDC_NXT1: CALL CH376_DATARD	;
104)   90CD 12          		 LD (DE),A	;
105)   90CE 13          		 INC DE	;
109)   90CF 10 F9       		 DJNZ UDC_NXT1 	;
110)   90D1 F1          		               POP AF	;
111)   90D2 C9          		 RET	;
114)   90D3 F5          		DISKERROR: PUSH AF	;
115)   90D4 CD 32 8B    		 CALL RS_MESG	;
116)   90D7 46 41 54 41 		 DEFM "FATAL ERROR:" 	;
116)   90DB 4C 20 45 52 		 DEFM "FATAL ERROR:" 	;
116)   90DF 52 4F 52 3A 		 DEFM "FATAL ERROR:" 	;
117)   90E3 00          		 DB 0  	;
118)   90E4 F1          		 POP AF	;
119)   90E5 CD D6 9C    		 CALL PRINTNUM	;
120)   90E8 21 F4 90    		 LD HL,ERR_PART	;
121)   90EB FE 92       		 CP ERR_TYPE_ERROR	;
122)   90ED 28 01       		 JR Z,PRNMES	;
123)   90EF C9          		 RET	;
124)   90F0 CD 28 8B    		PRNMES: CALL RS_TXT 	;
125)   90F3 C9          		 RET	;
127)   90F4 50 41 52 54 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   90F8 49 54 49 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   90FC 4E 2E 4E 4F 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9100 54 2E 53 55 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9104 50 50 4F 52 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   9108 54 45 44 21 		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
127)   910C 21 21       		ERR_PART DEFM "PARTITION NOT SUPPORTED!!!"	;
128)   910E 0A 0D 00    		 DB 10,13,0	;
138)   9111 E5          		CH376_WTCMDEND: PUSH HL	;
139)   9112 CD 1F 91    		 CALL CH376_WAITINT	;
140)   9115 E1          		 POP HL	;
141)   9116 C0          		               RET NZ	;
142)   9117 D8          		 RET C	;
143)   9118 AF          		 XOR A	;
144)   9119 CD 3E 91    		 CALL CH376_GETSTAT	;
145)   911C FE 14       		 CP USB_INT_SUCCESS  	;
146)   911E C9          		 RET  ;NZ FLAG MEANS ERROR USUALLY	;NZ FLAG MEANS ERROR USUALLY
152)   911F AF          		CH376_WAITINT: XOR A	;
153)   9120 01 32 00    		 LD BC,50	;
154)   9123 CD 90 91    		C3AGN2: CALL CH376_INSTAT	;
155)   9126 CB 7F       		 BIT 7,A	;
156)   9128 C8          		 RET Z	;
157)   9129 F5          		 PUSH AF	;
158)   912A C5          		 PUSH BC	;
159)   912B 06 14       		 LD B,20	;
160)   912D CD 71 9A    		 CALL DELAYMICRO	;
161)   9130 C1          		 POP BC	;
162)   9131 F1          		 POP AF	;
163)   9132 0B          		 DEC BC	;
164)   9133 5F          		 LD E,A	;
165)   9134 78          		 LD A,B	;
166)   9135 B1          		 OR C	;
167)   9136 7B          		 LD A,E	;
168)   9137 20 EA       		 JR NZ, C3AGN2  	;
173)   9139 37          		 SCF ;TIMEOUT       	;TIMEOUT
174)   913A 06 02       		 LD B,2	;
175)   913C 05          		 DEC B  ;NZ FLAG	;NZ FLAG
176)   913D C9          		 RET	;
178)   913E 3E 22       		CH376_GETSTAT: LD A,CMD_GET_STATUS	;
179)   9140 CD 80 91    		 CALL CH376_COMMD	;
180)   9143 CD 93 91    		 CALL CH376_DATARD	;
181)   9146 C9          		 RET	;
189)   9147 01 C4 09    		CH376_CHOK: LD BC,2500	;
190)   914A CD 90 91    		C3AGN: CALL CH376_INSTAT	;
191)   914D CB 67       		 BIT 4,A   ;CHECK BUSY	;CHECK BUSY
192)   914F C8          		 RET Z   	;
193)   9150 C5          		 PUSH BC	;
194)   9151 F5          		 PUSH AF	;
195)   9152 06 32       		 LD B,50	;
196)   9154 CD 71 9A    		 CALL DELAYMICRO	;
197)   9157 F1          		 POP AF	;
198)   9158 C1          		 POP BC	;
199)   9159 0B          		 DEC BC	;
200)   915A 5F          		 LD E,A	;
201)   915B 78          		 LD A,B	;
202)   915C B1          		 OR C	;
203)   915D 7B          		 LD A,E	;
204)   915E 20 EA       		 JR NZ,C3AGN	;
205)   9160 F5          		 PUSH AF  	;
206)   9161 CD D6 9C    		 CALL PRINTNUM  	;
207)   9164 F1          		 POP AF	;
208)   9165 CD 32 8B    		 CALL RS_MESG	;
209)   9168 2A 2A 2A 43 		 DEFM "***CMD TIMEOUT***"	;
209)   916C 4D 44 20 54 		 DEFM "***CMD TIMEOUT***"	;
209)   9170 49 4D 45 4F 		 DEFM "***CMD TIMEOUT***"	;
209)   9174 55 54 2A 2A 		 DEFM "***CMD TIMEOUT***"	;
209)   9178 2A          		 DEFM "***CMD TIMEOUT***"	;
210)   9179 0A 0D 00    		 DB 10,13,0       	;
211)   917C 06 02       		 LD B,2	;
212)   917E 05          		 DEC B  ;NZ FLAG	;NZ FLAG
213)   917F C9          		 RET	;
219)   9180 D3 31       		CH376_COMMD: OUT (INT376CMD),A	;
220)   9182 18 02       		 JR C3D_CONT	;
223)   9184 D3 30       		CH376_DATAWR: OUT (INT376DAT),A 	;
224)   9186 C5          		C3D_CONT: PUSH BC	;
225)   9187 D5          		 PUSH DE	;
226)   9188 E5          		 PUSH HL	;
227)   9189 CD 47 91    		 CALL CH376_CHOK  ;CHECK NOT BUSY	;CHECK NOT BUSY
228)   918C E1          		 POP HL	;
229)   918D D1          		 POP DE	;
230)   918E C1          		 POP BC	;
231)   918F C9          		 RET	;
233)   9190 DB 31       		CH376_INSTAT: IN A,(INT376CMD)	;
235)   9192 C9          		 RET	;
238)   9193 DB 30       		CH376_DATARD: IN A,(INT376DAT)	;
243)   9195 C9          		 RET	;
246)   9196 3E 01       		CH376_VERSION: LD A,CMD_GET_IC_VER 	;
247)   9198 CD 80 91    		 CALL CH376_COMMD	;
248)   919B CD 93 91    		 CALL CH376_DATARD	;
249)   919E E6 0F       		 AND 00001111B	;
250)   91A0 C9          		               RET	;
252)   91A1 3E 05       		CH376_INIT:    LD A,CMD_RESET_ALL	;
253)   91A3 CD 80 91    		 CALL CH376_COMMD  	;
254)   91A6 3E 06       		 LD A,CMD_CHECK_EXIST 	;
255)   91A8 CD 80 91    		 CALL CH376_COMMD	;
256)   91AB 3E 57       		 LD A,87	;
257)   91AD CD 84 91    		 CALL CH376_DATAWR	;
258)   91B0 CD 93 91    		 CALL CH376_DATARD	;
259)   91B3 FE A8       		 CP 255 - 87 	;
260)   91B5 C9          		               RET               	;
264)   91B6 F5          		CH376_SETUSB: PUSH AF	;
265)   91B7 3E 15       		               LD A,CMD_SETUSB_MODE	;
266)   91B9 CD 80 91    		 CALL CH376_COMMD	;
267)   91BC F1          		               POP AF	;
268)   91BD CD 84 91    		 CALL CH376_DATAWR	;
270)   91C0 06 14       		 LD B,20	;
271)   91C2 CD 71 9A    		 CALL DELAYMICRO     ;WAIT A BIT	;WAIT A BIT
276)   91C5 CD 3E 91    		 CALL CH376_GETSTAT	;
277)   91C8 FE 15       		 CP USB_INT_CONNECT	;
278)   91CA C8          		 RET Z	;
280)   91CB F5          		 PUSH AF	;
281)   91CC CD 32 8B    		 CALL CH376_ERROR	;
282)   91CF 45 52 52 3A 		 DEFM "ERR: SETUSBMODE"	;
282)   91D3 20 53 45 54 		 DEFM "ERR: SETUSBMODE"	;
282)   91D7 55 53 42 4D 		 DEFM "ERR: SETUSBMODE"	;
282)   91DB 4F 44 45    		 DEFM "ERR: SETUSBMODE"	;
283)   91DE 0A 0D 00    		 DB 10,13,0	;
284)   91E1 F1          		 POP AF	;
285)   91E2 CD D6 9C    		 CALL PRINTNUM	;
286)   91E5 C9          		               RET	;
291)   91E6 3E 30       		CH376_CONNECT: LD A, CMD_DISK_CONNECT	;
292)   91E8 CD 80 91    		     CALL CH376_COMMD	;
293)   91EB CD 11 91    		 CALL CH376_WTCMDEND	;
295)   91EE D8          		 RET C ;TIMEOUT	;TIMEOUT
296)   91EF C8          		 RET Z ;CONNECT OK	;CONNECT OK
301)   91F0 C9          		 RET ;NZ HERE	;NZ HERE
311)   91F1 3E 31       		CH376_MOUNT:   LD A,CMD_DISK_MOUNT  	;
312)   91F3 CD 80 91    		 CALL CH376_COMMD	;
313)   91F6 CD 11 91    		 CALL CH376_WTCMDEND  	;
314)   91F9 C9          		 RET	;
319)   91FA 06 0A       		CH376_MOUNTDEV:   LD B,10  ;TRY TO MOUNT 10 TIMES	;TRY TO MOUNT 10 TIMES
320)   91FC C5          		CM_AGN1: PUSH BC	;
321)   91FD CD B6 91    		 CALL CH376_SETUSB	;
322)   9200 20 10       		 JR NZ,CM_ERROR	;
323)   9202 CD E6 91    		 CALL CH376_CONNECT	;
324)   9205 20 0B       		 JR NZ,CM_ERROR	;
325)   9207 3E 31       		        LD A,CMD_DISK_MOUNT  	;
326)   9209 CD 80 91    		 CALL CH376_COMMD	;
327)   920C CD 11 91    		 CALL CH376_WTCMDEND	;
328)   920F C1          		 POP BC	;
329)   9210 C8          		 RET Z	;
330)   9211 C5          		 PUSH BC	;
331)   9212 06 64       		CM_ERROR: LD B,100	;
332)   9214 CD 86 9A    		 CALL DELAYMILI     ;WAIT A BIT	;WAIT A BIT
333)   9217 C1          		 POP BC	;
334)   9218 10 E2       		 DJNZ CM_AGN1  	;
335)   921A 06 02       		 LD B,2	;
336)   921C 05          		 DEC B  ;NZ  	;NZ
337)   921D F5          		 PUSH AF	;
338)   921E CD 32 8B    		 CALL CH376_ERROR	;
339)   9221 45 52 52 3A 		 DEFM "ERR: MOUNT DISK"	;
339)   9225 20 4D 4F 55 		 DEFM "ERR: MOUNT DISK"	;
339)   9229 4E 54 20 44 		 DEFM "ERR: MOUNT DISK"	;
339)   922D 49 53 4B    		 DEFM "ERR: MOUNT DISK"	;
340)   9230 0A 0D 00    		 DB 10,13,0	;
341)   9233 F1          		     POP AF	;
342)   9234 C9          		               RET	;
345)   9235 7E          		CH376_WRSTRING: LD A,(HL)	;
351)   9236 CD 84 91    		 CALL CH376_DATAWR	;
352)   9239 C0          		 RET NZ	;
353)   923A 7E          		 LD A,(HL)	;
354)   923B B7          		 OR A	;
355)   923C C8          		 RET Z	;
356)   923D 23          		 INC HL	;
357)   923E 18 F5       		 JR CH376_WRSTRING	;
  7)   9240 	            		 DI2C_STA EQU DEVI2C+0      ;00 A0=LOW A1=LOW READONLY  DEF $F8	;00 A0=LOW A1=LOW READONLY  DEF $F8
  8)   9240 	            		 DI2C_INDPTR EQU DEVI2C+0     ;00 A0=LOW A1=LOW WRITEONLY DEF $00	;00 A0=LOW A1=LOW WRITEONLY DEF $00
  9)   9240 	            		 DI2C_DAT EQU DEVI2C+1      ;01 A0=HIGH A1=LOW R/W   DEF $00	;01 A0=HIGH A1=LOW R/W   DEF $00
 10)   9240 	            		 DI2C_CON EQU DEVI2C+3      ;11 A0=HIGH A1=HIGH R/W  DEF $00	;11 A0=HIGH A1=HIGH R/W  DEF $00
 11)   9240 	            		 DI2C_INDIR EQU DEVI2C+2     ;10 A0=LOW A1=HIGH R/W  DEF $00	;10 A0=LOW A1=HIGH R/W  DEF $00
 56)   9240 C5          		I2C_RDSTAT_WT: PUSH BC	;
 57)   9241 01 00 20    		 LD BC, $2000	;
 58)   9244 DB 73       		I2CRWT_AGN: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 59)   9246 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 60)   9248 20 05       		 JR NZ, I2CRWT_OK       ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 61)   924A 0B          		 DEC BC	;
 62)   924B 78          		 LD A, B	;
 63)   924C B1          		 OR C	;
 64)   924D 20 F5       		 JR NZ, I2CRWT_AGN	;
 65)   924F C1          		I2CRWT_OK: POP BC	;
 66)   9250 DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 67)   9252 C9          		 RET	;
 69)   9253 DB 73       		I2C_RDSTAT_NW: IN A, (DI2C_CON)      ;READ CONTROL REGISTER BIT 3 IS SI	;READ CONTROL REGISTER BIT 3 IS SI
 70)   9255 CB 5F       		 BIT 3, A        ;CHECK BIT 3 SI	;CHECK BIT 3 SI
 71)   9257 3E FF       		 LD A, $FF        ;$FF=INVALID STATUS	;$FF=INVALID STATUS
 72)   9259 C8          		 RET Z         ;BIT 3 SHOULD BE SET IF VALID STATUS	;BIT 3 SHOULD BE SET IF VALID STATUS
 73)   925A DB 70       		 IN A, (DI2C_STA)       ;VALID HERE	;VALID HERE
 74)   925C C9          		 RET	;
 77)   925D 3E 01       		I2C_INIT: LD A, I2CADR	;
 78)   925F D3 70       		 OUT (DI2C_INDPTR), A	;
 79)   9261 3E E0       		 LD A, $E0	;
 80)   9263 D3 72       		 OUT (DI2C_INDIR), A       ;SET MY SLAVE ADDR	;SET MY SLAVE ADDR
 82)   9265 3E 40       		 LD A, $40        ;INIT	;INIT
 83)   9267 D3 73       		 OUT (DI2C_CON), A      ;	;
 84)   9269 06 FA       		 LD B, 250	;
 85)   926B CD 71 9A    		 CALL DELAYMICRO	;
 86)   926E 06 FA       		 LD B, 250	;
 87)   9270 CD 71 9A    		 CALL DELAYMICRO       ;DELAY 500 MICROSECS	;DELAY 500 MICROSECS
 92)   9273 3E 06       		 LD A, I2CMODE	;
 93)   9275 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 94)   9277 3E 00       		 LD A, 0        ;SELECT MODE 0	;SELECT MODE 0
 95)   9279 D3 72       		 OUT (DI2C_INDIR), A	;
 96)   927B 3E 02       		 LD A, I2CSCLL	;
 97)   927D D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
 98)   927F 3E 9D       		 LD A, $9D        ;SELECT CLK L	;SELECT CLK L
 99)   9281 D3 72       		 OUT (DI2C_INDIR), A	;
100)   9283 3E 03       		 LD A, I2CSCLH	;
101)   9285 D3 70       		 OUT (DI2C_INDPTR), A      ;SELECT I2CMODE REGISTER	;SELECT I2CMODE REGISTER
102)   9287 3E 86       		 LD A, $86        ;SELECT CLK H	;SELECT CLK H
103)   9289 D3 72       		 OUT (DI2C_INDIR), A	;
105)   928B C9          		 RET	;
112)   928C 3E 60       		I2C_WR_BYTE: LD A, $60       ;START	;START
113)   928E D3 73       		 OUT (DI2C_CON), A	;
114)   9290 CD 40 92    		WRB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
115)   9293 5F          		 LD E, A        ;SAVE STATUS	;SAVE STATUS
116)   9294 FE 08       		 CP MASTER_START_TXed      ;A HAS THE STATUS	;A HAS THE STATUS
117)   9296 28 21       		 JR Z, WRB_S1	;
118)   9298 FE 10       		 CP MASTER_RESTART_TXed	;
119)   929A 28 1D       		 JR Z, WRB_S1	;
120)   929C FE 28       		 CP MASTER_DATA_W_ACK	;
121)   929E 28 26       		 JR Z, WRB_S2	;
122)   92A0 FE 18       		 CP MASTER_SLA_W_ACK	;
123)   92A2 28 23       		 JR Z, WRB_S3	;
124)   92A4 FE 20       		 CP MASTER_SLA_W_NAK	;
125)   92A6 28 2D       		 JR Z, WRB_EXIT	;
126)   92A8 FE 30       		 CP MASTER_DATA_W_NAK	;
127)   92AA 28 29       		 JR Z, WRB_EXIT	;
128)   92AC FE 38       		 CP MASTER_ARB_LOST	;
129)   92AE C8          		 RET Z	;
130)   92AF FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
131)   92B1 C8          		 RET Z	;
132)   92B2 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
133)   92B4 C8          		 RET Z	;
134)   92B5 FE D8       		 CP SLAVE_GENERALCALL_AL	;
135)   92B7 C8          		 RET Z	;
136)   92B8 C9          		 RET	;
138)   92B9 7A          		WRB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
139)   92BA CB 27       		 SLA A	;
140)   92BC E6 FE       		 AND $FE        ;ADDR+WRITE ON D0=0	;ADDR+WRITE ON D0=0
141)   92BE D3 71       		 OUT (DI2C_DAT), A	;
142)   92C0 3E 40       		 LD A, $40	;
143)   92C2 D3 73       		 OUT (DI2C_CON), A	;
144)   92C4 18 CA       		 JR WRB_LP1	;
145)   92C6 0B          		WRB_S2: DEC BC	;
146)   92C7 78          		WRB_S3: LD A, B	;
147)   92C8 B1          		 OR C	;
148)   92C9 28 0A       		 JR Z, WRB_EXIT	;
149)   92CB 7E          		 LD A, (HL)	;
150)   92CC 23          		 INC HL	;
151)   92CD D3 71       		 OUT (DI2C_DAT), A	;
152)   92CF 3E 40       		 LD A, $40	;
153)   92D1 D3 73       		 OUT (DI2C_CON), A	;
154)   92D3 18 BB       		 JR WRB_LP1	;
156)   92D5 3E 50       		WRB_EXIT: LD A, $50       ;STOP	;STOP
157)   92D7 D3 73       		 OUT (DI2C_CON), A	;
158)   92D9 78          		 LD A, B	;
159)   92DA B1          		 OR C	;
160)   92DB C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
166)   92DC 78          		I2C_RD_BYTE: LD A, B	;
167)   92DD B1          		 OR C	;
168)   92DE C8          		 RET Z        ;RETURN IF ZERO BYTE COUNT	;RETURN IF ZERO BYTE COUNT
169)   92DF 3E 60       		 LD A, $60	;
170)   92E1 D3 73       		 OUT (DI2C_CON), A	;
171)   92E3 CD 40 92    		RDB_LP1: CALL I2C_RDSTAT_WT      ;WAIT FOR INTERRUPT SI=1	;WAIT FOR INTERRUPT SI=1
172)   92E6 1E 00       		 LD E, 0	;
173)   92E8 FE 08       		 CP MASTER_START_TXed	;
174)   92EA 28 1F       		 JR Z, RDB_S1	;
176)   92EC 28 1D       		 JR Z, RDB_S1	;
177)   92EE FE 58       		 CP MASTER_DATA_R_NAK	;
178)   92F0 28 26       		 JR Z, RDB_S2	;
179)   92F2 FE 50       		 CP MASTER_DATA_R_ACK	;
180)   92F4 28 24       		 JR Z, RDB_S3	;
181)   92F6 FE 40       		 CP MASTER_SLA_R_ACK	;
182)   92F8 28 25       		 JR Z, RDB_S4	;
183)   92FA FE 48       		 CP MASTER_SLA_R_NAK	;
184)   92FC 28 38       		 JR Z, RDB_EXIT	;
185)   92FE FE 38       		 CP MASTER_ARB_LOST	;
186)   9300 C8          		 RET Z	;
187)   9301 FE B0       		 CP SLAVE_AL_ADDRESSED_R	;
188)   9303 C8          		 RET Z	;
189)   9304 FE 68       		 CP SLAVE_AL_ADDRESSED_W	;
190)   9306 C8          		 RET Z	;
191)   9307 FE D8       		 CP SLAVE_GENERALCALL_AL	;
192)   9309 C8          		 RET Z	;
193)   930A C9          		 RET	;
196)   930B 7A          		RDB_S1: LD A, D        ;DEVICE ADDR	;DEVICE ADDR
197)   930C CB 27       		 SLA A	;
198)   930E F6 01       		 OR $01         ;ADDR + READ COMMAND	;ADDR + READ COMMAND
199)   9310 D3 71       		 OUT (DI2C_DAT), A	;
200)   9312 3E 40       		 LD A, $40	;
201)   9314 D3 73       		 OUT (DI2C_CON), A	;
202)   9316 18 CB       		 JR RDB_LP1	;
203)   9318 1E 01       		RDB_S2: LD E, 1        ;MEANS WE EXIT	;MEANS WE EXIT
204)   931A DB 71       		RDB_S3: IN A, (DI2C_DAT)       ;READ DATA	;READ DATA
205)   931C 77          		 LD (HL), A	;
206)   931D 23          		 INC HL	;
207)   931E 0B          		 DEC BC	;
208)   931F 78          		RDB_S4: LD A, B        ; IS LENGTH 0	; IS LENGTH 0
209)   9320 B1          		 OR C	;
210)   9321 28 13       		 JR Z, RDB_EXIT	;
211)   9323 7B          		 LD A, E	;
212)   9324 FE 01       		 CP 1	;
213)   9326 28 0E       		 JR Z, RDB_EXIT	;
214)   9328 78          		 LD A, B	;
215)   9329 81          		 ADD C	;
216)   932A FE 01       		 CP 1	;
217)   932C 3E 40       		 LD A, $40	;
218)   932E 28 02       		 JR Z, RDB_NXT1	;
219)   9330 3E C0       		 LD A, $C0	;
220)   9332 D3 73       		RDB_NXT1: OUT (DI2C_CON), A      ;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0	;WRITE $40 IF BYTE COUNT BC=1 ELSE WRITE $C0
221)   9334 18 AD       		 JR RDB_LP1	;
223)   9336 3E 50       		RDB_EXIT: LD A, $50	;
224)   9338 D3 73       		 OUT (DI2C_CON), A	;
225)   933A 78          		 LD A, B	;
226)   933B B1          		 OR C	;
227)   933C C9          		 RET         ;IF A NOT ZERO THEN ERROR	;IF A NOT ZERO THEN ERROR
112)   933D 16 00       		LCD16_WR4BITS: LD D, 0       ;PIN MAP VALUES FRO 8574 BIT 0-7	;PIN MAP VALUES FRO 8574 BIT 0-7
114)   933F 0F          		 RRCA         ;D4 = D0,D5=D1,D6=D2,D7=D3	;D4 = D0,D5=D1,D6=D2,D7=D3
115)   9340 30 02       		 JR NC, LWNXT1        ;BIT 0 NOT SET JR	;BIT 0 NOT SET JR
116)   9342 CB E2       		 SET D4, D	;
117)   9344 0F          		LWNXT1: RRCA	;
118)   9345 30 02       		 JR NC, LWNXT2        ;BIT 1 NOT SET JR	;BIT 1 NOT SET JR
119)   9347 CB EA       		 SET D5, D	;
120)   9349 0F          		LWNXT2: RRCA	;
121)   934A 30 02       		 JR NC, LWNXT3        ;BIT 2 NOT SET JR	;BIT 2 NOT SET JR
122)   934C CB F2       		 SET D6, D	;
123)   934E 0F          		LWNXT3: RRCA	;
124)   934F 30 02       		 JR NC, LWNXT4        ;BIT 3 NOT SET JR	;BIT 3 NOT SET JR
125)   9351 CB FA       		 SET D7, D	;
126)   9353 7B          		LWNXT4: LD A, E	;
127)   9354 0F          		 RRCA	;
128)   9355 30 02       		 JR NC, LWNXT5	;
129)   9357 CB C2       		 SET RS, D	;
131)   9359 3A 7F 00    		 LD A,(LCD_STSMASK)       ;ADD THE BACKLIGHT MASKS  	;ADD THE BACKLIGHT MASKS
132)   935C B2          		 OR D	;
133)   935D 57          		 LD D,A	;
135)   935E CB D2       		 SET EN, D        ;EN=HIGH	;EN=HIGH
136)   9360 7A          		 LD A, D	;
137)   9361 CD 6B 93    		 CALL LCD16_I2CSEND	;
138)   9364 CB 92       		 RES EN, D        ;EN=LOW	;EN=LOW
139)   9366 7A          		 LD A, D	;
140)   9367 CD 6B 93    		 CALL LCD16_I2CSEND	;
141)   936A C9          		 RET	;
145)   936B D5          		LCD16_I2CSEND: PUSH DE	;
146)   936C E5          		 PUSH HL	;
147)   936D 21 8B 00    		 LD HL, BUFFER	;
148)   9370 77          		 LD (HL), A	;
149)   9371 16 27       		 LD D, LCDADDR	;
150)   9373 01 01 00    		 LD BC, 1	;
151)   9376 CD 8C 92    		 CALL I2C_WRITE	;
152)   9379 E1          		 POP HL	;
153)   937A D1          		 POP DE	;
154)   937B C9          		 RET	;
157)   937C 1E 00       		LCD16_COMMD: LD E, COMMAND	;
158)   937E 18 02       		 JR LCD16_SEND	;
161)   9380 1E 01       		LCD16_DATA: LD E, LCD_DATA 	;
164)   9382 57          		LCD16_SEND: LD D, A       ;SAVE A FOR LATER USE	;SAVE A FOR LATER USE
165)   9383 7B          		 LD A, E	;
166)   9384 0F          		 RRCA	;
167)   9385 38 07       		 JR C, ISCMDDATA	;
168)   9387 0F          		 RRCA	;
169)   9388 30 04       		 JR NC, ISCMDDATA	;
171)   938A 1E 00       		 LD E, COMMAND        ;SEND 4 BITS AS COMMAND E=0	;SEND 4 BITS AS COMMAND E=0
172)   938C 18 0E       		 JR LCSD_4BIT	;
173)   938E 7A          		ISCMDDATA: LD A, D	;
174)   938F CB 3F       		 SRL A	;
175)   9391 CB 3F       		 SRL A	;
176)   9393 CB 3F       		 SRL A	;
177)   9395 CB 3F       		 SRL A	;
178)   9397 D5          		 PUSH DE	;
179)   9398 CD 3D 93    		 CALL LCD16_WR4BITS      ;HIGH 4 BITS FIRST	;HIGH 4 BITS FIRST
180)   939B D1          		 POP DE	;
181)   939C 7A          		LCSD_4BIT: LD A, D	;
182)   939D E6 0F       		 AND $0F	;
183)   939F CD 3D 93    		 CALL LCD16_WR4BITS      ;LOW 4 BITS NEXT	;LOW 4 BITS NEXT
184)   93A2 C9          		 RET	;
186)   93A3 3E 03       		@LCD16_INIT: LD A, 3       ;SET LCD TO 4BIT MODE	;SET LCD TO 4BIT MODE
187)   93A5 1E 02       		 LD E, FOUR_BITS	;
188)   93A7 CD 82 93    		 CALL LCD16_SEND	;
189)   93AA 01 00 30    		 LD BC, $3000	;
190)   93AD CD 35 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
191)   93B0 3E 03       		 LD A, 3	;
192)   93B2 1E 02       		 LD E, FOUR_BITS	;
193)   93B4 CD 82 93    		 CALL LCD16_SEND	;
194)   93B7 01 00 30    		 LD BC, $3000	;
195)   93BA CD 35 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
196)   93BD 3E 03       		 LD A, 3	;
197)   93BF 1E 02       		 LD E, FOUR_BITS	;
198)   93C1 CD 82 93    		 CALL LCD16_SEND	;
199)   93C4 01 00 30    		 LD BC, $3000	;
200)   93C7 CD 35 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
201)   93CA 3E 02       		 LD A, 2        ;PUT 4 BIT MODE	;PUT 4 BIT MODE
202)   93CC 1E 02       		 LD E, FOUR_BITS	;
203)   93CE CD 82 93    		 CALL LCD16_SEND	;
204)   93D1 01 00 30    		 LD BC, $3000	;
205)   93D4 CD 35 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
207)   93D7 3E 28       		 LD A, LCD_FUNCTIONSET OR LCD_2LINE	;
208)   93D9 CD 7C 93    		 CALL LCD16_COMMD	;
209)   93DC 3E 02       		 LD A, LCD_DISPLAYON OR LCD_CURSOROFF OR LCD_BLINKOFF	;
210)   93DE 32 7D 00    		 LD (LCD_DSPCTRL), A	;
211)   93E1 CD 09 94    		 CALL LCD16_DISP	;
212)   93E4 CD 24 94    		 CALL LCD16_CLR	;
213)   93E7 3E 02       		 LD A, LCD_ENTRYLEFT OR LCD_ENTRYSHIFTDECREMENT	;
214)   93E9 32 7E 00    		 LD (LCD_DSPMODE), A	;
215)   93EC F6 04       		 OR LCD_ENTRYMODESET	;
216)   93EE CD 7C 93    		 CALL LCD16_COMMD	;
217)   93F1 01 00 30    		 LD BC, $3000	;
218)   93F4 CD 35 9B    		 CALL PAUSE_LOOP       ;DELAY 4,5ms	;DELAY 4,5ms
219)   93F7 CD A7 94    		 CALL LCD16_BKLTON      ;BACKLIGHT ON BY DEFAULT	;BACKLIGHT ON BY DEFAULT
220)   93FA C9          		 RET	;
222)   93FB 3A 7D 00    		@LCD16_NODISP: LD A, (LCD_DSPCTRL)	;
223)   93FE CB 97       		 RES LCD_DISPLAYON, A	;
224)   9400 32 7D 00    		 LD (LCD_DSPCTRL), A	;
225)   9403 F6 08       		 OR LCD_DISPLAYCONTROL	;
226)   9405 CD 7C 93    		 CALL LCD16_COMMD	;
227)   9408 C9          		 RET	;
228)   9409 3A 7D 00    		@LCD16_DISP: LD A, (LCD_DSPCTRL)	;
229)   940C CB D7       		 SET LCD_DISPLAYON, A	;
230)   940E 32 7D 00    		 LD (LCD_DSPCTRL), A	;
231)   9411 F6 08       		 OR LCD_DISPLAYCONTROL	;
232)   9413 CD 7C 93    		 CALL LCD16_COMMD	;
233)   9416 C9          		 RET	;
235)   9417 01 D0 07    		LCDDELAY: LD BC, HOME_CLEAR_EXEC	;
236)   941A C5          		LCLR_AGN1: PUSH BC	;
237)   941B CD 71 9A    		 CALL DELAYMICRO	;
238)   941E C1          		 POP BC	;
239)   941F 0D          		 DEC C	;
240)   9420 E2 1A 94    		 JP PO, LCLR_AGN1	;
241)   9423 C9          		 RET	;
243)   9424 3E 01       		@LCD16_CLR: LD A, LCD_CLEARDISPLAY      ;clear display, set cursor position to zero	;clear display, set cursor position to zero
244)   9426 CD 7C 93    		 CALL LCD16_COMMD	;
245)   9429 CD 17 94    		 CALL LCDDELAY	;
246)   942C C9          		 RET	;
249)   942D 7E          		@LCD16_PRINT: LD A, (HL)	;
250)   942E FE 00       		 CP 0	;
251)   9430 C8          		 RET Z	;
252)   9431 CD 80 93    		 CALL LCD16_DATA	;
253)   9434 23          		 INC HL	;
254)   9435 18 F6       		 JR LCD16_PRINT	;
257)   9437 CD 80 93    		@LCD16_PRCHR: CALL LCD16_DATA	;
258)   943A C9          		 RET	;
260)   943B 3E 02       		@LCD16_HOME: LD A, LCD_RETURNHOME	;
261)   943D CD 7C 93    		 CALL LCD16_COMMD	;
262)   9440 CD 17 94    		 CALL LCDDELAY	;
263)   9443 C9          		 RET	;
266)   9444 00 40 14 54 		ROWOFFSET: DB $00,$40,$14,$54	;
267)   9448 06 00       		@LCD16_SETCURS: LD B, 0	;
268)   944A 4B          		 LD C, E	;
269)   944B 21 44 94    		 LD HL, ROWOFFSET	;
270)   944E 09          		 ADD HL, BC	;
271)   944F 7E          		 LD A, (HL)	;
272)   9450 82          		 ADD D	;
273)   9451 F6 80       		 OR LCD_SETDDRAMADDR	;
274)   9453 CD 7C 93    		 CALL LCD16_COMMD	;
275)   9456 C9          		 RET	;
277)   9457 3A 7D 00    		@LCD16_CURSOFF: LD A, (LCD_DSPCTRL)	;
278)   945A CB 8F       		 RES LCD_CURSORON, A	;
279)   945C 32 7D 00    		 LD (LCD_DSPCTRL), A	;
280)   945F F6 08       		 OR LCD_DISPLAYCONTROL	;
281)   9461 CD 7C 93    		 CALL LCD16_COMMD	;
282)   9464 C9          		 RET	;
285)   9465 3A 7D 00    		@LCD16_CURSON: LD A, (LCD_DSPCTRL)	;
286)   9468 CB CF       		 SET LCD_CURSORON, A	;
287)   946A 32 7D 00    		 LD (LCD_DSPCTRL), A	;
288)   946D F6 08       		 OR LCD_DISPLAYCONTROL	;
289)   946F CD 7C 93    		 CALL LCD16_COMMD	;
290)   9472 C9          		 RET	;
292)   9473 3A 7D 00    		@LCD16_BLINKOFF: LD A, (LCD_DSPCTRL)	;
293)   9476 CB 87       		 RES LCD_BLINKON, A	;
294)   9478 32 7D 00    		 LD (LCD_DSPCTRL), A	;
295)   947B F6 08       		 OR LCD_DISPLAYCONTROL	;
296)   947D CD 7C 93    		 CALL LCD16_COMMD	;
297)   9480 C9          		 RET	;
300)   9481 3A 7D 00    		@LCD16_BLINKON: LD A, (LCD_DSPCTRL)	;
301)   9484 CB C7       		 SET LCD_BLINKON, A	;
302)   9486 32 7D 00    		 LD (LCD_DSPCTRL), A	;
303)   9489 F6 08       		 OR LCD_DISPLAYCONTROL	;
304)   948B CD 7C 93    		 CALL LCD16_COMMD	;
305)   948E C9          		 RET	;
307)   948F 3E 18       		@LCD16_SCRLEFT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVELEFT	;
308)   9491 CD 7C 93    		 CALL LCD16_COMMD	;
309)   9494 C9          		 RET	;
311)   9495 3E 1C       		@LCD16_SCRRIGHT: LD A, LCD_CURSORSHIFT OR LCD_DISPLAYMOVE OR LCD_MOVERIGHT	;
312)   9497 CD 7C 93    		 CALL LCD16_COMMD	;
313)   949A C9          		 RET	;
315)   949B 3E 10       		@LCD16_MOVLEFT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVELEFT	;
316)   949D CD 7C 93    		 CALL LCD16_COMMD	;
317)   94A0 C9          		 RET	;
319)   94A1 3E 14       		@LCD16_MOVRIGHT: LD A, LCD_CURSORSHIFT OR LCD_CURSORMOVE OR LCD_MOVERIGHT	;
320)   94A3 CD 7C 93    		 CALL LCD16_COMMD	;
321)   94A6 C9          		 RET	;
324)   94A7 3E 08       		@LCD16_BKLTON: LD A, BACKLIGHTPINMASK AND LCD_BACKLIGHT	;
325)   94A9 32 7F 00    		 LD (LCD_STSMASK),A	;
326)   94AC CD 6B 93    		 CALL LCD16_I2CSEND	;
327)   94AF C9          		 RET	;
329)   94B0 3E 00       		@LCD16_BKLTOFF: LD A, BACKLIGHTPINMASK AND LCD_NOBACKLIGHT	;
330)   94B2 32 7F 00    		 LD (LCD_STSMASK),A	;
331)   94B5 CD 6B 93    		 CALL LCD16_I2CSEND	;
332)   94B8 C9          		 RET	;
 29)   94B9 53 75 6E 64 		 SUN DEFM  "Sunday"	;
 29)   94BD 61 79       		 SUN DEFM  "Sunday"	;
 30)   94BF 00          		 DB 0	;
 31)   94C0 4D 6F 6E 64 		 MON DEFM  "Monday"	;
 31)   94C4 61 79       		 MON DEFM  "Monday"	;
 32)   94C6 00          		 DB 0	;
 33)   94C7 54 75 65 73 		 TUE DEFM  "Tuesday"	;
 33)   94CB 64 61 79    		 TUE DEFM  "Tuesday"	;
 34)   94CE 00          		 DB 0	;
 35)   94CF 57 65 64 6E 		 WED DEFM  "Wednesday"	;
 35)   94D3 65 73 64 61 		 WED DEFM  "Wednesday"	;
 35)   94D7 79          		 WED DEFM  "Wednesday"	;
 36)   94D8 00          		 DB 0	;
 37)   94D9 54 68 75 72 		 THU DEFM  "Thursday"	;
 37)   94DD 73 64 61 79 		 THU DEFM  "Thursday"	;
 38)   94E1 00          		 DB 0	;
 39)   94E2 46 72 69 64 		 FRI DEFM  "Friday"	;
 39)   94E6 61 79       		 FRI DEFM  "Friday"	;
 40)   94E8 00          		 DB 0	;
 41)   94E9 53 61 74 75 		 SAT DEFM  "Saturday"	;
 41)   94ED 72 64 61 79 		 SAT DEFM  "Saturday"	;
 42)   94F1 00          		 DB 0	;
 44)   94F2 B9 94       		 DAYS DEFW SUN	;
 45)   94F4 C0 94       		 DEFW MON	;
 46)   94F6 C7 94       		 DEFW TUE	;
 47)   94F8 CF 94       		 DEFW WED	;
 48)   94FA D9 94       		 DEFW THU	;
 49)   94FC E2 94       		 DEFW FRI	;
 50)   94FE E9 94       		 DEFW SAT	;
 52)   9500 52 54 43 20 		 MESERR DEFM "RTC ER RV"	;
 52)   9504 45 52 20 52 		 MESERR DEFM "RTC ER RV"	;
 52)   9508 56          		 MESERR DEFM "RTC ER RV"	;
 53)   9509 0A 0D 00    		 DEFB 10,13,0	;
 55)   950C 52 54 43 20 		 MESERR0 DEFM "RTC ER SD"	;
 55)   9510 45 52 20 53 		 MESERR0 DEFM "RTC ER SD"	;
 55)   9514 44          		 MESERR0 DEFM "RTC ER SD"	;
 56)   9515 0A 0D 00    		 DEFB 10,13,0	;
 58)   9518 7B          		SHERR0: LD A, E	;
 59)   9519 C5          		 PUSH BC	;
 60)   951A CD C6 80    		 CALL SOUTAS	;
 61)   951D C1          		 POP BC	;
 62)   951E 79          		 LD A, C	;
 63)   951F CD C6 80    		 CALL SOUTAS	;
 65)   9522 21 0C 95    		 LD HL, MESERR0	;
 66)   9525 CD 28 8B    		 CALL RS_TXT	;
 67)   9528 C9          		 RET	;
 70)   9529 79          		SHERR: LD A, C	;
 71)   952A CD C6 80    		 CALL SOUTAS	;
 72)   952D 21 00 95    		 LD HL, MESERR	;
 73)   9530 CD 28 8B    		 CALL RS_TXT	;
 74)   9533 37          		 SCF	;
 75)   9534 C9          		 RET	;
 78)   9535 AF          		RST_BUF: XOR A	;
 79)   9536 06 14       		 LD B, 20	;
 80)   9538 21 8B 00    		 LD HL, BUFFER	;
 81)   953B 77          		LP1: LD (HL), A	;
 82)   953C 23          		 INC HL	;
 83)   953D 10 FC       		 DJNZ LP1	;
 84)   953F C9          		 RET	;
 86)   9540 64 64 2F 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9544 6D 2F 79 79 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9548 20 77 20 68 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   954C 68 3A 6D 6D 		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 86)   9550 3A 73 73    		DATEMASK: DEFM "dd/mm/yy w hh:mm:ss"	;
 89)   9553 21 40 95    		DS1307_INIT: LD HL,DATEMASK	;
 90)   9556 11 CB 00    		 LD DE,TIMMSG	;
 91)   9559 01 13 00    		 LD BC,19	;
 92)   955C ED B0       		 LDIR        	;
 93)   955E C9          		 RET	;
 95)   955F 21 8B 00    		DS1307_GETNOW: LD HL, BUFFER	;
 96)   9562 AF          		 XOR A         ;SEND COMMAND 0	;SEND COMMAND 0
 97)   9563 77          		 LD (HL), A	;
 98)   9564 16 68       		 LD D, DS1307_ADDRESS	;
 99)   9566 01 01 00    		 LD BC, 1	;
100)   9569 CD 8C 92    		 CALL I2C_WRITE	;
101)   956C C2 18 95    		 JP NZ, SHERR0	;
103)   956F 21 8B 00    		 LD HL, BUFFER	;
104)   9572 16 68       		 LD D, DS1307_ADDRESS	;
105)   9574 01 07 00    		 LD BC, 7	;
106)   9577 CD DC 92    		 CALL I2C_READ	;
107)   957A C2 29 95    		 JP NZ, SHERR	;
108)   957D AF          		 XOR A	;
109)   957E C9          		 RET	;
113)   957F 11 8B 00    		DS1307_SETTIME: LD DE, BUFFER	;
114)   9582 AF          		 XOR A	;
115)   9583 12          		 LD (DE), A	;
116)   9584 13          		 INC DE	;
117)   9585 21 DC 00    		 LD HL,TIMMSG+17  ;SS	;SS
118)   9588 CD B6 95    		 CALL SETTMPARAM	;
119)   958B 21 D9 00    		 LD HL,TIMMSG+14  ;MN	;MN
120)   958E CD B6 95    		 CALL SETTMPARAM	;
121)   9591 21 D6 00    		 LD HL,TIMMSG+11  ;HH	;HH
122)   9594 CD B6 95    		 CALL SETTMPARAM	;
123)   9597 21 D4 00    		 LD HL,TIMMSG+9  ;D OF WEEK 1-7	;D OF WEEK 1-7
124)   959A CD B6 95    		 CALL SETTMPARAM	;
125)   959D 21 CB 00    		 LD HL,TIMMSG  ;DD	;DD
126)   95A0 CD B6 95    		 CALL SETTMPARAM	;
127)   95A3 21 CE 00    		 LD HL,TIMMSG+3  ;MM	;MM
128)   95A6 CD B6 95    		 CALL SETTMPARAM	;
129)   95A9 21 D1 00    		 LD HL,TIMMSG+6  ;YY	;YY
130)   95AC CD B6 95    		 CALL SETTMPARAM	;
131)   95AF 3E 00       		 LD A,0	;
132)   95B1 12          		 LD (DE), A	;
133)   95B2 CD FE 95    		 CALL DS1307_ADJUST	;
134)   95B5 C9          		 RET	;
136)   95B6 D5          		SETTMPARAM: PUSH DE	;
137)   95B7 CD 27 9C    		 CALL strtob	;
138)   95BA D1          		 POP DE	;
139)   95BB CD B8 9A    		 CALL BN2BCD	;
140)   95BE 7D          		 LD A,L	;
141)   95BF 12          		 LD (DE),A	;
142)   95C0 13          		 INC DE  	;
143)   95C1 C9          		 RET	;
148)   95C2 11 8B 00    		 LD DE, BUFFER	;
149)   95C5 AF          		 XOR A	;
150)   95C6 12          		 LD (DE), A	;
151)   95C7 13          		 INC DE	;
152)   95C8 3E 0A       		 LD A, 10        ; 10 SECS	; 10 SECS
153)   95CA CD B8 9A    		 CALL BN2BCD	;
154)   95CD 7D          		 LD A, L	;
155)   95CE 12          		 LD (DE), A	;
156)   95CF 13          		 INC DE	;
157)   95D0 3E 22       		 LD A, 34        ; 28 MINS	; 28 MINS
158)   95D2 CD B8 9A    		 CALL BN2BCD	;
159)   95D5 7D          		 LD A, L	;
160)   95D6 12          		 LD (DE), A	;
161)   95D7 13          		 INC DE	;
162)   95D8 3E 12       		 LD A, 18        ; 19 HOURS	; 19 HOURS
163)   95DA CD B8 9A    		 CALL BN2BCD	;
164)   95DD 7D          		 LD A, L	;
165)   95DE 12          		 LD (DE), A	;
166)   95DF 13          		 INC DE	;
167)   95E0 3E 05       		 LD A, 5        ; DAY OF WEEK	; DAY OF WEEK
168)   95E2 12          		 LD (DE), A	;
169)   95E3 13          		 INC DE	;
170)   95E4 3E 12       		 LD A, 18        ; 8 DAY	; 8 DAY
171)   95E6 CD B8 9A    		 CALL BN2BCD	;
172)   95E9 7D          		 LD A, L	;
173)   95EA 12          		 LD (DE), A	;
174)   95EB 13          		 INC DE	;
175)   95EC 3E 02       		 LD A, 02        ; 10 MONTH	; 10 MONTH
176)   95EE CD B8 9A    		 CALL BN2BCD	;
177)   95F1 7D          		 LD A, L	;
178)   95F2 12          		 LD (DE), A	;
179)   95F3 13          		 INC DE	;
180)   95F4 3E 15       		 LD A, 21        ; 21 YEAR (2020)	; 21 YEAR (2020)
181)   95F6 CD B8 9A    		 CALL BN2BCD	;
182)   95F9 7D          		 LD A, L	;
183)   95FA 12          		 LD (DE), A	;
184)   95FB 13          		 INC DE	;
185)   95FC AF          		 XOR A	;
186)   95FD 12          		 LD (DE), A	;
199)   95FE 21 8B 00    		DS1307_ADJUST: LD HL, BUFFER	;
200)   9601 16 68       		 LD D, DS1307_ADDRESS	;
201)   9603 01 09 00    		 LD BC, 9	;
202)   9606 CD 8C 92    		 CALL I2C_WRITE	;
203)   9609 C2 18 95    		 JP NZ, SHERR0	;
204)   960C 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
205)   960F CD 35 9B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
206)   9612 01 FF FF    		 LD BC, FFFFh        ;8000H FOR 4MHZ	;8000H FOR 4MHZ
207)   9615 CD 35 9B    		 CALL PAUSE_LOOP       ; 0.5 second delay	; 0.5 second delay
208)   9618 C9          		 RET	;
212)   9619 21 8B 00    		DS1307_SETSQ: LD HL, BUFFER	;
213)   961C E5          		 PUSH HL	;
214)   961D 3E 07       		 LD A, DS1307_CONTROL_REGISTER	;
215)   961F 77          		 LD (HL), A	;
216)   9620 23          		 INC HL	;
217)   9621 7A          		 LD A, D	;
218)   9622 77          		 LD (HL), A	;
219)   9623 E1          		 POP HL	;
220)   9624 16 68       		 LD D, DS1307_ADDRESS	;
221)   9626 01 02 00    		 LD BC, 2	;
222)   9629 CD 8C 92    		 CALL I2C_WRITE	;
223)   962C C2 18 95    		 JP NZ, SHERR0	;
224)   962F C9          		 RET	;
228)   9630 CD 1F 9B    		CONVHL: CALL Bcd2ASC	;
229)   9633 26 00       		 LD H, 0	;
230)   9635 C9          		 RET	;
233)   9636 06 07       		CHKERROR: LD B, 7	;
234)   9638 21 8B 00    		 LD HL, BUFFER	;
235)   963B 7E          		CEAGN: LD A, (HL)	;
236)   963C FE FF       		 CP $FF	;
237)   963E 28 05       		 JR Z, STER	;
238)   9640 23          		 INC HL	;
239)   9641 10 F8       		 DJNZ CEAGN	;
240)   9643 AF          		 XOR A	;
241)   9644 C9          		 RET	;
244)   9645 37          		 SCF	;
245)   9646 C9          		 RET	;
250)   9647 CD 35 95    		DS1307_GETTIME: CALL RST_BUF	;
251)   964A CD 5F 95    		 CALL DS1307_GETNOW	;
252)   964D D8          		 RET C         ;ERROR RETURN	;ERROR RETURN
253)   964E CD 36 96    		 CALL CHKERROR	;
254)   9651 D8          		 RET C         ;ERRREAD  ;IF ERROR DONT PRINT	;ERRREAD  ;IF ERROR DONT PRINT
255)   9652 DD 21 8B 00 		 LD IX, BUFFER	;
256)   9656 11 CB 00    		 LD DE, TIMMSG	;
257)   9659 26 00       		 LD H, 0	;
258)   965B DD 6E 04    		 LD L, (IX + 4)        ;DAY	;DAY
259)   965E CD 30 96    		 CALL CONVHL	;
260)   9661 3E 2F       		 LD A, ' / '	;
261)   9663 12          		 LD (DE), A	;
262)   9664 13          		 INC DE	;
263)   9665 DD 6E 05    		 LD L, (IX + 5)        ;MONTH	;MONTH
264)   9668 CD 30 96    		 CALL CONVHL	;
265)   966B 3E 2F       		 LD A, ' / '	;
266)   966D 12          		 LD (DE), A	;
267)   966E 13          		 INC DE	;
268)   966F DD 6E 06    		 LD L, (IX + 6)        ;YEAR	;YEAR
269)   9672 CD 30 96    		 CALL CONVHL	;
270)   9675 3E 20       		 LD A, ' '	;
271)   9677 12          		 LD (DE), A	;
272)   9678 13          		 INC DE	;
273)   9679 DD 6E 02    		 LD L, (IX + 2)        ;HOUR	;HOUR
274)   967C CD 30 96    		 CALL CONVHL	;
275)   967F 3E 3A       		 LD A, ':'	;
276)   9681 12          		 LD (DE), A	;
277)   9682 13          		 INC DE	;
278)   9683 DD 6E 01    		 LD L, (IX + 1)        ;MIN	;MIN
279)   9686 CD 30 96    		 CALL CONVHL	;
280)   9689 3E 3A       		 LD A, ':'	;
281)   968B 12          		 LD (DE), A	;
282)   968C 13          		 INC DE	;
283)   968D DD 6E 00    		 LD L, (IX)        ;SECS	;SECS
284)   9690 CD 30 96    		 CALL CONVHL	;
285)   9693 13          		 INC DE	;
286)   9694 AF          		 XOR A	;
287)   9695 12          		 LD (DE), A	;
288)   9696 C9          		 RET	;
108)   9697 ED 44       		DELAYABIT: NEG  ;8 CLOCK CYCLES	;8 CLOCK CYCLES
109)   9699 ED 44       		 NEG	;
110)   969B ED 44       		 NEG	;
111)   969D ED 44       		 NEG	;
112)   969F ED 44       		 NEG	;
113)   96A1 ED 44       		 NEG	;
114)   96A3 ED 44       		 NEG	;
115)   96A5 ED 44       		 NEG	;
116)   96A7 C9          		 RET	;
123)   96A8 D3 38       		SND_OUT: OUT (DEVSND),A ;SEND TO SOUND	;SEND TO SOUND
139)   96AA CD 97 96    		 CALL DELAYABIT	;
140)   96AD C9          		 RET	;
142)   96AE 3E 9F       		SND_MUTEALL:   LD A,$9F  ;MUTE CHANNEL 0	;MUTE CHANNEL 0
143)   96B0 CD A8 96    		 CALL SND_OUT	;
144)   96B3 3E BF       		 LD A,$BF  ;MUTE CHANNEL 1	;MUTE CHANNEL 1
145)   96B5 CD A8 96    		 CALL SND_OUT	;
146)   96B8 3E DF       		 LD A,$DF  ;MUTE CHANNEL 2	;MUTE CHANNEL 2
147)   96BA CD A8 96    		 CALL SND_OUT	;
148)   96BD 3E FF       		 LD A,$FF  ;MUTE CHANNEL NOISE	;MUTE CHANNEL NOISE
149)   96BF CD A8 96    		 CALL SND_OUT                	;
150)   96C2 C9          		               RET	;
152)   96C3 CD AE 96    		SND_INIT: CALL SND_MUTEALL	;
153)   96C6 AF          		               XOR A	;
154)   96C7 32 F4 00    		               LD (CHANST),A	;
155)   96CA AF          		SND_CLRDAT:    XOR A	;
156)   96CB 21 E0 00    		               LD HL,CHANDATA	;
157)   96CE 77          		               LD (HL),A	;
158)   96CF 54          		               LD D,H	;
159)   96D0 5D          		               LD E,L	;
160)   96D1 13          		               INC DE	;
161)   96D2 01 0B 00    		               LD BC,11  	;
162)   96D5 ED B0       		               LDIR	;
163)   96D7 C9          		 RET	;
168)   96D8 F5          		SND_NOTE:      PUSH AF	;
169)   96D9 E6 03       		               AND $03                  ;KEEP 2 BITS	;KEEP 2 BITS
170)   96DB 07          		               RLCA	;
171)   96DC 07          		               RLCA	;
172)   96DD 07          		               RLCA	;
173)   96DE 07          		               RLCA	;
174)   96DF 07          		               RLCA                    ;TRANSFER TO BITS 6&5	;TRANSFER TO BITS 6&5
175)   96E0 B4          		               OR H                    ;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL	;A HAS THE HI BYTE TO SEND TO THE SOUND CHIP WITH CORRECT CHANNEL
176)   96E1 CD A8 96    		               CALL SND_OUT	;
177)   96E4 7D          		SN_LOW:        LD A,L                	;
178)   96E5 CD A8 96    		               CALL SND_OUT	;
179)   96E8 F1          		               POP AF	;
180)   96E9 C9          		               RET	;
186)   96EA F5          		SND_DOBEEP:    PUSH AF	;
187)   96EB 3E 02       		               LD A,DEFCHN	;
188)   96ED 0E 00       		               LD C,SNDVOLHI	;
189)   96EF CD 13 97    		               CALL SND_SETVOLUME                	;
190)   96F2 3E 02       		               LD A,DEFCHN	;
191)   96F4 CD D8 96    		               CALL SND_NOTE	;
192)   96F7 06 A0       		               LD B,160	;
193)   96F9 CD 86 9A    		               CALL DELAYMILI	;
194)   96FC 3E 02       		               LD A,DEFCHN	;
195)   96FE 0E 04       		               LD C,SNDMUTE	;
196)   9700 CD 13 97    		               CALL SND_SETVOLUME	;
197)   9703 F1          		               POP AF	;
198)   9704 C9          		               RET	;
200)   9705 21 07 83    		SND_BEEP:      LD HL,nG4             ;NOTE G4 ON CHANNEL2	;NOTE G4 ON CHANNEL2
201)   9708 CD EA 96    		               CALL SND_DOBEEP	;
202)   970B C9          		               RET	;
204)   970C 21 02 81    		SND_BEEP2:     LD HL,nD6             ;NOTE D6 ON CHANNEL2	;NOTE D6 ON CHANNEL2
205)   970F CD EA 96    		               CALL SND_DOBEEP	;
206)   9712 C9          		               RET	;
213)   9713 07          		SND_SETVOLUME: RLCA                            ;DOUBLE CHANNEL 0-3 --> 0,2,4,6               	;DOUBLE CHANNEL 0-3 --> 0,2,4,6
214)   9714 3C          		               INC A                           ;E=A+1	;E=A+1
215)   9715 5F          		               LD E,A                          ;SAVE CHANNEL INFO	;SAVE CHANNEL INFO
216)   9716 79          		               LD A,C	;
217)   9717 FE 04       		               CP SNDMUTE	;
218)   9719 3E 0F       		               LD A,$F	;
219)   971B 28 09       		               JR Z, SV_DOIT                   ;SNDMUTE=4 MEANS NO VOLUME = MUTE	;SNDMUTE=4 MEANS NO VOLUME = MUTE
220)   971D 3E 01       		               LD A,1                          ;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3	;VOLUME 0-3 --> 1,2,4,8 SET THE CORRESPONDING BIT 0-3
221)   971F 0C          		               INC C	;
222)   9720 0D          		SV_AGN:        DEC C	;
223)   9721 28 03       		               JR Z, SV_DOIT	;
224)   9723 07          		               RLCA	;
225)   9724 18 FA       		               JR SV_AGN	;
226)   9726 57          		SV_DOIT:       LD D,A                          ;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV	;D THE VOLUME , E THE CHANNEL  1&CCC&VVVV
227)   9727 3E 80       		               LD A,$80	;
228)   9729 CB 03       		               RLC E	;
229)   972B CB 03       		               RLC E	;
230)   972D CB 03       		               RLC E	;
231)   972F CB 03       		               RLC E	;
232)   9731 B2          		               OR D	;
233)   9732 B3          		               OR E	;
234)   9733 CD A8 96    		               CALL SND_OUT                    ;SET THE VOLUME        	;SET THE VOLUME
235)   9736 C9          		               RET	;
238)   9737 F5          		SND_DISABLE:   PUSH AF	;
239)   9738 CD 60 97    		               CALL SND_GETCHMASK	;
240)   973B 47          		               LD B,A	;
241)   973C 3A F4 00    		               LD A,(CHANST)	;
242)   973F B0          		               OR B	;
243)   9740 32 F4 00    		               LD (CHANST),A	;
244)   9743 F1          		               POP AF	;
245)   9744 0E 04       		               LD C, SNDMUTE	;
246)   9746 CD 13 97    		               CALL SND_SETVOLUME	;
247)   9749 C9          		               RET	;
250)   974A F5          		SND_ENABLE:    PUSH AF	;
251)   974B CD 60 97    		               CALL SND_GETCHMASK	;
252)   974E ED 44       		               NEG	;
253)   9750 3D          		               DEC A	;
254)   9751 47          		               LD B,A	;
255)   9752 3A F4 00    		               LD A,(CHANST)	;
256)   9755 A0          		               AND B	;
257)   9756 32 F4 00    		               LD (CHANST),A	;
258)   9759 F1          		               POP AF	;
259)   975A 0E 00       		               LD C, SNDVOLHI                  ;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL	;TODO: KEEP RECORD OF THE VOLUME IN EACH CHANNEL
260)   975C CD 13 97    		               CALL SND_SETVOLUME	;
261)   975F C9          		               RET	;
266)   9760 3C          		SND_GETCHMASK: INC A	;
267)   9761 4F          		               LD C,A	;
268)   9762 AF          		               XOR A	;
269)   9763 3C          		               INC A                	;
270)   9764 0D          		GMCAGN:        DEC C	;
271)   9765 C8          		               RET Z	;
272)   9766 07          		               RLCA	;
273)   9767 18 FB       		               JR GMCAGN             	;
280)   9769 F5          		SND_PLAYCH:    PUSH AF	;
281)   976A 21 E0 00    		               LD HL,CHANDATA	;
282)   976D 07          		               RLCA                            ;DOUBLE A	;DOUBLE A
283)   976E 06 00       		               LD B,0	;
284)   9770 4F          		               LD C,A	;
285)   9771 09          		               ADD HL,BC                       ;HL ON CHANNELS DATA ADDRESS VAR	;HL ON CHANNELS DATA ADDRESS VAR
286)   9772 5E          		               LD E,(HL)	;
287)   9773 23          		               INC HL	;
288)   9774 56          		               LD D,(HL)                       ;DE THE CHANNEL DATA ADDRESS	;DE THE CHANNEL DATA ADDRESS
289)   9775 7A          		               LD A,D	;
290)   9776 83          		               ADD E	;
291)   9777 B7          		               OR A	;
292)   9778 28 4B       		               JR Z, PC_NOMORE                 ;IF CHANDATA ADDRESS IS ZERO RETURN	;IF CHANDATA ADDRESS IS ZERO RETURN
294)   977A F1          		               POP AF                          ;GET CHANNEL	;GET CHANNEL
295)   977B F5          		               PUSH AF	;
296)   977C CD 60 97    		               CALL SND_GETCHMASK	;
297)   977F 4F          		               LD C, A	;
298)   9780 3A F4 00    		               LD A,(CHANST)	;
299)   9783 A1          		               AND C	;
300)   9784 C1          		               POP BC	;
301)   9785 20 50       		               JR NZ,SNDOK                     ;SIGNAL OK BUT DON'T PLAY ANYTHING	;SIGNAL OK BUT DON'T PLAY ANYTHING
302)   9787 C5          		               PUSH BC	;
303)   9788 48          		               LD C,B                          ;CHAN NO ON C	;CHAN NO ON C
304)   9789 06 00       		               LD B,0	;
305)   978B 21 F0 00    		               LD HL,CHANCN	;
306)   978E 09          		               ADD HL,BC                       ;HL ON CHANNELS NOTE IDX	;HL ON CHANNELS NOTE IDX
307)   978F 7E          		               LD A,(HL)                       ;A THE NOTE IDX 0-255 	;A THE NOTE IDX 0-255
308)   9790 3C          		               INC A	;
309)   9791 28 32       		               JR Z, PC_NOMORE                 ;IF 255 NO MORE NOTES TO PLAY	;IF 255 NO MORE NOTES TO PLAY
310)   9793 3D          		               DEC A          	;
311)   9794 34          		               INC (HL)                        ;NEXT NOTE	;NEXT NOTE
312)   9795 6F          		               LD L,A                          ;HL THE NOTE IDX	;HL THE NOTE IDX
313)   9796 26 00       		               LD H,0                          ;	;
314)   9798 29          		               ADD HL,HL                       ;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE	;DOUBLE THE IDX CAUSE 2 BYTES PER NOTE
315)   9799 29          		               ADD HL,HL                       ;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE	;DOUBLE AGAIN THE IDX CAUSE 2 BYTES IS THE DURATION OF THE NOTE
316)   979A 19          		               ADD HL,DE                       ;THE NOTE ADDRESS ON HL	;THE NOTE ADDRESS ON HL
317)   979B 5E          		               LD E,(HL)                       ;E 2ND BYTE OF THE NOTE TO PLAY	;E 2ND BYTE OF THE NOTE TO PLAY
318)   979C 23          		               INC HL	;
319)   979D 56          		               LD D,(HL)                       ;D 1ST BYTE OF THE NOTE TO PLAY	;D 1ST BYTE OF THE NOTE TO PLAY
320)   979E 23          		               INC HL	;
321)   979F 4E          		               LD C,(HL)                      ;THE DURATION OF THE NOTE ON BC	;THE DURATION OF THE NOTE ON BC
322)   97A0 23          		               INC HL	;
323)   97A1 46          		               LD B,(HL)	;
324)   97A2 ED 43 A9 00 		               LD (PRGEX),BC                   ;SAVE BC                	;SAVE BC
325)   97A6 C1          		               POP BC                          ;CHANNEL ON B	;CHANNEL ON B
326)   97A7 C5          		               PUSH BC                         	;
327)   97A8 21 E8 00    		               LD HL,CHANDEL                   ;SAVING DURATION ON CHANDEL + CHAN IDX         	;SAVING DURATION ON CHANDEL + CHAN IDX
328)   97AB CB 00       		               RLC B                           ;DOUBLE IDX	;DOUBLE IDX
329)   97AD 48          		               LD C,B	;
330)   97AE 06 00       		               LD B,0	;
331)   97B0 09          		               ADD HL,BC	;
332)   97B1 ED 4B A9 00 		               LD BC,(PRGEX)                      ;RESTORE BC	;RESTORE BC
333)   97B5 71          		               LD (HL),C                       ;SAVE NOTE DELAY ON CHANNEL DELAY	;SAVE NOTE DELAY ON CHANNEL DELAY
334)   97B6 23          		               INC HL	;
335)   97B7 70          		               LD (HL),B	;
336)   97B8 7A          		               LD A,D	;
337)   97B9 C1          		               POP BC                          ;GET THE CHANNEL ON B	;GET THE CHANNEL ON B
338)   97BA FE 0A       		               CP 10                           ;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS	;CHECK IF 1ST BYTE IS UNDER 10  MAYBE DO SPECIAL OPS
339)   97BC 38 0A       		               JR C,SND_SPOPS	;
340)   97BE EB          		               EX DE,HL                        ;HL THE NOTE	;HL THE NOTE
341)   97BF 78          		               LD A,B                          ;CHANNEL ON A	;CHANNEL ON A
342)   97C0 CD D8 96    		               CALL SND_NOTE	;
343)   97C3 18 12       		               JR SNDOK                        ;NOTE PLAYED OK	;NOTE PLAYED OK
344)   97C5 C1          		PC_NOMORE:     POP BC	;
345)   97C6 18 11       		               JR SNDEND                       ;SIGNAL  SONG END	;SIGNAL  SONG END
349)   97C8 FE 03       		SND_SPOPS:     CP 3	;
350)   97CA 30 07       		               JR NC,SNDOTOPS	;
351)   97CC 4F          		               LD C,A                          ;VOLUME	;VOLUME
352)   97CD 78          		               LD A,B                          ;CHANNEL	;CHANNEL
353)   97CE CD 13 97    		               CALL SND_SETVOLUME	;
354)   97D1 18 04       		               JR SNDOK                        ;VOLUME SET OK	;VOLUME SET OK
356)   97D3 FE 09       		SNDOTOPS:      CP 9                            ;9 MEANS SONG ENDED	;9 MEANS SONG ENDED
357)   97D5 28 02       		               JR Z, SNDEND	;
359)   97D7 AF          		SNDOK:         XOR A                           ;END OK                	;END OK
360)   97D8 C9          		               RET	;
361)   97D9 3E 01       		SNDEND:        LD A,1                          ;SONG END	;SONG END
362)   97DB C9          		               RET	;
368)   97DC 21 E8 00    		SND_DOCHAN:    LD HL,CHANDEL	;
369)   97DF 4F          		               LD C,A	;
370)   97E0 06 00       		               LD B,0	;
371)   97E2 09          		               ADD HL,BC	;
372)   97E3 09          		               ADD HL,BC       ;DOUBLE CAUSE 2 BYTES PER DELAY VALUE	;DOUBLE CAUSE 2 BYTES PER DELAY VALUE
373)   97E4 4E          		               LD C,(HL)	;
374)   97E5 23          		               INC HL	;
375)   97E6 46          		               LD B,(HL)	;
376)   97E7 57          		               LD D,A          ;SAVE A	;SAVE A
377)   97E8 78          		               LD A,B	;
378)   97E9 B1          		               OR C	;
379)   97EA 7A          		               LD A,D          ;RESTORE CHANNEL ON A	;RESTORE CHANNEL ON A
380)   97EB CA 69 97    		               JP Z,SND_PLAYCH ;PLAY CHANNEL NOTES	;PLAY CHANNEL NOTES
381)   97EE AF          		               XOR A           ;DATA ON CHANNEL CAUSE WE DELAY 	;DATA ON CHANNEL CAUSE WE DELAY
383)   97EF C9          		               RET	;
389)   97F0 21 E8 00    		SND_INTDELAY:  LD HL,CHANDEL	;
390)   97F3 06 04       		               LD B,4                  	;
391)   97F5 5E          		ID_NXTCH:      LD E,(HL)	;
392)   97F6 23          		               INC HL	;
393)   97F7 56          		               LD D,(HL)	;
394)   97F8 7A          		               LD A, D	;
395)   97F9 B3          		               OR E	;
396)   97FA 28 05       		               JR Z, ID_SKP	;
397)   97FC 1B          		               DEC DE          ;MINUS NOTE DELAY VALUE	;MINUS NOTE DELAY VALUE
398)   97FD 72          		               LD (HL),D	;
399)   97FE 2B          		               DEC HL	;
400)   97FF 73          		               LD (HL),E	;
401)   9800 23          		               INC HL	;
402)   9801 23          		ID_SKP:        INC HL	;
403)   9802 10 F1       		               DJNZ ID_NXTCH	;
404)   9804 C9          		               RET	;
408)   9805 06 04       		SND_PLAYMUSIC: LD B,4	;
409)   9807 0E 00       		               LD C,0	;
410)   9809 05          		PM_NXT:        DEC B                           ;PLAY 3,2,1,0	;PLAY 3,2,1,0
411)   980A 78          		               LD A,B	;
412)   980B C5          		               PUSH BC                	;
413)   980C CD DC 97    		               CALL SND_DOCHAN	;
414)   980F C1          		               POP BC                	;
415)   9810 81          		               ADD A,C                         ;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES	;A=0 IF NOTE PLAYED A=1 IF CHANNEL NOT ENABLED OR NO MORE NOTES
416)   9811 4F          		               LD C,A	;
417)   9812 78          		               LD A,B	;
418)   9813 B7          		               OR A	;
419)   9814 20 F3       		               JR NZ, PM_NXT	;
420)   9816 79          		               LD A,C	;
421)   9817 FE 04       		               CP 4                            ;MEANS ALL 4 CHANNELS ARE NOT ENABLED	;MEANS ALL 4 CHANNELS ARE NOT ENABLED
422)   9819 C9          		               RET	;
  8)   981A FE E1       		@CHECKEXT:     CP $E1         ;BREAK KEY	;BREAK KEY
  9)   981C C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 10)   981D FE F0       		 CP $F0         ;240 KEY RELEASED	;240 KEY RELEASED
 11)   981F C8          		 RET Z        ;JUST SAVE IT  	;JUST SAVE IT
 12)   9820 FE E0       		 CP $E0         ;224 EXTENDED KEYS	;224 EXTENDED KEYS
 13)   9822 C8          		 RET Z        ;JUST SAVE IT	;JUST SAVE IT
 14)   9823 FE AA       		 CP $AA        ;POST TEST KB OK	;POST TEST KB OK
 15)   9825 C8          		 RET Z	;
 17)   9826 4F          		 LD C,A        ;SAVE KEY	;SAVE KEY
 18)   9827 3A 81 00    		 LD A,(LASTKEY)	;
 19)   982A FE E1       		 CP $E1	;
 20)   982C 28 23       		 JR Z, GTBRK	;
 21)   982E FE F0       		 CP $F0	;
 22)   9830 28 59       		 JR Z, GTREL	;
 23)   9832 FE E0       		 CP $E0	;
 24)   9834 28 21       		 JR Z, GTEXT	;
 25)   9836 79          		 LD A,C	;
 27)   9837 FE 12       		 CP 18         ;LEFT SHIFT	;LEFT SHIFT
 28)   9839 CC B7 98    		 CALL Z, SHFTOG	;
 29)   983C FE 59       		 CP 89         ;RIGHT SHIFT	;RIGHT SHIFT
 30)   983E CC B7 98    		 CALL Z, SHFTOG	;
 31)   9841 FE 14       		 CP 20         ;RIGHT CONTROL	;RIGHT CONTROL
 32)   9843 CC C0 98    		 CALL Z, CTRTOG	;
 33)   9846 FE 11       		 CP 17         ;LEFT ALT	;LEFT ALT
 34)   9848 CC C9 98    		 CALL Z, ALTTOG	;
 35)   984B FE 58       		 CP $58         ;CAPS LOCK	;CAPS LOCK
 36)   984D CC D2 98    		 CALL Z, CAPSTOG	;
 37)   9850 C9          		               RET	;
 39)   9851 79          		GTBRK: LD A,C       ;$14 OR $F0	;$14 OR $F0
 40)   9852 FE F0       		 CP $F0	;
 41)   9854 C8          		 RET Z  	;
 42)   9855 AF          		 XOR A        	;
 43)   9856 C9          		 RET	;
 45)   9857 79          		GTEXT: LD A,C       ; THIS IS THE EXTENDED KEY	; THIS IS THE EXTENDED KEY
 46)   9858 FE 6B       		 CP $6B         ;LEFT	;LEFT
 47)   985A C8          		 RET Z	;
 48)   985B FE 72       		 CP $72        ;DOWN	;DOWN
 49)   985D C8          		 RET Z	;
 50)   985E FE 74       		 CP $74        ;RIGHT	;RIGHT
 51)   9860 C8          		 RET Z	;
 52)   9861 FE 75       		 CP $75        ;UP	;UP
 53)   9863 C8          		 RET Z	;
 54)   9864 FE 70       		 CP $70        ;INSERT	;INSERT
 55)   9866 C8          		 RET Z	;
 56)   9867 FE 6C       		 CP $6C        ;HOME	;HOME
 57)   9869 C8          		 RET Z	;
 58)   986A FE 7D       		 CP $7D        ;PG UP	;PG UP
 59)   986C C8          		 RET Z	;
 60)   986D FE 7A       		 CP $7A        ;PG DN	;PG DN
 61)   986F C8          		 RET Z	;
 62)   9870 FE 69       		 CP $69        ;END	;END
 63)   9872 C8          		 RET Z	;
 64)   9873 FE 71       		 CP $71        ;DEL	;DEL
 65)   9875 C8          		 RET Z	;
 66)   9876 FE 66       		 CP $66         ;BACKSPACE	;BACKSPACE
 67)   9878 C8          		 RET Z	;
 68)   9879 FE 5A       		 CP $5A        ;ENTER NUM	;ENTER NUM
 69)   987B C8          		 RET Z	;
 70)   987C FE 11       		 CP $11        ;RIGHT ALT	;RIGHT ALT
 71)   987E C8          		 RET Z	;
 72)   987F FE 14       		 CP $14        ;LEFT ALT	;LEFT ALT
 73)   9881 C8          		 RET Z	;
 74)   9882 FE 4A       		 CP $4A         ;NUMLOCK /	;NUMLOCK /
 75)   9884 C8          		 RET Z	;
 76)   9885 FE F0       		 CP $F0	;
 77)   9887 20 00       		 JR NZ, EXGTEX       ;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY  	;GTREL ;EXTENDED KEY RELEASED $E0 $F0 $KEY
 79)   9889 AF          		EXGTEX: XOR A        ;NOT VALID EXTENDED KEY	;NOT VALID EXTENDED KEY
 80)   988A C9          		 RET	;
 83)   988B 79          		GTREL: LD A,C       ; THIS IS THE RELEASED KEY	; THIS IS THE RELEASED KEY
 84)   988C FE 12       		 CP 18         ; LSHIFT RELEASED	; LSHIFT RELEASED
 85)   988E CC A5 98    		 CALL Z, SHFRES       ; RESET SHIFT	; RESET SHIFT
 86)   9891 FE 14       		 CP 20         ; LCTRL RELEASED	; LCTRL RELEASED
 87)   9893 CC AB 98    		 CALL Z, CTRRES       ; RESET CONTROL	; RESET CONTROL
 88)   9896 FE 11       		 CP 17         ; LALT RELEASED	; LALT RELEASED
 89)   9898 CC B1 98    		 CALL Z, ALTRES       ; RESET ALT	; RESET ALT
 90)   989B FE 59       		 CP 89         ; RSHIFT RELEASED	; RSHIFT RELEASED
 91)   989D CC A5 98    		 CALL Z, SHFRES       ; RESET SHIFT  	; RESET SHIFT
 92)   98A0 32 81 00    		 LD (LASTKEY),A         ; SET LAST KEY	; SET LAST KEY
 93)   98A3 AF          		 XOR A         ; NO KEY  	; NO KEY
 94)   98A4 C9          		 RET	;
 96)   98A5 21 80 00    		SHFRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
 97)   98A8 CB B6       		 RES 6, (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
 98)   98AA C9          		 RET	;
100)   98AB 21 80 00    		CTRRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
101)   98AE CB BE       		 RES 7, (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
102)   98B0 C9          		 RET	;
104)   98B1 21 80 00    		ALTRES: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
105)   98B4 CB AE       		 RES 5, (HL)       ; BIT 5 IS SHIFT $20=32	; BIT 5 IS SHIFT $20=32
106)   98B6 C9          		 RET	;
108)   98B7 21 80 00    		SHFTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
109)   98BA 3E 40       		 LD A, $40       ; MASK	; MASK
110)   98BC AE          		 XOR (HL)        ; BIT 6 IS SHIFT $40=64	; BIT 6 IS SHIFT $40=64
111)   98BD 77          		 LD (HL), A       ; SAVE	; SAVE
112)   98BE AF          		 XOR A         ; NO KEY	; NO KEY
113)   98BF C9          		 RET	;
115)   98C0 21 80 00    		CTRTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
116)   98C3 3E 80       		 LD A, $80       ; MASK	; MASK
117)   98C5 AE          		 XOR (HL)       ; BIT 7 IS CTRL $80=128	; BIT 7 IS CTRL $80=128
118)   98C6 77          		 LD (HL), A       ; SAVE	; SAVE
119)   98C7 AF          		 XOR A         ; NO KEY	; NO KEY
120)   98C8 C9          		 RET	;
122)   98C9 21 80 00    		ALTTOG: LD HL, KEYCTR       ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH
123)   98CC 3E 20       		 LD A, $20	;
124)   98CE AE          		 XOR (HL)       ; BIT 5 IS ALT $20=32	; BIT 5 IS ALT $20=32
125)   98CF 77          		 LD (HL), A       ; SAVE	; SAVE
126)   98D0 AF          		 XOR A         ; NO KEY	; NO KEY
127)   98D1 C9          		 RET	;
129)   98D2 21 80 00    		CAPSTOG: LD HL, KEYCTR      ;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS	;KEYBOARD FLAGS SHFT,CONTROL,GRAPH,CAPS
130)   98D5 3E 10       		 LD A, $10	;
131)   98D7 AE          		 XOR (HL)       ; BIT 4 IS CAPS $10=16	; BIT 4 IS CAPS $10=16
132)   98D8 77          		 LD (HL), A       ; SAVE	; SAVE
133)   98D9 AF          		 XOR A         ; NO KEY	; NO KEY
134)   98DA C9          		 RET	;
138)   98DB FE AA       		@PS2LOK: CP $AA	;
139)   98DD 38 02       		 JR C,DOTRANS       ;ONLY 0-170	;ONLY 0-170
141)   98DF AF          		 XOR A	;
142)   98E0 C9          		 RET	;
143)   98E1 21 17 99    		DOTRANS: LD HL, PS2TAB1      ;UNSHIFTED	;UNSHIFTED
144)   98E4 57          		 LD D,A        ;SAVE KEY CODE	;SAVE KEY CODE
145)   98E5 CD 11 99    		 CALL PLK1       ;GET CHAR NO SHIFT NO CAPS	;GET CHAR NO SHIFT NO CAPS
146)   98E8 47          		 LD B,A        ;SAVE CHAR	;SAVE CHAR
147)   98E9 FE 61       		 CP 'a'	;
148)   98EB 38 04       		 JR C,PS2CHKCAPS	;
149)   98ED FE 7B       		PS2SGT: CP 'z'+1  	;
150)   98EF 38 09       		 JR C, PS2CPSF;ITS A LETTER CAPS AND SHIFT MATTERS	;ITS A LETTER CAPS AND SHIFT MATTERS
152)   98F1 3A 80 00    		PS2CHKCAPS: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT  	; GET KEYBFLAGS ON A SHIFT
153)   98F4 CB 77       		 BIT 6, A	;
154)   98F6 78          		 LD A,B	;
155)   98F7 C8          		 RET Z        ;IF NO SHIFT RETURN TAB1 CHAR	;IF NO SHIFT RETURN TAB1 CHAR
157)   98F8 18 0F       		 JR PS2SHIFT	;
159)   98FA 3A 80 00    		PS2CPSF: LD A, (KEYCTR)      ; GET KEYBFLAGS ON A SHIFT	; GET KEYBFLAGS ON A SHIFT
160)   98FD 4F          		 LD C, A        ;CAPS ON C	;CAPS ON C
161)   98FE CB 1F       		 RR A	;
162)   9900 CB 1F       		 RR A         ;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6	;2 ROTATIONS RIGHT SHIFT BECOMES BIT 4 FROM 6
163)   9902 A9          		 XOR C         ;XOR SHIFT WITH CAPS	;XOR SHIFT WITH CAPS
164)   9903 CB 67       		 BIT 4, A        ;CHECK IF BIT 4 IS 0 = UNSHIFTED      	;CHECK IF BIT 4 IS 0 = UNSHIFTED
165)   9905 20 02       		 JR NZ,PS2SHIFT	;
169)   9907 78          		 LD A,B    	;
170)   9908 C9          		 RET	;
171)   9909 7A          		PS2SHIFT: LD A, D       ;RESTORE A KEYCODE	;RESTORE A KEYCODE
172)   990A 21 C1 99    		 LD HL, PS2TAB2       ;SHIFTED	;SHIFTED
173)   990D CD 11 99    		 CALL PLK1       ;GET CHAR	;GET CHAR
174)   9910 C9          		 RET	;
175)   9911 06 00       		PLK1: LD B, 0	;
176)   9913 4F          		 LD C, A	;
177)   9914 09          		 ADD HL, BC	;
178)   9915 7E          		 LD A, (HL)       ;GET THE CHAR	;GET THE CHAR
179)   9916 C9          		 RET	;
183)   9917 00 00 00 A5 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
183)   991B 00 00 00 00 		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
183)   991F 00 00       		PS2TAB1: DB 0,0,0,165,0,0,0,0,0,0	;
184)   9921 A8 A6 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
184)   9925 60 00 00 00 		 DB 168,166,0,0,'`',0,0,0,0,0	;
184)   9929 00 00       		 DB 168,166,0,0,'`',0,0,0,0,0	;
185)   992B 00 71 31 00 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
185)   992F 00 00 7A 73 		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
185)   9933 61 77       		 DB 0,'q','1',0,0,0,'z','s','a','w'	;
186)   9935 32 00 00 63 		 DB '2',0,0,'c','x','d','e','4','3',0	;
186)   9939 78 64 65 34 		 DB '2',0,0,'c','x','d','e','4','3',0	;
186)   993D 33 00       		 DB '2',0,0,'c','x','d','e','4','3',0	;
187)   993F 00 20 76 66 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
187)   9943 74 72 35 00 		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
187)   9947 00 6E       		 DB 0,' ','v','f','t','r','5',0,0,'n'     ;40-49	;40-49
188)   9949 62 68 67 79 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
188)   994D 36 00 00 2C 		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
188)   9951 6D 6A       		 DB 'b','h','g','y','6',0,0,44,'m','j'     ;50-59	;50-59
189)   9953 75 37 38 00 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
189)   9957 00 2C 6B 69 		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
189)   995B 6F 30       		 DB 'u','7','8',0,0,',','k','i','o','0'     ;60-69	;60-69
190)   995D 39 00 00 2E 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
190)   9961 2F 6C 3B 70 		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
190)   9965 2D 00       		 DB '9',0,0,'.','/','l',59,'p','-',0         ;70-79	;70-79
191)   9967 00 00 27 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
191)   996B 5B 3D 00 00 		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
191)   996F 00 00       		 DB 0,0,39,0,'[','=',0,0,0,0                 ;80-89	;80-89
192)   9971 0D 5D 00 5C 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
192)   9975 00 00 00 00 		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
192)   9979 00 00       		 DB 13,']',0,'\',0,0,0,0,0,0                 ;90-99	;90-99
193)   997B 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
193)   997F 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
193)   9983 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
194)   9985 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
194)   9989 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
194)   998D 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
195)   998F 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
195)   9993 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
195)   9997 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
196)   9999 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
196)   999D 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
196)   99A1 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
197)   99A3 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
197)   99A7 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
197)   99AB 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
198)   99AD 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
198)   99B1 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
198)   99B5 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
199)   99B7 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
199)   99BB 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
199)   99BF 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
202)   99C1 00 00 00 A5 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
202)   99C5 00 00 00 00 		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
202)   99C9 00 00       		PS2TAB2: DB 0,0,0,165,0,0,0,0,0,0	;
203)   99CB A8 A6 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
203)   99CF 7E 00 00 00 		 DB 168,166,0,0,'~',0,0,0,0,0	;
203)   99D3 00 00       		 DB 168,166,0,0,'~',0,0,0,0,0	;
204)   99D5 00 51 21 00 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
204)   99D9 00 00 5A 53 		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
204)   99DD 41 57       		 DB 0,'Q','!',0,0,0,'Z','S','A','W'	;
205)   99DF 40 00 00 43 		 DB '@',0,0,'C','X','D','E','$','#',0	;
205)   99E3 58 44 45 24 		 DB '@',0,0,'C','X','D','E','$','#',0	;
205)   99E7 23 00       		 DB '@',0,0,'C','X','D','E','$','#',0	;
206)   99E9 00 20 56 46 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
206)   99ED 54 52 25 00 		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
206)   99F1 00 4E       		 DB 0,' ','V','F','T','R','%',0,0,'N'     ;40-49	;40-49
207)   99F3 42 48 47 59 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
207)   99F7 5E 00 00 22 		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
207)   99FB 4D 4A       		 DB 'B','H','G','Y','^',0,0,34,'M','J'     ;50-59 34=""	;50-59 34=""
208)   99FD 55 26 2A 00 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
208)   9A01 00 3C 4B 49 		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
208)   9A05 4F 29       		 DB 'U','&','*',0,0,'<','K','I','O',')'     ;60-69	;60-69
209)   9A07 28 00 00 3E 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
209)   9A0B 3F 4C 3A 50 		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
209)   9A0F 5F 00       		 DB '(',0,0,'>','?','L',':','P','_',0        ;70-79	;70-79
210)   9A11 00 00 22 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
210)   9A15 7B 2B 00 00 		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
210)   9A19 00 00       		 DB 0,0,34,0,'{','+',0,0,0,0                 ;80-89	;80-89
211)   9A1B 0D 7D 00 7C 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
211)   9A1F 00 00 00 00 		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
211)   9A23 00 00       		 DB 13,'}',0,'|',0,0,0,0,0,0                 ;90-99	;90-99
212)   9A25 00 00 06 00 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
212)   9A29 00 08 00 04 		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
212)   9A2D 09 00       		 DB 0,0,6,0,0,8,0,4,9,0                      ;100-109	;100-109
213)   9A2F 00 00 01 07 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
213)   9A33 0A 00 03 0B 		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
213)   9A37 1B 00       		 DB 0,0,1,7,10,0,3,11,ESC,0                  ;110-119	;110-119
214)   9A39 00 00 2B 2D 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
214)   9A3D 2A 39 00 00 		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
214)   9A41 00 00       		 DB 0,0,'+','-','*','9',0,0,0,0              ;120-129	;120-129
215)   9A43 00 A7 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
215)   9A47 00 00 00 00 		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
215)   9A4B 00 00       		 DB 0,167,0,0,0,0,0,0,0,0      ;130-139	;130-139
216)   9A4D 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
216)   9A51 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
216)   9A55 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;140-149	;140-149
217)   9A57 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
217)   9A5B 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
217)   9A5F 00 00       		 DB 0,0,0,0,0,0,0,0,0,0       ;150-159	;150-159
218)   9A61 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
218)   9A65 00 00 00 00 		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
218)   9A69 00 00       		 DB 0,0,0,0,0,0,0,0,0,0                      ;160-169	;160-169
 37)   9A6B F5          		DELAYMICROSEC: PUSH AF	;
 38)   9A6C D5          		 PUSH DE	;
 39)   9A6D 1B          		 DEC DE	;
 40)   9A6E D1          		 POP DE	;
 41)   9A6F F1          		 POP AF	;
 42)   9A70 C9          		 RET	;
 45)   9A71 CD 6B 9A    		S21: CALL DELAYMICROSEC	;
 46)   9A74 10 FB       		 DJNZ S21	;
 47)   9A76 C9          		 RET	;
 51)   9A77 F5          		DELAYMILISEC: PUSH AF	;
 52)   9A78 D5          		 PUSH DE	;
 53)   9A79 11 2C 01    		 LD DE, 300        ;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS	;2000 1 MILISEC =300 ON 8MHZ SO 30= 0.1 MILISECS = 100 MICROSECS
 54)   9A7C 1B          		DEL1: DEC DE	;
 55)   9A7D 7A          		 LD A, D        ;TEST FOR DE=00	;TEST FOR DE=00
 56)   9A7E B3          		 OR E	;
 57)   9A7F 20 FB       		 JR NZ, DEL1	;
 58)   9A81 D1          		 POP DE	;
 59)   9A82 F1          		 POP AF	;
 60)   9A83 C9          		 RET	;
 63)   9A84 06 50       		 LD B, 80	;
 65)   9A86 CD 77 9A    		S1: CALL DELAYMILISEC	;
 66)   9A89 10 FB       		 DJNZ S1	;
 67)   9A8B C9          		 RET	;
 72)   9A8C C5          		@DELAYSEC: PUSH BC	;
 73)   9A8D 01 E8 03    		 LD BC, 1000	;
 74)   9A90 C5          		MYDLAGN: PUSH BC	;
 75)   9A91 CD 77 9A    		 CALL DELAY        ;1MS ON 8 MHZ	;1MS ON 8 MHZ
 76)   9A94 C1          		 POP BC	;
 77)   9A95 0B          		 DEC BC	;
 78)   9A96 78          		 LD A, B	;
 79)   9A97 B1          		 OR C	;
 80)   9A98 20 F6       		 JR NZ, MYDLAGN	;
 81)   9A9A C1          		 POP BC	;
 82)   9A9B 10 EF       		 DJNZ DELAYSEC	;
 83)   9A9D C9          		 RET	;
 88)   9A9E F5          		OUTASC: PUSH AF	;
 89)   9A9F D5          		 PUSH DE	;
 90)   9AA0 CD D3 9A    		 CALL B2Bcd	;
 91)   9AA3 D1          		 POP DE	;
 92)   9AA4 CD F9 9A    		 CALL BCD2HA	;
 93)   9AA7 F1          		 POP AF	;
 94)   9AA8 C9          		 RET	;
108)   9AA9 B7          		BCD2BN: OR A	;
109)   9AAA 47          		 LD B, A	;
110)   9AAB E6 F0       		 AND $F0	;
111)   9AAD 0F          		 RRCA	;
112)   9AAE 4F          		 LD C, A	;
113)   9AAF 0F          		 RRCA	;
114)   9AB0 0F          		 RRCA	;
115)   9AB1 81          		 ADD A, C	;
116)   9AB2 4F          		 LD C, A	;
117)   9AB3 78          		 LD A, B	;
118)   9AB4 E6 0F       		 AND $0F	;
119)   9AB6 81          		 ADD A, C	;
120)   9AB7 C9          		 RET	;
135)   9AB8 26 FF       		BN2BCD: LD H, $FF	;
136)   9ABA 24          		D100LP: INC H	;
137)   9ABB D6 64       		 SUB 100	;
138)   9ABD 30 FB       		 JR NC, D100LP	;
139)   9ABF C6 64       		 ADD A, 100	;
140)   9AC1 2E FF       		 LD L, $FF	;
141)   9AC3 2C          		D10LP: INC L	;
142)   9AC4 D6 0A       		 SUB 10	;
143)   9AC6 30 FB       		 JR NC, D10LP	;
144)   9AC8 C6 0A       		 ADD A, 10	;
145)   9ACA 4F          		 LD C, A	;
146)   9ACB 7D          		 LD A, L	;
147)   9ACC 07          		 RLCA	;
148)   9ACD 07          		 RLCA	;
149)   9ACE 07          		 RLCA	;
150)   9ACF 07          		 RLCA	;
151)   9AD0 B1          		 OR C	;
152)   9AD1 6F          		 LD L, A	;
153)   9AD2 C9          		 RET	;
167)   9AD3 01 00 10    		 LD BC, 16 * 256 + 0       ; handle 16 bits, one bit per iteration	; handle 16 bits, one bit per iteration
168)   9AD6 11 00 00    		 LD DE, 0	;
170)   9AD9 29          		 ADD HL, HL	;
171)   9ADA 7B          		 LD A, E	;
172)   9ADB 8F          		 ADC A, A	;
173)   9ADC 27          		 DAA	;
174)   9ADD 5F          		 LD E, A	;
175)   9ADE 7A          		 LD A, D	;
176)   9ADF 8F          		 ADC A, A	;
177)   9AE0 27          		 DAA	;
178)   9AE1 57          		 LD D, A	;
179)   9AE2 79          		 LD A, C	;
180)   9AE3 8F          		 ADC A, A	;
181)   9AE4 27          		 DAA	;
182)   9AE5 4F          		 LD C, A	;
183)   9AE6 10 F1       		 DJNZ cvtLp	;
184)   9AE8 EB          		 EX DE, HL	;
185)   9AE9 C9          		 RET	;
199)   9AEA B7          		BCD2BN: OR A	;
200)   9AEB 47          		 LD B, A	;
201)   9AEC E6 F0       		 AND $F0	;
202)   9AEE 0F          		 RRCA	;
203)   9AEF 4F          		 LD C, A	;
204)   9AF0 0F          		 RRCA	;
205)   9AF1 0F          		 RRCA	;
206)   9AF2 81          		 ADD A, C	;
207)   9AF3 4F          		 LD C, A	;
208)   9AF4 78          		 LD A, B	;
209)   9AF5 E6 0F       		 AND $0F	;
210)   9AF7 81          		 ADD A, C	;
211)   9AF8 C9          		 RET	;
223)   9AF9 79          		 LD A, C	;
224)   9AFA CD 26 9B    		 CALL cvtUN	;
225)   9AFD 79          		 LD A, C	;
226)   9AFE CD 2A 9B    		 CALL cvtLN	;
227)   9B01 7C          		 LD A, H	;
228)   9B02 CD 26 9B    		 CALL cvtUN	;
229)   9B05 7C          		 LD A, H	;
230)   9B06 CD 2A 9B    		 CALL cvtLN	;
231)   9B09 7D          		 LD A, L	;
232)   9B0A CD 26 9B    		 CALL cvtUN	;
233)   9B0D 7D          		 LD A, L	;
234)   9B0E 18 1A       		 JR cvtLN	;
236)   9B10 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
237)   9B11 1F          		 RRA	;
238)   9B12 1F          		 RRA	;
239)   9B13 1F          		 RRA	;
241)   9B14 E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
242)   9B16 C6 90       		 ADD A, 90h        ; old trick	; old trick
243)   9B18 27          		 DAA         ; for converting	; for converting
244)   9B19 CE 40       		 ADC A, 40h        ; one nibble	; one nibble
245)   9B1B 27          		 DAA         ; to hex ASCII	; to hex ASCII
246)   9B1C 12          		 LD (DE), A	;
247)   9B1D 13          		 INC DE	;
248)   9B1E C9          		 RET	;
260)   9B1F 7D          		 LD A, L	;
261)   9B20 CD 10 9B    		 CALL cvtUN	;
262)   9B23 7D          		 LD A, L	;
263)   9B24 18 EE       		 JR cvtLN	;
265)   9B26 1F          		 RRA         ; move upper nibble into lower nibble	; move upper nibble into lower nibble
266)   9B27 1F          		 RRA	;
267)   9B28 1F          		 RRA	;
268)   9B29 1F          		 RRA	;
270)   9B2A E6 0F       		 AND 0Fh        ; isolate lower nibble	; isolate lower nibble
271)   9B2C C6 90       		 ADD A, 90h        ; old trick	; old trick
272)   9B2E 27          		 DAA         ; for converting	; for converting
273)   9B2F CE 40       		 ADC A, 40h        ; one nibble	; one nibble
274)   9B31 27          		 DAA         ; to hex ASCII	; to hex ASCII
275)   9B32 12          		 LD (DE), A	;
276)   9B33 13          		 INC DE	;
277)   9B34 C9          		 RET	;
294)   9B35 F5          		 PUSH AF        ; 11 T-states	; 11 T-states
296)   9B36 ED 44       		 NEG         ; 8 T-states	; 8 T-states
297)   9B38 ED 44       		 NEG         ; 8 T-states	; 8 T-states
298)   9B3A ED 44       		 NEG         ; 8 T-states	; 8 T-states
299)   9B3C ED 44       		 NEG         ; 8 T-states	; 8 T-states
300)   9B3E 0B          		 DEC BC         ; 6 T-states	; 6 T-states
301)   9B3F 79          		 LD A, C        ; 9 T-states	; 9 T-states
302)   9B40 B0          		 OR B         ; 4 T-states	; 4 T-states
303)   9B41 C2 36 9B    		 JP NZ, pau_lp        ; 10 T-states	; 10 T-states
304)   9B44 F1          		 POP AF         ; 10 T-states	; 10 T-states
305)   9B45 C9          		 RET         ; Pause complete, RETurn	; Pause complete, RETurn
343)   9B46 26 00       		@B2D8: LD H, 0	;
344)   9B48 6F          		 LD L, A	;
345)   9B49 1E 00       		@B2D16: LD E, 0	;
346)   9B4B 16 00       		@B2D24: LD D, 0	;
347)   9B4D 01 00 00    		@B2D32: LD BC, 0	;
348)   9B50 DD 21 00 00 		@B2D48: LD IX, 0        ; zero all non-used bits	; zero all non-used bits
349)   9B54 22 C3 00    		@B2D64: LD (B2DINV), HL	;
350)   9B57 ED 53 C5 00 		 LD (B2DINV + 2), DE	;
351)   9B5B ED 43 C7 00 		 LD (B2DINV + 4), BC	;
352)   9B5F DD 22 C9 00 		 LD (B2DINV + 6), IX       ; place full 64-bit input value in buffer	; place full 64-bit input value in buffer
353)   9B63 21 CB 00    		 LD HL, B2DBUF	;
354)   9B66 11 CC 00    		 LD DE, B2DBUF + 1	;
355)   9B69 36 20       		 LD (HL), ' '	;
357)   9B6B 01 12 00    		 LD BC, 18	;
358)   9B6E ED B0       		 LDIR         ; fill 1st 19 bytes of buffer with spaces	; fill 1st 19 bytes of buffer with spaces
359)   9B70 ED 43 DE 00 		 LD (B2DEND - 1), BC       ;set BCD value to "0" & place terminating 0	;set BCD value to "0" & place terminating 0
360)   9B74 1E 01       		 LD E, 1        ; no. of bytes in BCD value	; no. of bytes in BCD value
361)   9B76 21 CB 00    		 LD HL, B2DINV + 8       ; (address MSB input)+1	; (address MSB input)+1
362)   9B79 01 09 09    		 LD BC, 0x0909	;
363)   9B7C AF          		 XOR A	;
364)   9B7D 05          		B2DSKP0: DEC B	;
365)   9B7E 28 29       		 JR Z, B2DSIZ        ; all 0: continue with postprocessing	; all 0: continue with postprocessing
366)   9B80 2B          		 DEC HL	;
367)   9B81 B6          		 OR (HL)        ; find first byte <>0	; find first byte <>0
368)   9B82 28 F9       		 JR Z, B2DSKP0	;
369)   9B84 0D          		B2DFND1: DEC C	;
370)   9B85 17          		 RLA	;
371)   9B86 30 FC       		 JR NC, B2DFND1        ; determine no. of most significant 1-bit	; determine no. of most significant 1-bit
372)   9B88 1F          		 RRA	;
373)   9B89 57          		 LD D, A        ; byte from binary input value	; byte from binary input value
374)   9B8A E5          		B2DLUS2: PUSH HL	;
375)   9B8B C5          		 PUSH BC	;
376)   9B8C 21 DE 00    		B2DLUS1: LD HL, B2DEND - 1      ; address LSB of BCD value	; address LSB of BCD value
377)   9B8F 43          		 LD B, E        ; current length of BCD value in bytes	; current length of BCD value in bytes
378)   9B90 CB 12       		 RL D         ; highest bit from input value -> carry	; highest bit from input value -> carry
379)   9B92 7E          		B2DLUS0: LD A, (HL)	;
380)   9B93 8F          		 ADC A, A	;
381)   9B94 27          		 DAA	;
382)   9B95 77          		 LD (HL), A        ; double 1 BCD byte from intermediate result	; double 1 BCD byte from intermediate result
383)   9B96 2B          		 DEC HL	;
384)   9B97 10 F9       		 DJNZ B2DLUS0        ; and go on to double entire BCD value (+carry!)	; and go on to double entire BCD value (+carry!)
385)   9B99 30 03       		 JR NC, B2DNXT	;
386)   9B9B 1C          		 INC E         ; carry at MSB -> BCD value grew 1 byte larger	; carry at MSB -> BCD value grew 1 byte larger
387)   9B9C 36 01       		 LD (HL), 1        ; initialize new MSB of BCD value	; initialize new MSB of BCD value
388)   9B9E 0D          		B2DNXT: DEC C	;
389)   9B9F 20 EB       		 JR NZ, B2DLUS1        ; repeat for remaining bits from 1 input byte	; repeat for remaining bits from 1 input byte
390)   9BA1 C1          		 POP BC         ; no. of remaining bytes in input value	; no. of remaining bytes in input value
391)   9BA2 0E 08       		 LD C, 8        ; reset bit-counter	; reset bit-counter
392)   9BA4 E1          		 POP HL         ; pointer to byte from input value	; pointer to byte from input value
393)   9BA5 2B          		 DEC HL	;
394)   9BA6 56          		 LD D, (HL)        ; get next group of 8 bits	; get next group of 8 bits
395)   9BA7 10 E1       		 DJNZ B2DLUS2        ; and repeat until last byte from input value	; and repeat until last byte from input value
396)   9BA9 21 DF 00    		B2DSIZ: LD HL, B2DEND        ; address of terminating 0	; address of terminating 0
397)   9BAC 4B          		 LD C, E        ; size of BCD value in bytes	; size of BCD value in bytes
398)   9BAD B7          		 OR A	;
399)   9BAE ED 42       		 SBC HL, BC        ; calculate address of MSB BCD	; calculate address of MSB BCD
400)   9BB0 54          		 LD D, H	;
401)   9BB1 5D          		 LD E, L	;
402)   9BB2 ED 42       		 SBC HL, BC	;
403)   9BB4 EB          		 EX DE, HL        ; HL=address BCD value, DE=start of decimal value	; HL=address BCD value, DE=start of decimal value
404)   9BB5 41          		 LD B, C        ; no. of bytes BCD	; no. of bytes BCD
405)   9BB6 CB 21       		 SLA C         ; no. of bytes decimal (possibly 1 too high)	; no. of bytes decimal (possibly 1 too high)
406)   9BB8 3E 30       		 LD A, '0'	;
407)   9BBA ED 6F       		 RLD         ; shift bits 4-7 of (HL) into bit 0-3 of A	; shift bits 4-7 of (HL) into bit 0-3 of A
408)   9BBC FE 30       		 CP '0'         ; (HL) was > 9h?	; (HL) was > 9h?
409)   9BBE 20 06       		 JR NZ, B2DEXPH        ; if yes, start with recording high digit	; if yes, start with recording high digit
410)   9BC0 0D          		 DEC C         ; correct number of decimals	; correct number of decimals
411)   9BC1 13          		 INC DE         ; correct start address	; correct start address
412)   9BC2 18 04       		 JR B2DEXPL        ; continue with converting low digit	; continue with converting low digit
413)   9BC4 ED 6F       		B2DEXP: RLD         ; shift high digit (HL) into low digit of A	; shift high digit (HL) into low digit of A
414)   9BC6 12          		B2DEXPH: LD (DE), A       ; record resulting ASCII-code	; record resulting ASCII-code
415)   9BC7 13          		 INC DE	;
416)   9BC8 ED 6F       		B2DEXPL: RLD	;
417)   9BCA 12          		 LD (DE), A	;
418)   9BCB 13          		 INC DE	;
419)   9BCC 23          		 INC HL         ; next BCD-byte	; next BCD-byte
420)   9BCD 10 F5       		 DJNZ B2DEXP        ; and go on to convert each BCD-byte into 2 ASCII	; and go on to convert each BCD-byte into 2 ASCII
421)   9BCF ED 42       		 SBC HL, BC        ; return with HL pointing to 1st decimal	; return with HL pointing to 1st decimal
422)   9BD1 C9          		 RET	;
426)   9BD2 EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
427)   9BD3 21 CB 00    		 ld hl, B2DBUF	;
428)   9BD6 CD DD 9B    		 call SkipWhitespace	;
429)   9BD9 ED B0       		 ldir	;
430)   9BDB EB          		 ex de, hl        ; Get destination into DE	; Get destination into DE
431)   9BDC C9          		 ret	;
436)   9BDD 7E          		 ld a, (hl)	;
437)   9BDE FE 20       		 cp ' '	;
438)   9BE0 C0          		 ret nz	;
439)   9BE1 23          		 inc hl	;
440)   9BE2 18 F9       		 jr SkipWhitespace	;
444)   9BE4 06 08       		@REVBITS: ld b, 8	;
445)   9BE6 6F          		 ld l, a	;
447)   9BE7 CB 15       		 rl l	;
448)   9BE9 1F          		 rra	;
449)   9BEA 10 FB       		 djnz REVLOOP	;
450)   9BEC C9          		 RET	;
460)   9BED E5          		 push hl	;
462)   9BEE 7E          		 ld a, (hl)	;
464)   9BEF FE 00       		 cp  0	;
465)   9BF1 28 0E       		 jr z, IsStrDecTrue	;
467)   9BF3 FE 30       		 cp  '0'	;
468)   9BF5 38 06       		 jr c, IsStrDecFalse	;
470)   9BF7 FE 3A       		 cp  '9'+1	;
471)   9BF9 38 09       		 jr c, IsStrDecContinue	;
472)   9BFB FE 39       		 cp  '9'	;
475)   9BFD F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
476)   9BFF E1          		 pop hl	;
477)   9C00 C9          		 ret	;
479)   9C01 BF          		 cp a         ; Set zero flag	; Set zero flag
480)   9C02 E1          		 pop hl	;
481)   9C03 C9          		 ret	;
483)   9C04 23          		 inc hl	;
484)   9C05 18 E7       		 jr IsStrDec00	;
491)   9C07 E5          		 push hl	;
493)   9C08 7E          		 ld a, (hl)	;
495)   9C09 FE 00       		 cp  0	;
496)   9C0B 28 14       		 jr z, IsStrHexTrue	;
498)   9C0D FE 30       		 cp  '0'	;
499)   9C0F 38 0C       		 jr c, IsStrHexFalse	;
501)   9C11 FE 3A       		 cp  '9'+1	;
502)   9C13 38 0F       		 jr c, IsStrHexContinue	;
504)   9C15 FE 30       		 cp  '0'	;
505)   9C17 38 04       		 jr c, IsStrHexFalse	;
507)   9C19 FE 47       		 cp  'F'+1	;
508)   9C1B 38 07       		 jr c, IsStrHexContinue	;
511)   9C1D F6 01       		 or 1         ; Reset zero flag	; Reset zero flag
512)   9C1F E1          		 pop hl	;
513)   9C20 C9          		 ret	;
515)   9C21 BF          		 cp a         ; Set zero flag	; Set zero flag
516)   9C22 E1          		 pop hl	;
517)   9C23 C9          		 ret	;
519)   9C24 23          		 inc hl	;
520)   9C25 18 E1       		 jr IsStrHex00	;
527)   9C27 AF          		 xor a	;
528)   9C28 CD 2D 9C    		 call loop	;
529)   9C2B 7A          		 ld a, d	;
530)   9C2C C9          		 ret	;
532)   9C2D 57          		 ld d, a	;
533)   9C2E 7E          		 ld a, (hl)	;
534)   9C2F 23          		 inc hl	;
535)   9C30 D6 3A       		 sub '9' + 1	;
536)   9C32 C6 0A       		 add 10	;
537)   9C34 D0          		 ret nc	;
538)   9C35 5F          		 ld e, a	;
539)   9C36 7A          		 ld a, d	;
540)   9C37 87          		 add a, a        ;double our accumulator	;double our accumulator
541)   9C38 87          		 add a, a        ;double again (now x4)	;double again (now x4)
542)   9C39 82          		 add a, d        ;add the original (now x5)	;add the original (now x5)
543)   9C3A 87          		 add a, a        ;double again (now x10)	;double again (now x10)
544)   9C3B 83          		 add a, e        ;add in the incoming digit	;add in the incoming digit
545)   9C3C 18 EF       		 jr loop	;
553)   9C3E 7E          		 ld a, (hl)        ; Copy first char to A	; Copy first char to A
554)   9C3F CD 4F 9C    		 call Hex12        ; Convert first char	; Convert first char
555)   9C42 87          		 add a, a        ; Multiply by 16...	; Multiply by 16...
556)   9C43 87          		 add a, a        ; ...	; ...
557)   9C44 87          		 add a, a        ; ...	; ...
558)   9C45 87          		 add a, a        ; ...done!	; ...done!
559)   9C46 57          		 ld d, a        ; Store top 4 bits in D	; Store top 4 bits in D
560)   9C47 23          		 inc hl         ; Advance to next char	; Advance to next char
561)   9C48 7E          		 ld a, (hl)	;
562)   9C49 CD 4F 9C    		 call Hex12        ; Convert second char	; Convert second char
563)   9C4C B2          		 or d         ; Add back top bits	; Add back top bits
564)   9C4D 23          		 inc hl         ; Advance for next guy	; Advance for next guy
565)   9C4E C9          		 ret	;
566)   9C4F D6 30       		Hex12: sub  '0'	;
567)   9C51 FE 0A       		 cp 10	;
568)   9C53 D8          		 ret c	;
569)   9C54 D6 07       		 sub 'A' - '0' - 10	;
570)   9C56 C9          		 ret	;
577)   9C57 CD 3E 9C    		 call Read8bit	;
578)   9C5A 47          		 ld b, a	;
579)   9C5B CD 3E 9C    		 call Read8bit	;
580)   9C5E 4F          		 ld c, a	;
581)   9C5F C9          		 ret	;
589)   9C60 7E          		 ld a, (hl)	;
590)   9C61 23          		 inc hl	;
591)   9C62 D6 30       		 sub '0'	;
592)   9C64 CB 27       		 sla a	;
593)   9C66 CB 27       		 sla a	;
594)   9C68 CB 27       		 sla a	;
595)   9C6A CB 27       		 sla a	;
596)   9C6C 47          		 ld b, a	;
597)   9C6D 7E          		 ld a, (hl)	;
598)   9C6E 23          		 inc hl	;
599)   9C6F D6 30       		 sub '0'	;
600)   9C71 B0          		 or b	;
601)   9C72 C9          		 ret	;
606)   9C73 4F          		 ld c, a        ; a = number to convert	; a = number to convert
607)   9C74 CD 80 9C    		 call Num1	;
608)   9C77 77          		 ld (hl), a	;
609)   9C78 23          		 inc hl	;
610)   9C79 79          		 ld a, c	;
611)   9C7A CD 84 9C    		 call Num2	;
612)   9C7D 77          		 ld (hl), a	;
613)   9C7E 23          		 inc hl	;
614)   9C7F C9          		 ret	;
615)   9C80 1F          		Num1: rra	;
616)   9C81 1F          		 rra	;
617)   9C82 1F          		 rra	;
618)   9C83 1F          		 rra	;
619)   9C84 F6 F0       		Num2: or $F0	;
620)   9C86 27          		 daa	;
621)   9C87 C6 A0       		 add a, $A0	;
622)   9C89 CE 40       		 adc a, $40        ; Ascii hex at this point (0 to F)	; Ascii hex at this point (0 to F)
623)   9C8B C9          		 ret	;
634)   9C8C 22 AC 00    		STR_SET: LD (LINESTR),HL	;
635)   9C8F C9          		 RET	;
638)   9C90 AF          		STR_CLR: XOR A	;
639)   9C91 32 AE 00    		 LD (LINEPOS),A	;
640)   9C94 32 AC 00    		 LD (LINESTR),A	;
641)   9C97 32 AD 00    		 LD (LINESTR+1),A	;
642)   9C9A C9          		 RET	;
645)   9C9B 3A AC 00    		STR_VALID: LD A,(LINESTR)	;
646)   9C9E 47          		 LD B,A	;
647)   9C9F 3A AD 00    		 LD A,(LINESTR+1)	;
648)   9CA2 80          		 ADD B	;
649)   9CA3 B7          		 OR A	;
650)   9CA4 C9          		 RET	;
656)   9CA5 F5          		STR_CALCADDR: PUSH AF	;
657)   9CA6 ED 5B AC 00 		 LD DE,(LINESTR)	;
658)   9CAA EB          		 EX DE,HL	;
659)   9CAB 3A AE 00    		 LD A,(LINEPOS)	;
660)   9CAE 4F          		 LD C,A	;
661)   9CAF 06 00       		 LD B,0	;
662)   9CB1 09          		 ADD HL,BC	;
663)   9CB2 EB          		 EX DE,HL	;
664)   9CB3 F1          		 POP AF	;
665)   9CB4 C9          		 RET	;
669)   9CB5 3A AE 00    		STR_NEXTPOS: LD A,(LINEPOS)	;
670)   9CB8 3C          		 INC A	;
671)   9CB9 32 AE 00    		 LD (LINEPOS),A	;
672)   9CBC C9          		 RET	;
676)   9CBD CD A5 9C    		STR_ADD: CALL STR_CALCADDR	;
677)   9CC0 CD B5 9C    		STRA_AGN: CALL STR_NEXTPOS	;
678)   9CC3 7E          		 LD A,(HL)	;
679)   9CC4 12          		 LD (DE),A	;
680)   9CC5 23          		 INC HL	;
681)   9CC6 13          		 INC DE	;
682)   9CC7 B7          		 OR A	;
683)   9CC8 C8          		 RET Z	;
684)   9CC9 18 F5       		 JR STRA_AGN	;
687)   9CCB CD A5 9C    		STR_ADDCHAR: CALL STR_CALCADDR	;
688)   9CCE 12          		 LD (DE),A	;
689)   9CCF CD B5 9C    		 CALL STR_NEXTPOS	;
690)   9CD2 13          		 INC DE	;
691)   9CD3 AF          		 XOR A	;
692)   9CD4 12          		 LD (DE),A	;
693)   9CD5 C9          		 RET	;
701)   9CD6 26 00       		@PRINTNUM: LD H,0	;
702)   9CD8 6F          		 LD L,A	;
703)   9CD9 F5          		@PRINTNUM16: PUSH AF	;
705)   9CDA 11 BC 00    		 LD DE,NUMBUF	;
706)   9CDD CD 1F 9B    		 CALL Bcd2ASC  ;FOR HEX	;FOR HEX
707)   9CE0 3E 68       		 LD A,'h'	;
708)   9CE2 12          		 LD (DE),A  	;
709)   9CE3 13          		 INC DE	;
710)   9CE4 AF          		 XOR A	;
711)   9CE5 12          		 LD (DE),A  	;
713)   9CE6 21 BC 00    		 LD HL,NUMBUF	;
714)   9CE9 CD 28 8B    		 CALL RS_TXT	;
715)   9CEC CD 88 8B    		 CALL RS_NEWLINE	;
716)   9CEF F1          		 POP AF	;
717)   9CF0 C9          		 RET	;
725)   9CF1 E5          		@NUM_ADDZERO: PUSH HL	;
726)   9CF2 0E 00       		 LD C,0	;
727)   9CF4 7E          		AZ_AGN: LD A,(HL)   	;
728)   9CF5 23          		 INC HL	;
729)   9CF6 0C          		 INC C	;
730)   9CF7 FE 00       		 CP 0	;
731)   9CF9 20 F9       		 JR NZ,AZ_AGN	;
732)   9CFB 0D          		 DEC C ;EXCLUDE ZERO TERM	;EXCLUDE ZERO TERM
733)   9CFC E1          		 POP HL	;
734)   9CFD 79          		 LD A,C	;
735)   9CFE B8          		 CP B	;
736)   9CFF C8          		 RET Z	;
738)   9D00 78          		 LD A,B	;
739)   9D01 91          		 SUB C	;
740)   9D02 D8          		 RET C ;RETURN IF CARRY MEANS WE HAVE MORE DIGITS	;RETURN IF CARRY MEANS WE HAVE MORE DIGITS
741)   9D03 47          		 LD B,A	;
742)   9D04 3E 30       		 LD A,'0'	;
743)   9D06 2B          		AZ_AGN2: DEC HL	;
744)   9D07 77          		 LD (HL),A	;
745)   9D08 10 FC       		 DJNZ AZ_AGN2 	;
746)   9D0A C9          		 RET	;
752)   9D0B 11 8B 00    		@COPYFNAME: LD DE,STRGBUFF	;
753)   9D0E 7E          		@COPYSTRING:   LD A,(HL)	;
754)   9D0F 12          		 LD (DE),A	;
755)   9D10 FE 00       		 CP 0	;
756)   9D12 C8          		 RET Z  	;
757)   9D13 13          		 INC DE	;
758)   9D14 23          		 INC HL	;
759)   9D15 18 F7       		 JR COPYSTRING	;
  1)   9D17 00 00 00 00 		DS 0A000H-$	;
  1)   9D1B 00 00 00 00 		DS 0A000H-$	;
  1)   9D1F 00 00 00 00 		DS 0A000H-$	;
  1)   9D23 00 00 00 00 		DS 0A000H-$	;
  1)   9D27 00 00 00 00 		DS 0A000H-$	;
  1)   9D2B 00 00 00 00 		DS 0A000H-$	;
  1)   9D2F 00 00 00 00 		DS 0A000H-$	;
  1)   9D33 00 00 00 00 		DS 0A000H-$	;
  1)   9D37 00 00 00 00 		DS 0A000H-$	;
  1)   9D3B 00 00 00 00 		DS 0A000H-$	;
  1)   9D3F 00 00 00 00 		DS 0A000H-$	;
  1)   9D43 00 00 00 00 		DS 0A000H-$	;
  1)   9D47 00 00 00 00 		DS 0A000H-$	;
  1)   9D4B 00 00 00 00 		DS 0A000H-$	;
  1)   9D4F 00 00 00 00 		DS 0A000H-$	;
  1)   9D53 00 00 00 00 		DS 0A000H-$	;
  1)   9D57 00 00 00 00 		DS 0A000H-$	;
  1)   9D5B 00 00 00 00 		DS 0A000H-$	;
  1)   9D5F 00 00 00 00 		DS 0A000H-$	;
  1)   9D63 00 00 00 00 		DS 0A000H-$	;
  1)   9D67 00 00 00 00 		DS 0A000H-$	;
  1)   9D6B 00 00 00 00 		DS 0A000H-$	;
  1)   9D6F 00 00 00 00 		DS 0A000H-$	;
  1)   9D73 00 00 00 00 		DS 0A000H-$	;
  1)   9D77 00 00 00 00 		DS 0A000H-$	;
  1)   9D7B 00 00 00 00 		DS 0A000H-$	;
  1)   9D7F 00 00 00 00 		DS 0A000H-$	;
  1)   9D83 00 00 00 00 		DS 0A000H-$	;
  1)   9D87 00 00 00 00 		DS 0A000H-$	;
  1)   9D8B 00 00 00 00 		DS 0A000H-$	;
  1)   9D8F 00 00 00 00 		DS 0A000H-$	;
  1)   9D93 00 00 00 00 		DS 0A000H-$	;
  1)   9D97 00 00 00 00 		DS 0A000H-$	;
  1)   9D9B 00 00 00 00 		DS 0A000H-$	;
  1)   9D9F 00 00 00 00 		DS 0A000H-$	;
  1)   9DA3 00 00 00 00 		DS 0A000H-$	;
  1)   9DA7 00 00 00 00 		DS 0A000H-$	;
  1)   9DAB 00 00 00 00 		DS 0A000H-$	;
  1)   9DAF 00 00 00 00 		DS 0A000H-$	;
  1)   9DB3 00 00 00 00 		DS 0A000H-$	;
  1)   9DB7 00 00 00 00 		DS 0A000H-$	;
  1)   9DBB 00 00 00 00 		DS 0A000H-$	;
  1)   9DBF 00 00 00 00 		DS 0A000H-$	;
  1)   9DC3 00 00 00 00 		DS 0A000H-$	;
  1)   9DC7 00 00 00 00 		DS 0A000H-$	;
  1)   9DCB 00 00 00 00 		DS 0A000H-$	;
  1)   9DCF 00 00 00 00 		DS 0A000H-$	;
  1)   9DD3 00 00 00 00 		DS 0A000H-$	;
  1)   9DD7 00 00 00 00 		DS 0A000H-$	;
  1)   9DDB 00 00 00 00 		DS 0A000H-$	;
  1)   9DDF 00 00 00 00 		DS 0A000H-$	;
  1)   9DE3 00 00 00 00 		DS 0A000H-$	;
  1)   9DE7 00 00 00 00 		DS 0A000H-$	;
  1)   9DEB 00 00 00 00 		DS 0A000H-$	;
  1)   9DEF 00 00 00 00 		DS 0A000H-$	;
  1)   9DF3 00 00 00 00 		DS 0A000H-$	;
  1)   9DF7 00 00 00 00 		DS 0A000H-$	;
  1)   9DFB 00 00 00 00 		DS 0A000H-$	;
  1)   9DFF 00 00 00 00 		DS 0A000H-$	;
  1)   9E03 00 00 00 00 		DS 0A000H-$	;
  1)   9E07 00 00 00 00 		DS 0A000H-$	;
  1)   9E0B 00 00 00 00 		DS 0A000H-$	;
  1)   9E0F 00 00 00 00 		DS 0A000H-$	;
  1)   9E13 00 00 00 00 		DS 0A000H-$	;
  1)   9E17 00 00 00 00 		DS 0A000H-$	;
  1)   9E1B 00 00 00 00 		DS 0A000H-$	;
  1)   9E1F 00 00 00 00 		DS 0A000H-$	;
  1)   9E23 00 00 00 00 		DS 0A000H-$	;
  1)   9E27 00 00 00 00 		DS 0A000H-$	;
  1)   9E2B 00 00 00 00 		DS 0A000H-$	;
  1)   9E2F 00 00 00 00 		DS 0A000H-$	;
  1)   9E33 00 00 00 00 		DS 0A000H-$	;
  1)   9E37 00 00 00 00 		DS 0A000H-$	;
  1)   9E3B 00 00 00 00 		DS 0A000H-$	;
  1)   9E3F 00 00 00 00 		DS 0A000H-$	;
  1)   9E43 00 00 00 00 		DS 0A000H-$	;
  1)   9E47 00 00 00 00 		DS 0A000H-$	;
  1)   9E4B 00 00 00 00 		DS 0A000H-$	;
  1)   9E4F 00 00 00 00 		DS 0A000H-$	;
  1)   9E53 00 00 00 00 		DS 0A000H-$	;
  1)   9E57 00 00 00 00 		DS 0A000H-$	;
  1)   9E5B 00 00 00 00 		DS 0A000H-$	;
  1)   9E5F 00 00 00 00 		DS 0A000H-$	;
  1)   9E63 00 00 00 00 		DS 0A000H-$	;
  1)   9E67 00 00 00 00 		DS 0A000H-$	;
  1)   9E6B 00 00 00 00 		DS 0A000H-$	;
  1)   9E6F 00 00 00 00 		DS 0A000H-$	;
  1)   9E73 00 00 00 00 		DS 0A000H-$	;
  1)   9E77 00 00 00 00 		DS 0A000H-$	;
  1)   9E7B 00 00 00 00 		DS 0A000H-$	;
  1)   9E7F 00 00 00 00 		DS 0A000H-$	;
  1)   9E83 00 00 00 00 		DS 0A000H-$	;
  1)   9E87 00 00 00 00 		DS 0A000H-$	;
  1)   9E8B 00 00 00 00 		DS 0A000H-$	;
  1)   9E8F 00 00 00 00 		DS 0A000H-$	;
  1)   9E93 00 00 00 00 		DS 0A000H-$	;
  1)   9E97 00 00 00 00 		DS 0A000H-$	;
  1)   9E9B 00 00 00 00 		DS 0A000H-$	;
  1)   9E9F 00 00 00 00 		DS 0A000H-$	;
  1)   9EA3 00 00 00 00 		DS 0A000H-$	;
  1)   9EA7 00 00 00 00 		DS 0A000H-$	;
  1)   9EAB 00 00 00 00 		DS 0A000H-$	;
  1)   9EAF 00 00 00 00 		DS 0A000H-$	;
  1)   9EB3 00 00 00 00 		DS 0A000H-$	;
  1)   9EB7 00 00 00 00 		DS 0A000H-$	;
  1)   9EBB 00 00 00 00 		DS 0A000H-$	;
  1)   9EBF 00 00 00 00 		DS 0A000H-$	;
  1)   9EC3 00 00 00 00 		DS 0A000H-$	;
  1)   9EC7 00 00 00 00 		DS 0A000H-$	;
  1)   9ECB 00 00 00 00 		DS 0A000H-$	;
  1)   9ECF 00 00 00 00 		DS 0A000H-$	;
  1)   9ED3 00 00 00 00 		DS 0A000H-$	;
  1)   9ED7 00 00 00 00 		DS 0A000H-$	;
  1)   9EDB 00 00 00 00 		DS 0A000H-$	;
  1)   9EDF 00 00 00 00 		DS 0A000H-$	;
  1)   9EE3 00 00 00 00 		DS 0A000H-$	;
  1)   9EE7 00 00 00 00 		DS 0A000H-$	;
  1)   9EEB 00 00 00 00 		DS 0A000H-$	;
  1)   9EEF 00 00 00 00 		DS 0A000H-$	;
  1)   9EF3 00 00 00 00 		DS 0A000H-$	;
  1)   9EF7 00 00 00 00 		DS 0A000H-$	;
  1)   9EFB 00 00 00 00 		DS 0A000H-$	;
  1)   9EFF 00 00 00 00 		DS 0A000H-$	;
  1)   9F03 00 00 00 00 		DS 0A000H-$	;
  1)   9F07 00 00 00 00 		DS 0A000H-$	;
  1)   9F0B 00 00 00 00 		DS 0A000H-$	;
  1)   9F0F 00 00 00 00 		DS 0A000H-$	;
  1)   9F13 00 00 00 00 		DS 0A000H-$	;
  1)   9F17 00 00 00 00 		DS 0A000H-$	;
  1)   9F1B 00 00 00 00 		DS 0A000H-$	;
  1)   9F1F 00 00 00 00 		DS 0A000H-$	;
  1)   9F23 00 00 00 00 		DS 0A000H-$	;
  1)   9F27 00 00 00 00 		DS 0A000H-$	;
  1)   9F2B 00 00 00 00 		DS 0A000H-$	;
  1)   9F2F 00 00 00 00 		DS 0A000H-$	;
  1)   9F33 00 00 00 00 		DS 0A000H-$	;
  1)   9F37 00 00 00 00 		DS 0A000H-$	;
  1)   9F3B 00 00 00 00 		DS 0A000H-$	;
  1)   9F3F 00 00 00 00 		DS 0A000H-$	;
  1)   9F43 00 00 00 00 		DS 0A000H-$	;
  1)   9F47 00 00 00 00 		DS 0A000H-$	;
  1)   9F4B 00 00 00 00 		DS 0A000H-$	;
  1)   9F4F 00 00 00 00 		DS 0A000H-$	;
  1)   9F53 00 00 00 00 		DS 0A000H-$	;
  1)   9F57 00 00 00 00 		DS 0A000H-$	;
  1)   9F5B 00 00 00 00 		DS 0A000H-$	;
  1)   9F5F 00 00 00 00 		DS 0A000H-$	;
  1)   9F63 00 00 00 00 		DS 0A000H-$	;
  1)   9F67 00 00 00 00 		DS 0A000H-$	;
  1)   9F6B 00 00 00 00 		DS 0A000H-$	;
  1)   9F6F 00 00 00 00 		DS 0A000H-$	;
  1)   9F73 00 00 00 00 		DS 0A000H-$	;
  1)   9F77 00 00 00 00 		DS 0A000H-$	;
  1)   9F7B 00 00 00 00 		DS 0A000H-$	;
  1)   9F7F 00 00 00 00 		DS 0A000H-$	;
  1)   9F83 00 00 00 00 		DS 0A000H-$	;
  1)   9F87 00 00 00 00 		DS 0A000H-$	;
  1)   9F8B 00 00 00 00 		DS 0A000H-$	;
  1)   9F8F 00 00 00 00 		DS 0A000H-$	;
  1)   9F93 00 00 00 00 		DS 0A000H-$	;
  1)   9F97 00 00 00 00 		DS 0A000H-$	;
  1)   9F9B 00 00 00 00 		DS 0A000H-$	;
  1)   9F9F 00 00 00 00 		DS 0A000H-$	;
  1)   9FA3 00 00 00 00 		DS 0A000H-$	;
  1)   9FA7 00 00 00 00 		DS 0A000H-$	;
  1)   9FAB 00 00 00 00 		DS 0A000H-$	;
  1)   9FAF 00 00 00 00 		DS 0A000H-$	;
  1)   9FB3 00 00 00 00 		DS 0A000H-$	;
  1)   9FB7 00 00 00 00 		DS 0A000H-$	;
  1)   9FBB 00 00 00 00 		DS 0A000H-$	;
  1)   9FBF 00 00 00 00 		DS 0A000H-$	;
  1)   9FC3 00 00 00 00 		DS 0A000H-$	;
  1)   9FC7 00 00 00 00 		DS 0A000H-$	;
  1)   9FCB 00 00 00 00 		DS 0A000H-$	;
  1)   9FCF 00 00 00 00 		DS 0A000H-$	;
  1)   9FD3 00 00 00 00 		DS 0A000H-$	;
  1)   9FD7 00 00 00 00 		DS 0A000H-$	;
  1)   9FDB 00 00 00 00 		DS 0A000H-$	;
  1)   9FDF 00 00 00 00 		DS 0A000H-$	;
  1)   9FE3 00 00 00 00 		DS 0A000H-$	;
  1)   9FE7 00 00 00 00 		DS 0A000H-$	;
  1)   9FEB 00 00 00 00 		DS 0A000H-$	;
  1)   9FEF 00 00 00 00 		DS 0A000H-$	;
  1)   9FF3 00 00 00 00 		DS 0A000H-$	;
  1)   9FF7 00 00 00 00 		DS 0A000H-$	;
  1)   9FFB 00 00 00 00 		DS 0A000H-$	;
  1)   9FFF 00          		DS 0A000H-$	;
