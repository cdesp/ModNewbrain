			;Internal routines
	GLOBAL TP1IO
	GLOBAL TP2IO
	GLOBAL WTRDY
	GLOBAL LDREGS
	GLOBAL STREGS
	GLOBAL WRBLCK
	GLOBAL RDBLCK
			;External routines
	GLOBAL IDLE
	GLOBAL ADHLA
	GLOBAL RDBYTE
	GLOBAL WMKBUFF
	GLOBAL ZOUTPUT
			;External addresses
	GLOBAL RST8
	GLOBAL CHKSUM
	GLOBAL COPCTL
	GLOBAL COPST
	GLOBAL COPBUF
	GLOBAL CHRBUF
 
LENGTHERR	EQU 131	;CASSETTE ERROR NUMBERS
CHECKSUMERR	EQU 132
ENDDATAERR	EQU 133
SEQUENCERR	EQU 134
OUTINERR	EQU 135
SYNTAXERR	EQU 136
 
READY	EQU 5
BRKOK	EQU 3
CERR	EQU 4
 
CASSCOM	EQU 80H
NULLCOM	EQU 0D0H
PLAYBK	EQU 4
RECORD	EQU 0
 
DATATY	EQU 0
NAMETY	EQU 81H
CLOSETY	EQU 82H
BINTY	EQU 83H
 
ZTCHR	EQU 0CFH	;RST 8
 
FLAGS	EQU 0
BSTO	EQU 1
CTEMP	EQU 2
BTEMP	EQU 3
TYPE	EQU 4
MOTOR	EQU 5
 
MOTOR1	EQU 8
MOTOR2	EQU 2
 
SUPPRESS	EQU 0
	EJECT
TP1IO	DEFB 4
	DEFB TP1OPI-$
	DEFB TP1OPO-$
	DEFB TPINP-$
	DEFB TPOUT-$
	DEFB TPCLS-$
 
TP2IO	DEFB 4
	DEFB TP2OPI-$
	DEFB TP2OPO-$
	DEFB TPINP-$
	DEFB TPOUT-$
	DEFB TPCLS-$
 
TP2OPO	LD A MOTOR2
	JR TPOPO
 
TP1OPO	LD A MOTOR1
TPOPO	PUSH AF
	CALL TPSYN
	POP AF
	LD (HL) 80H	;out flag
	CALL BRACKET
	INC HL
	LD (HL) B
	INC HL
	LD (HL) 0
	INC HL
	LD (HL) B
	INC HL
	LD (HL) DATATY
	INC HL
	LD (HL) A
	EX DE HL
	LD B 0
	LD D A
	LD E NAMETY
	JP WRBLCK
 
TPCLS	LD E (HL)
	RL E
	RET NC
	CALL LDBUFF
	XOR A
	SUB C
	LD C A
	LD A (IX+BSTO)
	SBC A B
	LD B A
	LD A H
	ADD A (IX+BSTO)
	LD H A
	XOR A
	SBC HL BC
	INC E
	SET 6 E
	JP WRBLCK
	EJECT
TP2OPI	LD A MOTOR2
	JR TPOPI
 
TP1OPI	LD A MOTOR1
TPOPI	PUSH AF
	CALL TPSYN
	POP AF
	PUSH HL
	POP IX
	LD (HL) 0
	CALL BRACKET
	INC HL
	LD (HL) B
	INC HL
	INC HL
	LD (HL) 0
	INC HL
	INC HL
	LD (HL) A
	INC HL
TRYAGAIN	XOR A
	PUSH HL
	PUSH DE
	PUSH BC
	LD C A
	LD D (IX+MOTOR)
	CALL RDBLCK
	LD (IX+TYPE) E
	LD (IX+CTEMP) C
	POP BC
	POP DE
	POP HL
	RET C
	LD A NAMETY
	CP (IX+TYPE)
	JR NZ TRYAGAIN
	LD A C
	OR A
	JR Z GOTONE
	CP (IX+CTEMP)
	CALL Z CPSTRINGS
GOTONE	CALL SENDSTRING
	JR NZ TRYAGAIN
	LD (IX+TYPE) DATATY
	LD C (IX+CTEMP)
	XOR A
	LD B A
	LD (IX+CTEMP) A
	RET
	EJECT
TPOUT	BIT 7 (HL)
	JR Z OIER
 
TPOUT1	CALL LDBUFF
	PUSH HL		;
	ADD HL BC	;
	DEC HL
	LD (HL) A	;
	POP HL		;MO
	CALL DECBC	;
	LD A C		;
	OR B		;
	RET NZ		;
 
BLKOUT
	LD B (IX+BSTO)
	LD C A
	INC E
	RES 7 E
	CALL STREGS	;
	JR WRBLCK	;
 
OIER	LD A OUTINERR
	SCF
	RET
	EJECT
TPINP	BIT 7 (HL)
	JR NZ OIER
	CALL LDBUFF
	LD A C
	OR B
	JR NZ TPINP1
TPINP2	LD A ENDDATAERR
	BIT 6 E
	SCF
	RET NZ
	PUSH HL
	LD B (IX+BSTO)
	LD C 0
	CALL RDBLCK
	LD D (IX+MOTOR)
	POP HL
	RET C
	LD A (IX+TYPE)
	INC A
	RES 6 A
	CP E
	JR Z TPINP3
	SET 6 A
	CP E
	SCF
	JR Z TPINP3
	LD A SEQUENCERR
	RET
TPINP3	LD A B
	OR C
	JR Z TPINP2
TPINP1	PUSH HL
	DEC HL
	ADD HL BC
	LD A (HL)	;
	POP HL		;
DECBC	DEC BC		;
STREGS	PUSH HL		;
	DEC HL		;
	LD (HL) D
	DEC HL
	LD (HL) E	;
	DEC HL
	LD (HL) B
	DEC HL
	LD (HL) C
	POP HL		;
	RET		;
	EJECT
WRBLCK	ORG $
	LD A CASSCOM+RECORD
	CALL CASSON	;
	LD A C		;
	DEFB ZTCHR	;
	LD A B		;
	DEFB ZTCHR	;
WRBLLP	LD A B		;
	OR C		;
	JR Z WRBEND-$	;
	DEC BC		;
	LD A (HL)	;
	INC HL		;
	DEFB ZTCHR	;
	JR WRBLLP	;
 
WRBEND	LD A E
	DEFB ZTCHR
	LD HL (CHKSUM)	;
	LD A L		;
	DEFB ZTCHR	;
	LD A H		;
	DEFB ZTCHR	;
	PUSH BC
	LD B 9
WRBD1	XOR A		;
	DEFB ZTCHR	;
	DJNZ WRBD1
	POP BC
	JR NOEREX	;
	EJECT
RDBLCK	ORG $
	CALL PRETRD	;
	RET C		;
	LD E A		;
	DEFB ZTCHR	;
	LD D A		;
	PUSH HL		;
	LD H B		;
	LD L C		;
	SBC HL DE	;
	POP HL		;
	LD B D		;for return information.
	LD C E		;
	LD A LENGTHERR	;
	JR C ERREX2-$	;
 
RDBLLP	LD A D		;
	OR E		;
	JR Z RDBEND-$	;
	DEC DE		;
	DEFB ZTCHR	;
	LD (HL) A	;
	INC HL		;
	JR RDBLLP	;
 
RDBEND	DEFB ZTCHR
	LD E A
	LD HL (CHKSUM)	;
	DEFB ZTCHR	;
	CP L
	JR NZ CHKERR
	DEFB ZTCHR	;
	CP H
	JR Z NOEREX-$	;
CHKERR	LD A CHECKSUMERR	;
	JR ERREX2-$	;
	EJECT
PRETRD	LD A CASSCOM+PLAYBK
	CALL CASSON	;
	DEFB ZTCHR	;
 
TCHR	ORG $
	PUSH HL		;
	DI		;
	LD HL COPBUF	;
	LD (HL) A	;
	CALL WTRDY	;
	BIT CERR (HL)	;
	INC HL
	LD A (HL)
	JR NZ ERREX1-$	;
	LD HL (CHKSUM)	;
	PUSH AF		;
	CALL ADHLA	;
	POP AF		;
	JR PUTCS-$	;
 
ERREX1	POP HL		;
	POP HL		;
ERREX2	SCF		;
NOEREX			;
	LD HL COPCTL	;
	LD (HL) NULLCOM	;
	CALL WTRDY	;
	CALL WTRDY
	CALL WTRDY
	RES CERR (HL)
	EI		;
	RET		;
 
CASSON	ADD A D		;
	CALL CASRPT	;
CASRPT	PUSH HL		;
	CALL WTRDY	;
	LD (HL) 0	;
	DEC HL		;
	LD (HL) A	;
PUTCS	EI		;
	LD (CHKSUM) HL	;
	LD HL TCHR
	LD (RST8) HL
	POP HL		;
	OR A		;
	RET		;
 
WTRDY	LD HL COPST	;
	DI
	BIT READY (HL)	;
	RES READY (HL)	;
	RET NZ		;
	EI
	JR WTRDY	;
	EJECT
LDBUFF	PUSH HL
	POP IX
	INC HL
	INC HL
LDREGS	LD C (HL)	;
	INC HL
	LD B (HL)
	INC HL
	LD E (HL)
	INC HL
	LD D (HL)
	INC HL
	RET
 
TPSYN	CALL TPSYN1
	LD A SYNTAXERR
	PUSH HL
	PUSH BC
	LD C 6
	DEFW WMKBUFF
	POP BC
	POP DE
	RET NC
	POP BC
	POP BC
	RET
 
TPSYN1	LD A B
	OR A
	SCF
	RET NZ
	LD B 4
	LD A C
	OR A
	RET Z
	LD A (HL)
	SUB '*'
	OR A
	RET NZ
	INC HL
	DEC C
	CALL RDBYTE
	RET C
	OR A
	CCF
	RET Z
	LD B A
	LD A C
	OR A
	RET Z
	LD A (HL)
	CP ':'
	SCF
	RET NZ
	CCF
	INC HL
	DEC C
	RET
	EJECT
CR	EQU 13
LF	EQU 10
 
SENDSTRING	PUSH HL
	PUSH DE
	PUSH BC
	PUSH AF
	BIT 0 (IX+FLAGS)
	JR NZ CANTDO
	XOR A
	LD E A
	LD B (IX+CTEMP)
	CP B
	JR Z SENDNEWLINE
SENDAGAIN	LD A (HL)
	INC HL
	DEFW ZOUTPUT
	DJNZ SENDAGAIN
 
SENDNEWLINE	LD A CR
	DEFW ZOUTPUT
CANTDO	POP AF
	POP BC
	POP DE
	POP HL
	RET
 
CPSTRINGS	PUSH HL
	PUSH DE
	PUSH BC
AGAIN	LD A (DE)
	CP (HL)
	JR NZ LEAVE
	INC HL
	INC DE
	DEC C
	JR NZ AGAIN
LEAVE	POP BC
	POP DE
	POP HL
	RET
 
BRACKET	PUSH AF
	LD A C
	OR A
	JR Z NOSTRING
	LD A (DE)
	CP ')'
	JR NZ NOSTRING
	SET SUPPRESS (HL)
	DEC C
	INC DE
NOSTRING	POP AF
	RET
                                                                                                                          