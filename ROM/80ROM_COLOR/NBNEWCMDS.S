;Newbrain new commands

                GLOBAL PATCHCMDS

		;NBROM FUNCTION & VARS
		ZCM2HL EQU $01D7	;CMD TO HL FOR PARAMS
		WEXPN EQU $18DF
		WNUMEXP EQU $16DF 	;GET NUMERIC PARAM
		WCHKCOM EQU $40DF	;CHECK FOR COMMA
		PSCAN EQU $A2D4;
		TPLOT EQU $A35A
		ZCMONE EQU $57D7 
		XTABLE EQU $DD14
		XTABL2 EQU $DE00
		XTABL3 EQU $A443
		LPCODE EQU $56
		ENTER EQU $C335
		WCM2HL EQU $01DF	;CMD TO HL FOR PARAMS
		WFORMAT EQU $47DF
		WCHKOPN EQU $44DF	;CHECK OPEN PARENTHESIS
	
		ZPTMSG	EQU $39D7
  		ZRDLN2 EQU $4FD7
		TEXT EQU $A334
		GUSTP EQU $DC36
		LDUSTP EQU $C58C
		CSTOP1 EQU $CA85
		XRUN1D EQU $C1F2

;NOT NEEDED
		GFORP EQU $D1A0
		ZRDLN2 EQU $4FD7
		OUTCON EQU 6
		ZBLKOUT EQU $3DE7
		


		
		;everything is in RAM, FPGA controls write signal
PATCHCMDS:	LD A,11b		;DISABLE INTS & DISABLE NB=RAM WRITABLE
		OUT (INTENB),A
		;FOR MY NEW CMDS 
		;JR OT2
		LD HL,$A2F9
		LD (HL),$CD ;CALL
		LD DE,CHKNEWCMD
		INC HL
		LD (HL),E
		INC HL
		LD (HL),D
		LD HL,$A485		;PXCL3
		LD (HL),$C3 ;JP
		LD DE,OSXCL3
		INC HL
		LD (HL),E
		INC HL
		LD (HL),D
		;FOR COLOR INTERCEPTION ON TEXT SCREEN
	;	LD HL,$E1F1 ;SHOWCURSOR
	;	LD (HL),$CD ;CALL
	;	LD DE, MDLINT_SHOWCUR
	;	INC HL
	;	LD (HL),E
	;	INC HL
	;	LD (HL),D

		LD HL,$E9F1 ;PRINT EDITOR
		LD (HL),$CD ;CALL
		LD DE, MDLINT_PRNEDT
		INC HL
		LD (HL),E
		INC HL
		LD (HL),D

		LD HL,$ECD7 ;PRINT EDITOR
		LD (HL),$CD ;CALL
		LD DE, MDLINT_PUT31
		INC HL
		LD (HL),E
		INC HL
		LD (HL),D

		LD HL,$ECDF ;PRINT BLANK
		LD (HL),$CD ;CALL
		LD DE, MDLINT_BLANK
		INC HL
		LD (HL),E
		INC HL
		LD (HL),D

	;	LD HL,$E8FB ;PRINT ZERO
	;	LD (HL),$CD ;CALL
	;	LD DE, MDLINT_ZERO
	;	INC HL
	;	LD (HL),E
	;	INC HL
	;	LD (HL),D

	;	LD HL,$E91B ;PRINT BLANK2
	;	LD (HL),$CD ;CALL
	;	LD DE, MDLINT_BLANK2
	;	INC HL
	;	LD (HL),E
	;	INC HL
	;	LD (HL),D

OT2:		LD A,01b		;DISABLE INTS & ENABLE NB=RAM NON WRITABLE
		OUT (INTENB),A		
		RET


OSXCL3:		LD BC,XTABLE
		JP M,ENTER
		LD BC,XTABL2
		CP LPCODE
		JP C,ENTER       ;IF <$56 GOTO TAB2 
		LD BC,XTABL3
		CP OSCODE
		JP C,ENTER	;IF <$62 GOTO TAB3
		LD BC,XTABL4	;ELSE  OUR TAB4
		JP ENTER

CHKNEWCMD:	;JR OT
		PUSH AF
		PUSH IX
		PUSH IY
		PUSH DE
		LD HL,TOS
		CALL PSCAN
		CALL NC, COSCMD
		POP DE
		POP IY
		POP IX
		POP AF
OT:		LD HL,TPLOT
		RET

		PARAMS EQU MYNUM		


;COMPILE OS CMD
COSCMD:		LD HL,OSLST
		CALL PSCAN	;check for any of the OS COMMAND-list
		RET C
		LD H,C		;THE OS LIST COMMAND ID ON C
		LD L,YOSCMD	;THE OS COMMAND
		DEFW ZCM2HL
		DEC B		;CHECK FOR ARGS
		JR Z,NOARGS	;NO ARGS
		DEC C		; CCD
		JR NZ, NXTCMD0
		;HERE IF COMMAND HAS A PARAM
		;CURRENTLY ONLY CD HAS A TEXT PARAM
		;ELSE CHECK C TO SEE WHICH COMMAND
		DEFW WEXPN	;GET PARAM for cd string
		RET
NOARGS:		RET C
		LD A,YOSEND
		JP CSTOP1
NXTCMD0:	DEC C		;COLOR COMMAND HAS 2 PARAMS
		RET NZ 		;NZ MEANS OVER CMD 3 SO ERROR
		;HERE FOR COLOR 2 NUMERIC PARAMS
NXTPARAM:	PUSH BC		;NUMEXP smashes BC,DE
		DEFW WNUMEXP	;
		POP BC
		RET C
   		LD A,YCOLPAR	;PARAM HERE
       		DEFW ZCMONE	;
		DEC B
		JR Z, NPEX	;Last argument?
		DEFW WCHKCOM	;CHECK FOR COMMA
		JR NXTPARAM		
NPEX:		LD A,YOSEND	;NO MORE PARAMS OS COMMAND ENDED
		JP CSTOP1
	
		

;OSCMDTBL:	DEFW CMD_DIR
;		DEFW CMD_CD
;		DEFW CMD_COL

CDIR	EQU 0
CCD	EQU 1
CCOL 	EQU 2




OSCODE  EQU (0B1H.SHL.1).AND.0FFH 
XTABL4	EQU $-OSCODE
; X table for  10XXXXXX type OP codes
XBASEN4 EQU XTABL4-100H ;so Ycode is table displ. +80H

 
YOSCMD  EQU ($-XBASEN4)/2        
        DEFW XOSCMD

YOSEND	EQU ($-XBASEN4)/2        
        DEFW XOSEND

YOSCOL	EQU ($-XBASEN4)/2        
        DEFW XCOL

YCOLPAR	EQU ($-XBASEN4)/2        
	DEFW XCOLPAR


XOSCMD:	LD A,(HL)	;GET SUB COMMAND 0=DIR 1=CD 2=COL
	OR A
	JR Z,CMD_DIR
	DEC A
	JR Z,CMD_CD
	DEC A
	JP Z,CMD_COL
	;SHOULD NOT HAVE COME HERE
	RET

XOSEND: CALL GFORP
	CALL LDUSTP
	RET

XCOL:   JP CMD_COL

XCOLPAR: JP CMD_COLPAR


		;new command
TOS: 	DEFB 1
	DEFM 'O'
	DEFB 'S'+80H

OSLST:	DEFB 3	;no of sub-commands
 
	DEFM 'DI'		
	DEFB 'R'+80H,CDIR,0+1  ;+1 OF ARGS
 
	DEFM 'C'		
	DEFB 'D'+80H,CCD,1+1

	DEFM 'CO'		
	DEFB 'L'+80H,CCOL,2+1




CMD_DIR:	DEFW ZPTMSG	;
		DEFB 17
		DEFB $0D
		DEFM "---[DIR INFO]--"
		DEFB $0D
		CALL STRG_DIRLIST		;PRINT DIR
		RET
	
CMD_CD:		CALL GUSTP			;SETS HL FROM IX+11,12 USRTOP
;188)   D92B CD 36 DC    		        CALL GUSTP      ;HL=loc(string on stack)	;HL=loc(string on stack)
;189)   D92E 4E          		        LD C,(HL)	;
;190)   D92F 23          		        INC HL	;
;191)   D930 46          		        LD B,(HL)               ;BC=length(string)	;BC=length(string)
;192)   D931 23          		        INC HL                  ;HL=loc(str.)	;HL=loc(str.)
;193)   D932 09          		        ADD HL,BC               ;HL=loc(var. on stack)	;HL=loc(var. on stack)
;194)   D933 5E          		        LD E,(HL)	;
;195)   D934 23          		        INC HL	;
;196)   D935 56          		        LD D,(HL)               ;DE=loc(var.s.t.entry)+2	;DE=loc(var.s.t.entry)+2

		CALL STRG_DIRCHG
		JR C, CD_ERR
		LD A,150			;ERROR MISSING FILE
		JR Z,CD_ERR
		;OPEN OK ADD TO DIRNM
		;PUSH HL
		;DEFW ZPTMSG	;
		;DEFB 6
		;DEFM "DIR OK"
		;POP HL
		CALL STRG_DIRNMCHG
		JR CD_CONT
CD_ERR:		;ERROR ON OPEN DIR		
		PUSH HL
		PUSH AF		
		DEFW ZPTMSG	;
		DEFB 5
		DEFM "ERR_R"
		POP AF		
		CALL SOUTAS		
		POP HL		
CD_CONT:	PUSH AF				;SAVE FLAGS		
		;FIND ZT ADD 4 AND SAVE TO USER TOP
		LD D,H
		LD E,L
CD_AGN:		LD A,(DE)
		CP 0
		LD A,0
		LD (DE),A  		;ZERO THIS
		INC DE
		JR NZ,CD_AGN
		LD B,4
CD_AGN2: 	LD (DE),A
		INC DE
		DJNZ CD_AGN2
		;PRINT CURRENT DIR
		PUSH HL
		PUSH DE
		LD HL,DIRNM
NXTCHR:		LD A,(HL)
		OR A 
		JR Z,NXTPATH
		DEFW WPTCHAR
		INC HL
		JR NXTCHR
NXTPATH:	INC HL
		LD A,(HL)
		OR A
		JR NZ,NXTCHR
		POP DE
		POP HL
		EX DE,HL
		CALL LDUSTP
				;FIND A WAY TO CLEAN OUR GARBAGE
		;CF MEANS ERROR
				
		POP AF		;REST FLAGS		
		XOR A
		RET



; SET COLOR FORE,BACK 
;IT CALL 3 TIMES
; 1ST FOR THE COMMAND, 2ND 1ST PARAM, 3RD 2ND PARAM
CMD_COL:	PUSH HL
		LD DE,PARAMS
		LD (DE),A 	;ZERO
		JP XRUN1D

;HERE FOR THE PARAMS
CMD_COLPAR:	PUSH HL
		CALL GUSTP 		;HL POINTS TO 1st PARAM
		INC HL		;POSITION TO PARAM		
		EX DE,HL	;DE IN PARAM POS
		LD HL,PARAMS
		INC (HL)
		LD A,(HL)		
		INC HL
		CP 1
		JR Z, SVPAR
		;NO NEED TO SAVE THE SECOND PARAM
		LD A,(HL) 	;1ST PARAM TO A FROM SV POS
		EX DE,HL
		LD B,(HL)	;2ND PARAM FROM USER STACK
		CALL DOSETCOL
COLPAREX:	JP XRUN1D

SVPAR:		EX DE,HL	;HL IN PARAM POS, DE ON PARAMS 1 OR 2
		LD A,(HL)
		LD (DE),A 		
		JR COLPAREX

;A=FORECOLOR, B=BACKCOLOR
DOSETCOL:	SLA A 	;HI NIBBLE IS FORE COLOR
		SLA A 
		SLA A 
		SLA A 		
				;LOW NIBBLE IS BACK COLOR				
		OR B		;MERGE HIGH NIBBLE
		OUT (DEVCLR),A	;SEND IT TO THE COLOR SCREEN
		RET